[{"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\index.js":"1","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\DashboardContext.js":"2","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\App.js":"3","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\WarningsContext.js":"4","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\NavigationContext.js":"5","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\WarningsUpdateContext.js":"6","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\VehicleContext.js":"7","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\MapsContext.js":"8","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\GroupsContext.js":"9","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\ViewsContext.js":"10","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\AuditorsContext.js":"11","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\LoginContext.js":"12","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Admin.js":"13","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Login.js":"14","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Error.js":"15","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\ErrorBoundary.js":"16","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enviroment.js":"17","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\NotificationHistory.js":"18","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\WarningConfigHistory.js":"19","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\SessionUtils.js":"20","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\UserIdEnum.js":"21","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\GroupTypeEnum.js":"22","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\StatusEnum.js":"23","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\GroupsEnum.js":"24","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\collections.js":"25","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\AxiosUtils.js":"26","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\http\\configure-http.js":"27","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\SeverityEnum.js":"28","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\routes.js":"29","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Sidebar.js":"30","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Footer.js":"31","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\http\\create-http-agents.js":"32","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Navbar.js":"33","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Loading.js":"34","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\ViewsCreator.js":"35","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\validate.js":"36","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationStatus.js":"37","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\forms.js":"38","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\rules\\NotificationRules.js":"39","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Auditors.js":"40","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Camera.js":"41","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\PoliceCars.js":"42","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Maps.js":"43","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Groups.js":"44","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\mask.js":"45","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Companys.js":"46","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Status.js":"47","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Vehicles.js":"48","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\Traffic.js":"49","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\DfeIssuance.js":"50","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Notification\\Notifications.js":"51","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\MessageModal.js":"52","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\ModalConsts.js":"53","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\Warnings.js":"54","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\bell\\NotificationBell.js":"55","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\bell\\PendingBell.js":"56","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\MaskEnum.js":"57","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\errorTreatment.js":"58","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\LockEnum.js":"59","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\mapOptions.js":"60","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Notification.js":"61","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\panels\\WarningConfigPanel.js":"62","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\ModalTypeEnum.js":"63","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\RevisionModal.js":"64","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\ConfirmationModal .js":"65","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\format-data.js":"66","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\filters.js":"67","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\EditionButtons.js":"68","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\ModalEditionButtons.js":"69","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Notification\\utils\\filters.js":"70","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Notification\\utils\\format-data.js":"71","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\filters.js":"72","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelector.js":"73","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\Table.js":"74","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadNotificationPendingJobs.js":"75","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useAsync.js":"76","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Event.js":"77","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useNotification.js":"78","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\WarningConfig.js":"79","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\NfeWarningTable.js":"80","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\MdfeWarningTable.js":"81","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficDfeTable.js":"82","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficNoDfeTable.js":"83","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useModalWithData.js":"84","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\Severity.js":"85","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\rules\\WarningConfigRules.js":"86","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\WarningTable.js":"87","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\ConfigTypeEnum.js":"88","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Tabs.js":"89","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\TagsInput.js":"90","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useToogle.js":"91","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\SimpleMapModal.js":"92","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningConfigModal\\WarningConfigModal.js":"93","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\NoficationActionButtons.js":"94","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationTypeEnum.js":"95","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\SuspensionModal\\SuspensionModal.js":"96","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationPendingModal.js":"97","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\PauseButton.js":"98","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningClosingModal.js":"99","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelectorItem.js":"100","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\HomologationModal.js":"101","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadNearClosingWarningConfig.js":"102","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\MapLegend.js":"103","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\constants.js":"104","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NearClosingWarningModal\\NearClosingWarningModal.js":"105","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\Pagination.js":"106","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\NotificationModal.js":"107","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\LocationTrackingModal\\LocationTrackingModal.js":"108","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\WarningModal.js":"109","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\SelectableTable.js":"110","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\WarningTagsInput.js":"111","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\utils\\filters.js":"112","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\filterPresets.js":"113","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\group\\GroupsInput.js":"114","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\AuditorFindModal.js":"115","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useAbortController.js":"116","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\format-data.js":"117","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\filters.js":"118","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\User.js":"119","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\VehicleModal.js":"120","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficTimestamp.js":"121","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficLastLocations.js":"122","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\Plate.js":"123","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\getRandomImage.js":"124","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\WarningDfe.js":"125","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Mdfe.js":"126","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\Tag.js":"127","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\TrafficImageModal\\TrafficImageModal.js":"128","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\Warning.js":"129","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningDfeModal\\WarningDfeModal.js":"130","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\FiltersEnum.js":"131","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\format-data.js":"132","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\ViewFiltersOptions.js":"133","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\DfeLink.js":"134","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Dfe.js":"135","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\DfeModal\\DfeModal.js":"136","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\DesignationPanel.js":"137","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\FiscalActionPanel.js":"138","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\EventPanel.js":"139","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\ReportPanel.js":"140","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\rules.js":"141","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\format-data.js":"142","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\constants.js":"143","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\toDMS.js":"144","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\image.js":"145","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\HomologationPanel.js":"146","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\DfeIssuanceModal\\DfeIssueanceModal.js":"147","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadVehicleLocations.js":"148","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadPoliceCarLocations.js":"149","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\group\\Group.js":"150","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\TableLoading.js":"151","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSimpleInput.js":"152","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Image.js":"153","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\GroupsModal.js":"154","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadMdfeData.js":"155","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\NfeTable.js":"156","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\CteTable.js":"157","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\MdfeTable.js":"158","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadDfeData.js":"159","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\BlankRowTable.js":"160","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Cte.js":"161","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Nfe.js":"162","C:\\aria\\cicc-app\\front-end\\src\\index.js":"163","C:\\aria\\cicc-app\\front-end\\src\\context\\DashboardContext.js":"164","C:\\aria\\cicc-app\\front-end\\src\\context\\NavigationContext.js":"165","C:\\aria\\cicc-app\\front-end\\src\\App.js":"166","C:\\aria\\cicc-app\\front-end\\src\\context\\WarningsContext.js":"167","C:\\aria\\cicc-app\\front-end\\src\\context\\GroupsContext.js":"168","C:\\aria\\cicc-app\\front-end\\src\\context\\VehicleContext.js":"169","C:\\aria\\cicc-app\\front-end\\src\\context\\AuditorsContext.js":"170","C:\\aria\\cicc-app\\front-end\\src\\context\\MapsContext.js":"171","C:\\aria\\cicc-app\\front-end\\src\\context\\LoginContext.js":"172","C:\\aria\\cicc-app\\front-end\\src\\context\\WarningsUpdateContext.js":"173","C:\\aria\\cicc-app\\front-end\\src\\context\\ViewsContext.js":"174","C:\\aria\\cicc-app\\front-end\\src\\layouts\\Admin.js":"175","C:\\aria\\cicc-app\\front-end\\src\\layouts\\Login.js":"176","C:\\aria\\cicc-app\\front-end\\src\\layouts\\Error.js":"177","C:\\aria\\cicc-app\\front-end\\src\\layouts\\WarningConfigHistory.js":"178","C:\\aria\\cicc-app\\front-end\\src\\common\\enviroment.js":"179","C:\\aria\\cicc-app\\front-end\\src\\common\\ErrorBoundary.js":"180","C:\\aria\\cicc-app\\front-end\\src\\layouts\\NotificationHistory.js":"181","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\GroupsEnum.js":"182","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\UserIdEnum.js":"183","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\StatusEnum.js":"184","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\GroupTypeEnum.js":"185","C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\collections.js":"186","C:\\aria\\cicc-app\\front-end\\src\\common\\SessionUtils.js":"187","C:\\aria\\cicc-app\\front-end\\src\\axios\\http\\configure-http.js":"188","C:\\aria\\cicc-app\\front-end\\src\\axios\\AxiosUtils.js":"189","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\SeverityEnum.js":"190","C:\\aria\\cicc-app\\front-end\\src\\routes.js":"191","C:\\aria\\cicc-app\\front-end\\src\\axios\\http\\create-http-agents.js":"192","C:\\aria\\cicc-app\\front-end\\src\\components\\Sidebar.js":"193","C:\\aria\\cicc-app\\front-end\\src\\components\\Footer.js":"194","C:\\aria\\cicc-app\\front-end\\src\\components\\Navbar.js":"195","C:\\aria\\cicc-app\\front-end\\src\\layouts\\Loading.js":"196","C:\\aria\\cicc-app\\front-end\\src\\views\\ViewsCreator.js":"197","C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\validate.js":"198","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationStatus.js":"199","C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\forms.js":"200","C:\\aria\\cicc-app\\front-end\\src\\common\\rules\\NotificationRules.js":"201","C:\\aria\\cicc-app\\front-end\\src\\views\\Camera.js":"202","C:\\aria\\cicc-app\\front-end\\src\\views\\PoliceCars.js":"203","C:\\aria\\cicc-app\\front-end\\src\\views\\Auditors.js":"204","C:\\aria\\cicc-app\\front-end\\src\\views\\Maps.js":"205","C:\\aria\\cicc-app\\front-end\\src\\views\\Groups.js":"206","C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\mask.js":"207","C:\\aria\\cicc-app\\front-end\\src\\views\\Companys.js":"208","C:\\aria\\cicc-app\\front-end\\src\\views\\Status.js":"209","C:\\aria\\cicc-app\\front-end\\src\\views\\Vehicles.js":"210","C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\DfeIssuance.js":"211","C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\Traffic.js":"212","C:\\aria\\cicc-app\\front-end\\src\\views\\Notification\\Notifications.js":"213","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\ModalConsts.js":"214","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\MessageModal.js":"215","C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\Warnings.js":"216","C:\\aria\\cicc-app\\front-end\\src\\components\\bell\\NotificationBell.js":"217","C:\\aria\\cicc-app\\front-end\\src\\components\\bell\\PendingBell.js":"218","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\MaskEnum.js":"219","C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\errorTreatment.js":"220","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\LockEnum.js":"221","C:\\aria\\cicc-app\\front-end\\src\\common\\mapOptions.js":"222","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Notification.js":"223","C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficDfeTable.js":"224","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\ModalTypeEnum.js":"225","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\RevisionModal.js":"226","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\ConfirmationModal .js":"227","C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\panels\\WarningConfigPanel.js":"228","C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\filters.js":"229","C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\format-data.js":"230","C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\filters.js":"231","C:\\aria\\cicc-app\\front-end\\src\\views\\Notification\\utils\\format-data.js":"232","C:\\aria\\cicc-app\\front-end\\src\\views\\Notification\\utils\\filters.js":"233","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\Table.js":"234","C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useAsync.js":"235","C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficNoDfeTable.js":"236","C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadNotificationPendingJobs.js":"237","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\LocationTrackingModal\\LocationTrackingModal.js":"238","C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\WarningTable.js":"239","C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\Severity.js":"240","C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\MdfeWarningTable.js":"241","C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\NfeWarningTable.js":"242","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\WarningConfig.js":"243","C:\\aria\\cicc-app\\front-end\\src\\common\\rules\\WarningConfigRules.js":"244","C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useModalWithData.js":"245","C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\utils\\filters.js":"246","C:\\aria\\cicc-app\\front-end\\src\\components\\Tabs.js":"247","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\ConfigTypeEnum.js":"248","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Event.js":"249","C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useNotification.js":"250","C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\TagsInput.js":"251","C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\EditionButtons.js":"252","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningConfigModal\\WarningConfigModal.js":"253","C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useToogle.js":"254","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\SimpleMapModal.js":"255","C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\NoficationActionButtons.js":"256","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationTypeEnum.js":"257","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationPendingModal.js":"258","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\SuspensionModal\\SuspensionModal.js":"259","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningClosingModal.js":"260","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\HomologationModal.js":"261","C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\ModalEditionButtons.js":"262","C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadNearClosingWarningConfig.js":"263","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\Pagination.js":"264","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\VehicleModal.js":"265","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NearClosingWarningModal\\NearClosingWarningModal.js":"266","C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\DfeLink.js":"267","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\constants.js":"268","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\NotificationModal.js":"269","C:\\aria\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelector.js":"270","C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficLastLocations.js":"271","C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficTimestamp.js":"272","C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\Plate.js":"273","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\DfeModal\\DfeModal.js":"274","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\WarningModal.js":"275","C:\\aria\\cicc-app\\front-end\\src\\components\\MapLegend.js":"276","C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\WarningTagsInput.js":"277","C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\format-data.js":"278","C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\filters.js":"279","C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\filterPresets.js":"280","C:\\aria\\cicc-app\\front-end\\src\\components\\group\\GroupsInput.js":"281","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\SelectableTable.js":"282","C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useAbortController.js":"283","C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\PauseButton.js":"284","C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\getRandomImage.js":"285","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Dfe.js":"286","C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\Warning.js":"287","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\TrafficImageModal\\TrafficImageModal.js":"288","C:\\aria\\cicc-app\\front-end\\src\\components\\ViewFiltersOptions.js":"289","C:\\aria\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelectorItem.js":"290","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\User.js":"291","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\format-data.js":"292","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\DesignationPanel.js":"293","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\EventPanel.js":"294","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\FiscalActionPanel.js":"295","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\ReportPanel.js":"296","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\HomologationPanel.js":"297","C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\Tag.js":"298","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Mdfe.js":"299","C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\FiltersEnum.js":"300","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\image.js":"301","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\constants.js":"302","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\format-data.js":"303","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\rules.js":"304","C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\WarningDfe.js":"305","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\DfeIssuanceModal\\DfeIssueanceModal.js":"306","C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadVehicleLocations.js":"307","C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadPoliceCarLocations.js":"308","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\TableLoading.js":"309","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningDfeModal\\WarningDfeModal.js":"310","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\AuditorFindModal.js":"311","C:\\aria\\cicc-app\\front-end\\src\\components\\group\\Group.js":"312","C:\\aria\\cicc-app\\front-end\\src\\common\\toDMS.js":"313","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\BlankRowTable.js":"314","C:\\aria\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSimpleInput.js":"315","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\NfeTable.js":"316","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\CteTable.js":"317","C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\MdfeTable.js":"318","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Image.js":"319","C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadDfeData.js":"320","C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\GroupsModal.js":"321","C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadMdfeData.js":"322","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Cte.js":"323","C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Nfe.js":"324"},{"size":2147,"mtime":1714499901044,"results":"325","hashOfConfig":"326"},{"size":5305,"mtime":1714499901035,"results":"327","hashOfConfig":"326"},{"size":1414,"mtime":1714499900715,"results":"328","hashOfConfig":"326"},{"size":6860,"mtime":1714499901042,"results":"329","hashOfConfig":"326"},{"size":436,"mtime":1714499901038,"results":"330","hashOfConfig":"326"},{"size":1625,"mtime":1714499901043,"results":"331","hashOfConfig":"326"},{"size":422,"mtime":1714499901040,"results":"332","hashOfConfig":"326"},{"size":2073,"mtime":1714499901038,"results":"333","hashOfConfig":"326"},{"size":7599,"mtime":1714499901036,"results":"334","hashOfConfig":"326"},{"size":2370,"mtime":1714499901041,"results":"335","hashOfConfig":"326"},{"size":4025,"mtime":1714499901033,"results":"336","hashOfConfig":"326"},{"size":558,"mtime":1714499901037,"results":"337","hashOfConfig":"326"},{"size":2315,"mtime":1714500596980,"results":"338","hashOfConfig":"326"},{"size":11790,"mtime":1714499901047,"results":"339","hashOfConfig":"326"},{"size":2639,"mtime":1714499901046,"results":"340","hashOfConfig":"326"},{"size":838,"mtime":1714499900816,"results":"341","hashOfConfig":"326"},{"size":1227,"mtime":1714500640448,"results":"342","hashOfConfig":"326"},{"size":10785,"mtime":1714499901048,"results":"343","hashOfConfig":"326"},{"size":8260,"mtime":1714499901049,"results":"344","hashOfConfig":"326"},{"size":10066,"mtime":1714499900818,"results":"345","hashOfConfig":"326"},{"size":191,"mtime":1714499900835,"results":"346","hashOfConfig":"326"},{"size":200,"mtime":1714499900825,"results":"347","hashOfConfig":"326"},{"size":1736,"mtime":1714499900834,"results":"348","hashOfConfig":"326"},{"size":339,"mtime":1714499900826,"results":"349","hashOfConfig":"326"},{"size":2072,"mtime":1714499900864,"results":"350","hashOfConfig":"326"},{"size":6593,"mtime":1714499900795,"results":"351","hashOfConfig":"326"},{"size":241,"mtime":1714499900812,"results":"352","hashOfConfig":"326"},{"size":194,"mtime":1714499900833,"results":"353","hashOfConfig":"326"},{"size":4554,"mtime":1714499901053,"results":"354","hashOfConfig":"326"},{"size":3291,"mtime":1714499900878,"results":"355","hashOfConfig":"326"},{"size":2492,"mtime":1714499900874,"results":"356","hashOfConfig":"326"},{"size":381,"mtime":1714499900812,"results":"357","hashOfConfig":"326"},{"size":13268,"mtime":1714499900877,"results":"358","hashOfConfig":"326"},{"size":253,"mtime":1714499901047,"results":"359","hashOfConfig":"326"},{"size":3087,"mtime":1714499901084,"results":"360","hashOfConfig":"326"},{"size":4941,"mtime":1714499900870,"results":"361","hashOfConfig":"326"},{"size":4953,"mtime":1714499900832,"results":"362","hashOfConfig":"326"},{"size":4329,"mtime":1714499900866,"results":"363","hashOfConfig":"326"},{"size":9494,"mtime":1714499900859,"results":"364","hashOfConfig":"326"},{"size":21514,"mtime":1714499901055,"results":"365","hashOfConfig":"326"},{"size":20717,"mtime":1714499901056,"results":"366","hashOfConfig":"326"},{"size":17555,"mtime":1714499901074,"results":"367","hashOfConfig":"326"},{"size":29496,"mtime":1714499901068,"results":"368","hashOfConfig":"326"},{"size":28327,"mtime":1714499901058,"results":"369","hashOfConfig":"326"},{"size":5231,"mtime":1714499900869,"results":"370","hashOfConfig":"326"},{"size":5625,"mtime":1714499901057,"results":"371","hashOfConfig":"326"},{"size":10490,"mtime":1714499901075,"results":"372","hashOfConfig":"326"},{"size":19745,"mtime":1714499901083,"results":"373","hashOfConfig":"326"},{"size":6152,"mtime":1714499901076,"results":"374","hashOfConfig":"326"},{"size":4639,"mtime":1714499901060,"results":"375","hashOfConfig":"326"},{"size":22499,"mtime":1714499901070,"results":"376","hashOfConfig":"326"},{"size":2095,"mtime":1714499900965,"results":"377","hashOfConfig":"326"},{"size":297,"mtime":1714499900966,"results":"378","hashOfConfig":"326"},{"size":27492,"mtime":1714499901086,"results":"379","hashOfConfig":"326"},{"size":4810,"mtime":1714499900895,"results":"380","hashOfConfig":"326"},{"size":7290,"mtime":1714499900900,"results":"381","hashOfConfig":"326"},{"size":174,"mtime":1714499900828,"results":"382","hashOfConfig":"326"},{"size":3223,"mtime":1714499900865,"results":"383","hashOfConfig":"326"},{"size":427,"mtime":1714499900827,"results":"384","hashOfConfig":"326"},{"size":597,"mtime":1714499900845,"results":"385","hashOfConfig":"326"},{"size":19363,"mtime":1714499900853,"results":"386","hashOfConfig":"326"},{"size":7271,"mtime":1714499901088,"results":"387","hashOfConfig":"326"},{"size":579,"mtime":1714499900831,"results":"388","hashOfConfig":"326"},{"size":2401,"mtime":1714499900989,"results":"389","hashOfConfig":"326"},{"size":1967,"mtime":1714499900950,"results":"390","hashOfConfig":"326"},{"size":4817,"mtime":1714499901090,"results":"391","hashOfConfig":"326"},{"size":6390,"mtime":1714499901089,"results":"392","hashOfConfig":"326"},{"size":1730,"mtime":1714499900925,"results":"393","hashOfConfig":"326"},{"size":1535,"mtime":1714499900925,"results":"394","hashOfConfig":"326"},{"size":5248,"mtime":1714499901071,"results":"395","hashOfConfig":"326"},{"size":7374,"mtime":1714499901072,"results":"396","hashOfConfig":"326"},{"size":1476,"mtime":1714499900865,"results":"397","hashOfConfig":"326"},{"size":14020,"mtime":1714499900882,"results":"398","hashOfConfig":"326"},{"size":8922,"mtime":1714499901022,"results":"399","hashOfConfig":"326"},{"size":5618,"mtime":1714499900808,"results":"400","hashOfConfig":"326"},{"size":672,"mtime":1714499900839,"results":"401","hashOfConfig":"326"},{"size":2651,"mtime":1714499900849,"results":"402","hashOfConfig":"326"},{"size":13494,"mtime":1714499900842,"results":"403","hashOfConfig":"326"},{"size":11596,"mtime":1714499900855,"results":"404","hashOfConfig":"326"},{"size":6554,"mtime":1714499901064,"results":"405","hashOfConfig":"326"},{"size":6663,"mtime":1714499901063,"results":"406","hashOfConfig":"326"},{"size":5140,"mtime":1714499901078,"results":"407","hashOfConfig":"326"},{"size":4198,"mtime":1714499901080,"results":"408","hashOfConfig":"326"},{"size":1489,"mtime":1714499900841,"results":"409","hashOfConfig":"326"},{"size":430,"mtime":1714499901009,"results":"410","hashOfConfig":"326"},{"size":8086,"mtime":1714499900860,"results":"411","hashOfConfig":"326"},{"size":19706,"mtime":1714499901081,"results":"412","hashOfConfig":"326"},{"size":516,"mtime":1714499900822,"results":"413","hashOfConfig":"326"},{"size":622,"mtime":1714499900878,"results":"414","hashOfConfig":"326"},{"size":7062,"mtime":1714499901030,"results":"415","hashOfConfig":"326"},{"size":310,"mtime":1714499900844,"results":"416","hashOfConfig":"326"},{"size":1420,"mtime":1714499900990,"results":"417","hashOfConfig":"326"},{"size":24936,"mtime":1714499901000,"results":"418","hashOfConfig":"326"},{"size":5273,"mtime":1714499900925,"results":"419","hashOfConfig":"326"},{"size":175,"mtime":1714499900832,"results":"420","hashOfConfig":"326"},{"size":9931,"mtime":1714499900994,"results":"421","hashOfConfig":"326"},{"size":6502,"mtime":1714499900988,"results":"422","hashOfConfig":"326"},{"size":2661,"mtime":1714499900930,"results":"423","hashOfConfig":"326"},{"size":6426,"mtime":1714499900998,"results":"424","hashOfConfig":"326"},{"size":679,"mtime":1714499900883,"results":"425","hashOfConfig":"326"},{"size":13122,"mtime":1714499900958,"results":"426","hashOfConfig":"326"},{"size":2437,"mtime":1714499900803,"results":"427","hashOfConfig":"326"},{"size":857,"mtime":1714499900875,"results":"428","hashOfConfig":"326"},{"size":668,"mtime":1714499901006,"results":"429","hashOfConfig":"326"},{"size":2321,"mtime":1714499900968,"results":"430","hashOfConfig":"326"},{"size":4922,"mtime":1714499901020,"results":"431","hashOfConfig":"326"},{"size":26010,"mtime":1714499900974,"results":"432","hashOfConfig":"326"},{"size":17782,"mtime":1714499900960,"results":"433","hashOfConfig":"326"},{"size":25715,"mtime":1714499901004,"results":"434","hashOfConfig":"326"},{"size":1988,"mtime":1714499901021,"results":"435","hashOfConfig":"326"},{"size":7491,"mtime":1714499901031,"results":"436","hashOfConfig":"326"},{"size":5580,"mtime":1714499901082,"results":"437","hashOfConfig":"326"},{"size":10835,"mtime":1714499901031,"results":"438","hashOfConfig":"326"},{"size":4310,"mtime":1714499900934,"results":"439","hashOfConfig":"326"},{"size":6131,"mtime":1714499900948,"results":"440","hashOfConfig":"326"},{"size":1015,"mtime":1714499900837,"results":"441","hashOfConfig":"326"},{"size":244,"mtime":1714499901067,"results":"442","hashOfConfig":"326"},{"size":2947,"mtime":1714499901066,"results":"443","hashOfConfig":"326"},{"size":170,"mtime":1714499900854,"results":"444","hashOfConfig":"326"},{"size":5839,"mtime":1714499900997,"results":"445","hashOfConfig":"326"},{"size":679,"mtime":1714499901011,"results":"446","hashOfConfig":"326"},{"size":648,"mtime":1714499901010,"results":"447","hashOfConfig":"326"},{"size":525,"mtime":1714499901009,"results":"448","hashOfConfig":"326"},{"size":84,"mtime":1714499900867,"results":"449","hashOfConfig":"326"},{"size":942,"mtime":1714499901013,"results":"450","hashOfConfig":"326"},{"size":730,"mtime":1714499900851,"results":"451","hashOfConfig":"326"},{"size":2194,"mtime":1714499901028,"results":"452","hashOfConfig":"326"},{"size":1224,"mtime":1714499900996,"results":"453","hashOfConfig":"326"},{"size":418,"mtime":1714499901012,"results":"454","hashOfConfig":"326"},{"size":8959,"mtime":1714499901002,"results":"455","hashOfConfig":"326"},{"size":1965,"mtime":1714499900823,"results":"456","hashOfConfig":"326"},{"size":1314,"mtime":1714499901007,"results":"457","hashOfConfig":"326"},{"size":11951,"mtime":1714499900880,"results":"458","hashOfConfig":"326"},{"size":1131,"mtime":1714499900920,"results":"459","hashOfConfig":"326"},{"size":372,"mtime":1714499900848,"results":"460","hashOfConfig":"326"},{"size":2426,"mtime":1714499900954,"results":"461","hashOfConfig":"326"},{"size":2591,"mtime":1714499900976,"results":"462","hashOfConfig":"326"},{"size":3087,"mtime":1714499900978,"results":"463","hashOfConfig":"326"},{"size":2445,"mtime":1714499900977,"results":"464","hashOfConfig":"326"},{"size":13561,"mtime":1714499900980,"results":"465","hashOfConfig":"326"},{"size":7605,"mtime":1714499900986,"results":"466","hashOfConfig":"326"},{"size":3328,"mtime":1714499900984,"results":"467","hashOfConfig":"326"},{"size":2296,"mtime":1714499900983,"results":"468","hashOfConfig":"326"},{"size":886,"mtime":1714499900862,"results":"469","hashOfConfig":"326"},{"size":1660,"mtime":1714499900985,"results":"470","hashOfConfig":"326"},{"size":19110,"mtime":1714499900979,"results":"471","hashOfConfig":"326"},{"size":3315,"mtime":1714499900952,"results":"472","hashOfConfig":"326"},{"size":1198,"mtime":1714499900810,"results":"473","hashOfConfig":"326"},{"size":1006,"mtime":1714499900809,"results":"474","hashOfConfig":"326"},{"size":2636,"mtime":1714499900932,"results":"475","hashOfConfig":"326"},{"size":296,"mtime":1714499901023,"results":"476","hashOfConfig":"326"},{"size":2468,"mtime":1714499900884,"results":"477","hashOfConfig":"326"},{"size":290,"mtime":1714499900850,"results":"478","hashOfConfig":"326"},{"size":2259,"mtime":1714499900957,"results":"479","hashOfConfig":"326"},{"size":860,"mtime":1714499900800,"results":"480","hashOfConfig":"326"},{"size":4521,"mtime":1714499901018,"results":"481","hashOfConfig":"326"},{"size":2290,"mtime":1714499901016,"results":"482","hashOfConfig":"326"},{"size":5071,"mtime":1714499901018,"results":"483","hashOfConfig":"326"},{"size":2529,"mtime":1714499900799,"results":"484","hashOfConfig":"326"},{"size":293,"mtime":1714499901015,"results":"485","hashOfConfig":"326"},{"size":609,"mtime":1714499900847,"results":"486","hashOfConfig":"326"},{"size":783,"mtime":1714499900852,"results":"487","hashOfConfig":"326"},{"size":2147,"mtime":1714499901044,"results":"488","hashOfConfig":"489"},{"size":5305,"mtime":1714499901035,"results":"490","hashOfConfig":"489"},{"size":436,"mtime":1714499901038,"results":"491","hashOfConfig":"489"},{"size":1414,"mtime":1714499900715,"results":"492","hashOfConfig":"489"},{"size":6860,"mtime":1714499901042,"results":"493","hashOfConfig":"489"},{"size":7599,"mtime":1714499901036,"results":"494","hashOfConfig":"489"},{"size":422,"mtime":1714499901040,"results":"495","hashOfConfig":"489"},{"size":4025,"mtime":1714499901033,"results":"496","hashOfConfig":"489"},{"size":2073,"mtime":1714499901038,"results":"497","hashOfConfig":"489"},{"size":558,"mtime":1714499901037,"results":"498","hashOfConfig":"489"},{"size":1625,"mtime":1714499901043,"results":"499","hashOfConfig":"489"},{"size":2370,"mtime":1714499901041,"results":"500","hashOfConfig":"489"},{"size":2315,"mtime":1714500596980,"results":"501","hashOfConfig":"489"},{"size":11790,"mtime":1714499901047,"results":"502","hashOfConfig":"489"},{"size":2639,"mtime":1714499901046,"results":"503","hashOfConfig":"489"},{"size":8260,"mtime":1714499901049,"results":"504","hashOfConfig":"489"},{"size":1227,"mtime":1714500640448,"results":"505","hashOfConfig":"489"},{"size":838,"mtime":1714499900816,"results":"506","hashOfConfig":"489"},{"size":10785,"mtime":1714499901048,"results":"507","hashOfConfig":"489"},{"size":339,"mtime":1714499900826,"results":"508","hashOfConfig":"489"},{"size":191,"mtime":1714499900835,"results":"509","hashOfConfig":"489"},{"size":1736,"mtime":1714499900834,"results":"510","hashOfConfig":"489"},{"size":200,"mtime":1714499900825,"results":"511","hashOfConfig":"489"},{"size":2072,"mtime":1714499900864,"results":"512","hashOfConfig":"489"},{"size":10066,"mtime":1714499900818,"results":"513","hashOfConfig":"489"},{"size":241,"mtime":1714499900812,"results":"514","hashOfConfig":"489"},{"size":6593,"mtime":1714499900795,"results":"515","hashOfConfig":"489"},{"size":194,"mtime":1714499900833,"results":"516","hashOfConfig":"489"},{"size":4554,"mtime":1714499901053,"results":"517","hashOfConfig":"489"},{"size":381,"mtime":1714499900812,"results":"518","hashOfConfig":"489"},{"size":3291,"mtime":1714499900878,"results":"519","hashOfConfig":"489"},{"size":2492,"mtime":1714499900874,"results":"520","hashOfConfig":"489"},{"size":13268,"mtime":1714499900877,"results":"521","hashOfConfig":"489"},{"size":253,"mtime":1714499901047,"results":"522","hashOfConfig":"489"},{"size":3087,"mtime":1714499901084,"results":"523","hashOfConfig":"489"},{"size":4941,"mtime":1714499900870,"results":"524","hashOfConfig":"489"},{"size":4953,"mtime":1714499900832,"results":"525","hashOfConfig":"489"},{"size":4329,"mtime":1714499900866,"results":"526","hashOfConfig":"489"},{"size":9494,"mtime":1714499900859,"results":"527","hashOfConfig":"489"},{"size":20717,"mtime":1714499901056,"results":"528","hashOfConfig":"489"},{"size":17555,"mtime":1714499901074,"results":"529","hashOfConfig":"489"},{"size":21514,"mtime":1714499901055,"results":"530","hashOfConfig":"489"},{"size":32289,"mtime":1714701084986,"results":"531","hashOfConfig":"489"},{"size":28327,"mtime":1714499901058,"results":"532","hashOfConfig":"489"},{"size":5231,"mtime":1714499900869,"results":"533","hashOfConfig":"489"},{"size":5625,"mtime":1714499901057,"results":"534","hashOfConfig":"489"},{"size":10490,"mtime":1714499901075,"results":"535","hashOfConfig":"489"},{"size":19745,"mtime":1714499901083,"results":"536","hashOfConfig":"489"},{"size":4639,"mtime":1714499901060,"results":"537","hashOfConfig":"489"},{"size":6152,"mtime":1714499901076,"results":"538","hashOfConfig":"489"},{"size":22499,"mtime":1714499901070,"results":"539","hashOfConfig":"489"},{"size":297,"mtime":1714499900966,"results":"540","hashOfConfig":"489"},{"size":2095,"mtime":1714499900965,"results":"541","hashOfConfig":"489"},{"size":27492,"mtime":1714499901086,"results":"542","hashOfConfig":"489"},{"size":4810,"mtime":1714499900895,"results":"543","hashOfConfig":"489"},{"size":7290,"mtime":1714499900900,"results":"544","hashOfConfig":"489"},{"size":174,"mtime":1714499900828,"results":"545","hashOfConfig":"489"},{"size":3223,"mtime":1714499900865,"results":"546","hashOfConfig":"489"},{"size":427,"mtime":1714499900827,"results":"547","hashOfConfig":"489"},{"size":597,"mtime":1714499900845,"results":"548","hashOfConfig":"489"},{"size":19363,"mtime":1714499900853,"results":"549","hashOfConfig":"489"},{"size":5140,"mtime":1714499901078,"results":"550","hashOfConfig":"489"},{"size":579,"mtime":1714499900831,"results":"551","hashOfConfig":"489"},{"size":2401,"mtime":1714499900989,"results":"552","hashOfConfig":"489"},{"size":1967,"mtime":1714499900950,"results":"553","hashOfConfig":"489"},{"size":7271,"mtime":1714499901088,"results":"554","hashOfConfig":"489"},{"size":6390,"mtime":1714499901089,"results":"555","hashOfConfig":"489"},{"size":4817,"mtime":1714499901090,"results":"556","hashOfConfig":"489"},{"size":1476,"mtime":1714499900865,"results":"557","hashOfConfig":"489"},{"size":7374,"mtime":1714499901072,"results":"558","hashOfConfig":"489"},{"size":5248,"mtime":1714499901071,"results":"559","hashOfConfig":"489"},{"size":8922,"mtime":1714499901022,"results":"560","hashOfConfig":"489"},{"size":672,"mtime":1714499900839,"results":"561","hashOfConfig":"489"},{"size":4198,"mtime":1714499901080,"results":"562","hashOfConfig":"489"},{"size":5618,"mtime":1714499900808,"results":"563","hashOfConfig":"489"},{"size":17782,"mtime":1714499900960,"results":"564","hashOfConfig":"489"},{"size":19706,"mtime":1714499901081,"results":"565","hashOfConfig":"489"},{"size":430,"mtime":1714499901009,"results":"566","hashOfConfig":"489"},{"size":6663,"mtime":1714499901063,"results":"567","hashOfConfig":"489"},{"size":6554,"mtime":1714499901064,"results":"568","hashOfConfig":"489"},{"size":11596,"mtime":1714499900855,"results":"569","hashOfConfig":"489"},{"size":8086,"mtime":1714499900860,"results":"570","hashOfConfig":"489"},{"size":1489,"mtime":1714499900841,"results":"571","hashOfConfig":"489"},{"size":5580,"mtime":1714499901082,"results":"572","hashOfConfig":"489"},{"size":622,"mtime":1714499900878,"results":"573","hashOfConfig":"489"},{"size":516,"mtime":1714499900822,"results":"574","hashOfConfig":"489"},{"size":2651,"mtime":1714499900849,"results":"575","hashOfConfig":"489"},{"size":13494,"mtime":1714499900842,"results":"576","hashOfConfig":"489"},{"size":7062,"mtime":1714499901030,"results":"577","hashOfConfig":"489"},{"size":1730,"mtime":1714499900925,"results":"578","hashOfConfig":"489"},{"size":24936,"mtime":1714499901000,"results":"579","hashOfConfig":"489"},{"size":310,"mtime":1714499900844,"results":"580","hashOfConfig":"489"},{"size":1420,"mtime":1714499900990,"results":"581","hashOfConfig":"489"},{"size":5273,"mtime":1714499900925,"results":"582","hashOfConfig":"489"},{"size":175,"mtime":1714499900832,"results":"583","hashOfConfig":"489"},{"size":6502,"mtime":1714499900988,"results":"584","hashOfConfig":"489"},{"size":9931,"mtime":1714499900994,"results":"585","hashOfConfig":"489"},{"size":6426,"mtime":1714499900998,"results":"586","hashOfConfig":"489"},{"size":13122,"mtime":1714499900958,"results":"587","hashOfConfig":"489"},{"size":1535,"mtime":1714499900925,"results":"588","hashOfConfig":"489"},{"size":2437,"mtime":1714499900803,"results":"589","hashOfConfig":"489"},{"size":4922,"mtime":1714499901020,"results":"590","hashOfConfig":"489"},{"size":5839,"mtime":1714499900997,"results":"591","hashOfConfig":"489"},{"size":2321,"mtime":1714499900968,"results":"592","hashOfConfig":"489"},{"size":1131,"mtime":1714499900920,"results":"593","hashOfConfig":"489"},{"size":668,"mtime":1714499901006,"results":"594","hashOfConfig":"489"},{"size":26010,"mtime":1714499900974,"results":"595","hashOfConfig":"489"},{"size":14020,"mtime":1714499900882,"results":"596","hashOfConfig":"489"},{"size":648,"mtime":1714499901010,"results":"597","hashOfConfig":"489"},{"size":679,"mtime":1714499901011,"results":"598","hashOfConfig":"489"},{"size":525,"mtime":1714499901009,"results":"599","hashOfConfig":"489"},{"size":2426,"mtime":1714499900954,"results":"600","hashOfConfig":"489"},{"size":25715,"mtime":1714499901004,"results":"601","hashOfConfig":"489"},{"size":857,"mtime":1714499900875,"results":"602","hashOfConfig":"489"},{"size":7491,"mtime":1714499901031,"results":"603","hashOfConfig":"489"},{"size":244,"mtime":1714499901067,"results":"604","hashOfConfig":"489"},{"size":2947,"mtime":1714499901066,"results":"605","hashOfConfig":"489"},{"size":10835,"mtime":1714499901031,"results":"606","hashOfConfig":"489"},{"size":4310,"mtime":1714499900934,"results":"607","hashOfConfig":"489"},{"size":1988,"mtime":1714499901021,"results":"608","hashOfConfig":"489"},{"size":1015,"mtime":1714499900837,"results":"609","hashOfConfig":"489"},{"size":2661,"mtime":1714499900930,"results":"610","hashOfConfig":"489"},{"size":84,"mtime":1714499900867,"results":"611","hashOfConfig":"489"},{"size":372,"mtime":1714499900848,"results":"612","hashOfConfig":"489"},{"size":418,"mtime":1714499901012,"results":"613","hashOfConfig":"489"},{"size":1224,"mtime":1714499900996,"results":"614","hashOfConfig":"489"},{"size":11951,"mtime":1714499900880,"results":"615","hashOfConfig":"489"},{"size":679,"mtime":1714499900883,"results":"616","hashOfConfig":"489"},{"size":170,"mtime":1714499900854,"results":"617","hashOfConfig":"489"},{"size":1314,"mtime":1714499901007,"results":"618","hashOfConfig":"489"},{"size":2591,"mtime":1714499900976,"results":"619","hashOfConfig":"489"},{"size":2445,"mtime":1714499900977,"results":"620","hashOfConfig":"489"},{"size":3087,"mtime":1714499900978,"results":"621","hashOfConfig":"489"},{"size":13561,"mtime":1714499900980,"results":"622","hashOfConfig":"489"},{"size":19110,"mtime":1714499900979,"results":"623","hashOfConfig":"489"},{"size":2194,"mtime":1714499901028,"results":"624","hashOfConfig":"489"},{"size":730,"mtime":1714499900851,"results":"625","hashOfConfig":"489"},{"size":1965,"mtime":1714499900823,"results":"626","hashOfConfig":"489"},{"size":1660,"mtime":1714499900985,"results":"627","hashOfConfig":"489"},{"size":2296,"mtime":1714499900983,"results":"628","hashOfConfig":"489"},{"size":3328,"mtime":1714499900984,"results":"629","hashOfConfig":"489"},{"size":7605,"mtime":1714499900986,"results":"630","hashOfConfig":"489"},{"size":942,"mtime":1714499901013,"results":"631","hashOfConfig":"489"},{"size":3315,"mtime":1714499900952,"results":"632","hashOfConfig":"489"},{"size":1198,"mtime":1714499900810,"results":"633","hashOfConfig":"489"},{"size":1006,"mtime":1714499900809,"results":"634","hashOfConfig":"489"},{"size":296,"mtime":1714499901023,"results":"635","hashOfConfig":"489"},{"size":8959,"mtime":1714499901002,"results":"636","hashOfConfig":"489"},{"size":6131,"mtime":1714499900948,"results":"637","hashOfConfig":"489"},{"size":2636,"mtime":1714499900932,"results":"638","hashOfConfig":"489"},{"size":886,"mtime":1714499900862,"results":"639","hashOfConfig":"489"},{"size":293,"mtime":1714499901015,"results":"640","hashOfConfig":"489"},{"size":2468,"mtime":1714499900884,"results":"641","hashOfConfig":"489"},{"size":4521,"mtime":1714499901018,"results":"642","hashOfConfig":"489"},{"size":2290,"mtime":1714499901016,"results":"643","hashOfConfig":"489"},{"size":5071,"mtime":1714499901018,"results":"644","hashOfConfig":"489"},{"size":290,"mtime":1714499900850,"results":"645","hashOfConfig":"489"},{"size":2529,"mtime":1714499900799,"results":"646","hashOfConfig":"489"},{"size":2259,"mtime":1714499900957,"results":"647","hashOfConfig":"489"},{"size":860,"mtime":1714499900800,"results":"648","hashOfConfig":"489"},{"size":609,"mtime":1714499900847,"results":"649","hashOfConfig":"489"},{"size":783,"mtime":1714499900852,"results":"650","hashOfConfig":"489"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qs1a9y",{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882"},{"filePath":"883","messages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901"},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926"},{"filePath":"927","messages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931"},{"filePath":"932","messages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"936","messages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"938","messages":"939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944"},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"947","messages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"949","messages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"953","messages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"966","messages":"967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"968","messages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"972","messages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"978","messages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"984","messages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"992"},{"filePath":"993","messages":"994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"999","messages":"1000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},"238s3b",{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1008","messages":"1009","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"1001"},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1014","messages":"1015","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1016","messages":"1017","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"1001"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1020","messages":"1021","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1022","messages":"1023","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"1001"},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"1001"},{"filePath":"1028","messages":"1029","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"1001"},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"1001"},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1034","messages":"1035","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1036","messages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"1001"},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1046","messages":"1047","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1048","messages":"1049","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1050","messages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1052","messages":"1053","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"1001"},{"filePath":"1054","messages":"1055","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"1001"},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"1001"},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1070","messages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1076","messages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"1001"},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"1001"},{"filePath":"1082","messages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1084","messages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1086"},{"filePath":"1087","messages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1089","messages":"1090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1091","messages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1093","messages":"1094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1095","messages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1097","messages":"1098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1099","messages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1105","messages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1111","messages":"1112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1113","messages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1115","messages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1117","messages":"1118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1119","messages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1121","messages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1123","messages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1125","messages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1129","messages":"1130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1131","messages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1135","messages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1137","messages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1139","messages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1145","messages":"1146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1149","messages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1151","messages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1153","messages":"1154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"1001"},{"filePath":"1155","messages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1157","messages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"1001"},{"filePath":"1159","messages":"1160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1161","messages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1163","messages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1165","messages":"1166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1167","messages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1169","messages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1171","messages":"1172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1173","messages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1175","messages":"1176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1177","messages":"1178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1179","messages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"1001"},{"filePath":"1183","messages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1185","messages":"1186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1187","messages":"1188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1189","messages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1191","messages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1197","messages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"1001"},{"filePath":"1199","messages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1201","messages":"1202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1205","messages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1207","messages":"1208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1209","messages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1211","messages":"1212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1213","messages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882","usedDeprecatedRules":"1001"},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1217","messages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1219","messages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1221","messages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1223","messages":"1224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"1001"},{"filePath":"1225","messages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1227","messages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1229","messages":"1230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1231","messages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1235","messages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1241","messages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901","usedDeprecatedRules":"1001"},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1249","messages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"1001"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1257","messages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1259","messages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1265","messages":"1266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1267","messages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1269","messages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1271","messages":"1272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1279","messages":"1280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1281","messages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"1001"},{"filePath":"1285","messages":"1286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1287","messages":"1288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1293","messages":"1294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1295","messages":"1296","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"1001"},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1299","messages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1301","messages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1303","messages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"992","usedDeprecatedRules":"1001"},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1321","messages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1001"},"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\index.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\DashboardContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\App.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\WarningsContext.js",["1325"],"import React from \"react\";\r\n\r\nimport env from 'common/enviroment'\r\nimport GROUPS_ENUM from 'common/enumerators/GroupsEnum'\r\nimport { NavigationContext } from 'context/NavigationContext'\r\nimport { isAdmin } from 'common/SessionUtils';\r\n\r\nimport sound from 'common/notification.mp3'\r\nimport { getVisibilityGroups } from \"common/SessionUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport { getJWT } from \"common/SessionUtils\";\r\nimport { getUserID } from \"common/SessionUtils\";\r\nimport { isComandoFiscal } from \"common/SessionUtils\";\r\n\r\nexport const WarningsContext = React.createContext();\r\n\r\n\r\nexport function WarningsProvider({ children }) {\r\n  const EventSource = require('eventsource')\r\n  const [warningsSource, setWarningsSource] = React.useState()\r\n  const [eventSource, setEventSource] = React.useState()\r\n  const [warnings, setWarnings] = React.useState([])\r\n  const [latestWarning, setLatestWarning] = React.useState()\r\n  const [wasReloaded, setWasReloaded] = React.useState(true)\r\n  const { setIsMap, isMap, clearBell } = React.useContext(NavigationContext);\r\n  const [isNotificationSoundEnable, setIsNotificationSoundEnable] = React.useState(true)\r\n  const errorEvents = [null, undefined]\r\n  const [traffic, setTraffic] = React.useState([])\r\n  const [latestEvent, setLatestEvent] = React.useState()\r\n  const [deadServices, setDeadServices] = React.useState([])\r\n\r\n\r\n  const audios = new Audio(sound)\r\n\r\n\r\n\r\n\r\n\r\n  const getIsMap = () => {\r\n    return isMap\r\n  }\r\n\r\n  const changeWarningBell = (warningBell) => {\r\n\r\n    warningBell['visto'] = getIsMap()\r\n\r\n    setLatestWarning(() => {return warningBell})\r\n  }\r\n\r\n  const getGroups = () => {\r\n\r\n    //TODO GAECO\r\n    let groupsId = \"[\" + GROUPS_ENUM.GERAL + \"]\"\r\n    if (isAdmin()) {\r\n      groupsId = \"[]\" //NAO PODE HAVER ESPAÇO APOS A VIRGULA\r\n    } else if (getVisibilityGroups() && getVisibilityGroups().length > 0) {\r\n      groupsId = \"[\"+ getVisibilityGroups().join(\",\") + \"]\"\r\n    }\r\n    return groupsId;\r\n\r\n  }\r\n\r\n  const startSSE = () => {\r\n\r\n    //TODO: jogar isso no rules.\r\n    //COMANDO FISCAL COMO SÒ VÊ NOTIFICATIONS, NÃO PRECISA DESTE SSE.\r\n    if (!isComandoFiscal()) {\r\n\r\n      console.log(\"ENV\", {\r\n        'username': getUserLogin(),\r\n        'jwt_token': getJWT(),\r\n        'group_ids': getGroups(),\r\n        'user_id': getUserID()\r\n      })\r\n      let warningSource = new EventSource(`${env.apiAddress}/warnings/stream`, {\r\n        headers: {\r\n          'username': getUserLogin(),\r\n          'jwt_token': getJWT(),\r\n          'group_ids': getGroups(),\r\n          'user_id': getUserID()\r\n        }\r\n      })\r\n      warningSource.onmessage = (event) => {\r\n        if (errorEvents.includes(event)) {\r\n          console.log(\"EVENT--EMPTY1\", new Date().toLocaleTimeString(\"pt-BR\"), event)\r\n        }\r\n        else {\r\n          try {\r\n            if (event && event.data) {\r\n              let warningBell = JSON.parse(event.data.replace(/'/g, '\"'))\r\n              changeWarningBell(warningBell)\r\n            }\r\n          } catch (e) {\r\n            console.log(e)\r\n          }\r\n        }\r\n      }\r\n\r\n      warningSource.onerror = (event) => {\r\n        console.log(\"EVENT-ONERROR\", event)\r\n      }\r\n\r\n      setWarningsSource(warningSource)\r\n\r\n      let eventSource = new EventSource(`${env.apiAddress}/events/stream`, {\r\n        headers: {\r\n          'username': getUserLogin(),\r\n          'jwt_token': getJWT()\r\n        }\r\n      }\r\n      )\r\n\r\n      eventSource.onmessage = (event) => {\r\n        if (errorEvents.includes(event)) {\r\n\r\n        }\r\n        else {\r\n          try {\r\n            if (event && event.data) {\r\n              setLatestEvent(JSON.parse(event.data.replace(/'/g, '\"')))\r\n            }\r\n          } catch (e) {\r\n            console.log(\"EVENTSSTREAM-ERROR\", event, e)\r\n          }\r\n\r\n        }\r\n      }\r\n      setEventSource(eventSource)\r\n      \r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    changeVisto()\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [clearBell])\r\n\r\n\r\n  const notReceivedWarnings = (formatedWarning) => {\r\n\r\n    for (var i = 0; (i < warnings.length && i < 100); i++) {\r\n      if (JSON.stringify(warnings[i]) === formatedWarning) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (latestWarning) {\r\n      latestWarning['visto'] = getIsMap()\r\n    }\r\n\r\n    if (!isAdmin()) {\r\n      if (latestWarning && latestWarning['severidade'] === 4) {\r\n        return\r\n      }\r\n    }\r\n\r\n    let formatedWarning = JSON.stringify(latestWarning)\r\n\r\n    if (latestWarning && notReceivedWarnings(formatedWarning)) {\r\n      let notifications_to_close = []\r\n\r\n\r\n      //if (document.visibilityState === 'hidden' && latestWarning) {\r\n      if (latestWarning) {\r\n\r\n        let options = {\r\n          body: `Total de novos alertas: ${warnings.filter(warning => {\r\n            return !warning.visto\r\n          }).length + 1}`,\r\n          icon: 'https://www.vkf-renzel.com/out/pictures/generated/product/1/356_356_75/r12044336-01/general-warning-sign-10836-1.jpg?    auto=compress&cs=tinysrgb&dpr=1&w=500',\r\n          dir: 'ltr',\r\n        };\r\n\r\n        const notification = new Notification('Sistema CACTO', options)\r\n\r\n        notifications_to_close.push(notification)\r\n      }\r\n\r\n      if (notifications_to_close.length > 1) {\r\n        const firstElement = notifications_to_close.shift();\r\n        firstElement.close()\r\n      }\r\n\r\n      if (document.visibilityState === 'visible' && !getIsMap()) {\r\n        //isNotificationSoundEnable && audios.play()\r\n      }\r\n\r\n      if (isNotificationSoundEnable) {\r\n        isNotificationSoundEnable && audios.play()\r\n      }\r\n\r\n      //notification.close()\r\n\r\n      setWarnings([latestWarning, ...warnings])\r\n\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [latestWarning])\r\n\r\n  React.useEffect(() => {\r\n    if (latestEvent && JSON.stringify(traffic[0]) !== JSON.stringify(latestEvent)) {\r\n      setTraffic([latestEvent, ...traffic])\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [latestEvent])\r\n\r\n  // React.useEffect(() => {\r\n  //   return () => {\r\n  //     warningsSource.close()\r\n  //     eventSource.close()\r\n  //   }\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [])\r\n\r\n  function changeVisto() {\r\n\r\n    let warningsVistos = warnings.map((warning, index) => {\r\n\r\n      warning.visto = true\r\n\r\n      return warning\r\n    })\r\n\r\n    setWarnings(warningsVistos)\r\n  }\r\n\r\n  function printIsMap() {\r\n    setIsMap(true)\r\n  }\r\n\r\n  return (\r\n    <WarningsContext.Provider value={{ startSSE, warnings, traffic, setWarnings, changeVisto, setIsMap, isMap, printIsMap, setWasReloaded, wasReloaded, setIsNotificationSoundEnable, isNotificationSoundEnable, warningsSource, eventSource, deadServices}}>\r\n      {children}\r\n    </WarningsContext.Provider>\r\n  );\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\NavigationContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\WarningsUpdateContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\VehicleContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\MapsContext.js",["1326"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport env from 'common/enviroment'\r\nimport { createQueryHttpRequestBody } from \"axios/AxiosUtils\";\r\n\r\nexport const MapsContext = React.createContext();\r\n\r\nexport function MapsProvider({ children }) {\r\n  const [camerasData, setCamerasData] = React.useState([]);\r\n  const [activeCameras, setActiveCameras] = React.useState([]);\r\n  const [citiesPB, setCitiesPB] = React.useState([]);\r\n  const [pointsData, setPointsData] = React.useState(new Array(activeCameras.length).fill({ active: false, warnings: 0 }));\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  const getCamerasData = () => {\r\n    let httpRequestBody = createQueryHttpRequestBody()\r\n    httpRequestBody['query']['config'] = {\"filters\":[ ] }\r\n    httpRequestBody['query']['evento'] = {\"filters\":[ ] }\r\n    \r\n    axiosRetryProxy.post(`${env.apiAddress}/locations/read_all`, httpRequestBody).then(res => {\r\n      \r\n      if (Array.isArray(res.data)){\r\n        if(res.data.length > 0){\r\n          setCamerasData(res.data.filter(camera => camera.category !== \"SUGESTÕES\"))\r\n        }\r\n      }\r\n      else\r\n        setCamerasData([])\r\n    });\r\n  };\r\n\r\n  const getData = () => getCamerasData()\r\n\r\n  React.useEffect(() => {\r\n    axiosRetryProxy.get(env.citiesPbApi)\r\n      .then(json => {\r\n        setCitiesPB(json.data);\r\n      })\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    setActiveCameras(camerasData.filter(x => x.status))\r\n    setPointsData(camerasData.filter(x => x.status).fill({ active: false, warnings: 0 }))\r\n  }, [camerasData])\r\n\r\n  React.useEffect(() => {\r\n\r\n    \r\n  }, [activeCameras])\r\n\r\n  //console.log('cameras ativas: ', activeCameras)\r\n\r\n  return (\r\n    <MapsContext.Provider value={{ camerasData, getCamerasData, getData, activeCameras, citiesPB, setPointsData, pointsData}}>\r\n      {children}\r\n    </MapsContext.Provider>\r\n  );\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\GroupsContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\ViewsContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\AuditorsContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\context\\LoginContext.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Admin.js",["1327"],"/*!\r\n\r\n=========================================================\r\n* Paper Dashboard React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Footer from \"components/Footer.js\";\r\nimport Navbar from \"components/Navbar.js\";\r\nimport Sidebar from \"components/Sidebar.js\";\r\n// import {DashboardProvider} from \"context/DashboardContext\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n    this.state = {\r\n      backgroundColor: \"black\",\r\n      activeColor: \"primary\",\r\n    };\r\n    this.mainPanel = React.createRef();\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      this.mainPanel.current.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n    }\r\n  }\r\n  handleActiveClick = (color) => {\r\n    this.setState({ activeColor: color });\r\n  };\r\n  handleBgClick = (color) => {\r\n    this.setState({ backgroundColor: color });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          bgColor={this.state.backgroundColor}\r\n          activeColor={this.state.activeColor}\r\n        />\r\n        <div className=\"main-panel\" ref={this.mainPanel}>\r\n          <Navbar {...this.props} />\r\n          <Switch>\r\n          {routes\r\n            .filter((prop) => prop.visible)\r\n            .map((prop, key) => (\r\n              <Route\r\n                path={prop.layout + prop.path}\r\n                component={prop.component}\r\n                key={key}\r\n              />\r\n            ))}\r\n          </Switch>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Login.js",["1328","1329"],"\r\nimport React from \"react\"\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport { RiUser3Fill, RiLockFill, RiCloseFill } from 'react-icons/ri';\r\n\r\nimport LoadingPage from \"layouts/Loading\";\r\nimport { MapsContext } from \"context/MapsContext\";\r\nimport { DashboardContext } from \"context/DashboardContext\";\r\nimport { WarningsContext } from \"context/WarningsContext\";\r\nimport { AuditorsContext } from \"context/AuditorsContext\";\r\nimport { GroupsContext } from \"context/GroupsContext\";\r\nimport { mountViews } from \"views/ViewsCreator\";\r\nimport GROUPS_ENUM from 'common/enumerators/GroupsEnum';\r\nimport logo from \"logo.svg\";\r\nimport env from \"common/enviroment\";\r\nimport routes from \"routes.js\";\r\nimport { isLoggedIn } from \"common/SessionUtils\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport { getLDAPRoles } from \"common/SessionUtils\";\r\nimport { setUserID } from \"common/SessionUtils\";\r\nimport { setUserRegistrationID } from \"common/SessionUtils\";\r\nimport { setVisibilityGroups } from \"common/SessionUtils\";\r\nimport { setUserRole } from \"common/SessionUtils\";\r\nimport { setLDAPRoles } from \"common/SessionUtils\";\r\nimport { setJWT } from \"common/SessionUtils\";\r\nimport { setCortexToken } from \"common/SessionUtils\";\r\nimport { setUserLogin } from \"common/SessionUtils\";\r\nimport { setViewedWarnings } from \"common/SessionUtils\";\r\nimport { setNearClosingWarningModalEnabled, setPendingHomologationModalEnabled } from \"common/SessionUtils\";\r\nimport { setUserName } from \"common/SessionUtils\";\r\nimport { isComandoFiscal } from \"common/SessionUtils\";\r\nimport { setMonitoringChiefFlag } from \"common/SessionUtils\";\r\nimport { LOGIN } from \"axios/AxiosUtils\";\r\nimport { configureHttp } from \"axios/http/configure-http\";\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n  const history = useHistory()\r\n\r\n  // Contorno dos inputs\r\n  const [userFocus, setUserFocus] = React.useState(false)\r\n  const [passFocus, setPassFocus] = React.useState(false)\r\n  const [isLoading, setLoading] = React.useState(false)\r\n  const [isGlobalLoading, setGlobalLoading] = React.useState(false)\r\n  const [email, setEmail] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n  const [message, setMessage] = React.useState('')\r\n\r\n  const onUserFocus = () => setUserFocus(!userFocus)\r\n  const onPassFocus = () => setPassFocus(!passFocus)\r\n\r\n  // Contextos para extrair dados das telas\r\n  const { getCamerasData } = React.useContext(MapsContext)\r\n  const { getDashboardData } = React.useContext(DashboardContext)\r\n  const { startSSE, setWasReloaded } = React.useContext(WarningsContext)\r\n  const { startWarningsViewedSSE } = React.useContext(WarningsUpdateContext)\r\n  const { getAuditorsData } = React.useContext(AuditorsContext)\r\n  const { fetchGroupsData, fetchGroupsName, getGroupRegistry } = React.useContext(GroupsContext)\r\n  const [loginProcessFinished, setLoginProcessFinished] = React.useState(false);\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig(LOGIN))\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n\r\n      setWasReloaded(false)\r\n\r\n      mountViews(routes)\r\n      setGlobalLoading(false)\r\n\r\n      if (isComandoFiscal()) {\r\n        history.push('/admin/notifications') // Trocar de tela\r\n      } else {\r\n        history.push('/admin/tables') // Trocar de tela\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loginProcessFinished])\r\n\r\n  Notification.requestPermission()\r\n\r\n  const login = async () => {\r\n    configureHttp()\r\n    setLoading(true)\r\n    if (await getToken()) {\r\n      setGlobalLoading(true)\r\n      await fetchGroupsData()\r\n      if (await loadUserData()) {\r\n        await fetchGroupsName()\r\n        await getAuditorsData(true)\r\n        startSSE() \r\n        startWarningsViewedSSE()\r\n        setLoginProcessFinished(true)\r\n        \r\n      }\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const loadUserData = async () => {\r\n    let roles = getLDAPRoles()\r\n\r\n    //Construir uma lista com grupos que o usuário logado tem visibilidade para ver. \r\n    //É um processo em passos. \r\n    //Primeiro, são carregados os grupos institucionais. Estes grupos virão do ldap. \r\n    const GRs = ['GR1', 'GR2', 'GR3', 'GR4', 'GR5', 'COE', 'ATIF', 'GECOF', 'GOFMT']\r\n    let visibilityGroups = [GROUPS_ENUM.GERAL] //Qualquer usuário logado ao sistema vai ter acesso ao grupo geral\r\n    if (localStorage.getItem('role') === \"GAECO\") {\r\n      visibilityGroups = [GROUPS_ENUM.GAECO]\r\n    } else if (localStorage.getItem('role') === \"DNIT\") {\r\n      visibilityGroups = [GROUPS_ENUM.DNIT]\r\n    } else if (localStorage.getItem('role') === \"PRF\") {\r\n      visibilityGroups = [GROUPS_ENUM.PRF]\r\n    }\r\n\r\n    GRs.forEach(group => {\r\n      if (roles.includes(group)) {\r\n        visibilityGroups.push(GROUPS_ENUM[group]);\r\n      }\r\n    });\r\n\r\n    const httpRequestBody = createBaseHttpRequestBody()\r\n    httpRequestBody['user_login'] = getUserLogin()\r\n\r\n    return await axiosRetryProxy.post(`${env.apiAddress}/auditor/read`, httpRequestBody).then(res => {\r\n\r\n      let data = res.data[0]\r\n      if (data['user_id']) {\r\n\r\n        setUserID(data['user_id'])\r\n        setUserRegistrationID(data['user_registration_id'])\r\n        setUserName(data['user_name'])\r\n\r\n        let groups = data['usuario_grupo']\r\n\r\n        //Segunda parte dos grupos, virá tabela usuario_grupo\r\n        for (const group of groups) {\r\n          visibilityGroups.push(group['group_id'])\r\n        }\r\n\r\n        //Marcar se o usuário é chefe do grupo de monitoramento\r\n        let monitoramentoGroup = getGroupRegistry(GROUPS_ENUM.MONITORAMENTO)\r\n\r\n        if (monitoramentoGroup && monitoramentoGroup['group_owner_data'][0] && monitoramentoGroup['group_owner_data'][0]['user_login'] === getUserLogin()) {\r\n          setMonitoringChiefFlag(true)\r\n        }\r\n\r\n      }\r\n      return true\r\n    }).catch(err => {\r\n      console.log(err)\r\n      return true\r\n    }).finally(() => {\r\n      setVisibilityGroups(visibilityGroups)\r\n    })\r\n  }\r\n\r\n  const getToken = () => {\r\n    const httpRequestBody = {\r\n      'email': email,\r\n      'password': password\r\n    }\r\n\r\n    return axiosRetryProxy.post(`${env.apiAddress}/login`, httpRequestBody)\r\n      .then(res => {\r\n\r\n        if (res.data[\"code\"] === 200) {\r\n          const token = res.data[\"jwt_token\"]\r\n          const cortex_token = res.data[\"cortex_token\"]\r\n\r\n          let roles = res.data[\"groups\"]\r\n          console.log(\"ROLES\", roles, res.data)\r\n\r\n          let role = 'CICC'\r\n          const ROLES = ['ADMIN', 'SUBGERENTE', 'GAECO', 'PRF', 'DNIT', 'COE', 'GOFMT', 'GECOF', 'GOAC', 'ATIF', 'COMANDO', 'MONITORAMENTO', 'COMANDOFISCAL', 'OPERACIONAL', 'CICC']\r\n\r\n          for (const ldapRole of ROLES) {\r\n            for (const aux of roles) {\r\n              if (aux.includes(ldapRole)) {\r\n                role = ldapRole;\r\n                break;\r\n              }\r\n            }\r\n            //Eh feio. mas tem um proposito. Serve para sair do laço mais externo caso algum papel tenha sido já selecionado. \r\n            if (role !== 'CICC') {\r\n              break\r\n            }\r\n          }\r\n\r\n          console.log(\"ROLE ESCOLHIDO\", role)\r\n\r\n          setUserRole(role)\r\n          setLDAPRoles(res.data[\"groups\"])\r\n          setJWT(token)\r\n          setCortexToken(cortex_token)\r\n          setUserLogin(email)\r\n          setViewedWarnings(JSON.stringify([]))\r\n          setNearClosingWarningModalEnabled('true')\r\n          setPendingHomologationModalEnabled('true')\r\n\r\n\r\n          return true\r\n        }\r\n        else {\r\n          setMessage('Login e/ou senha inválido(s)!')\r\n          return false\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setMessage('Erro! Tente novamente mais tarde!')\r\n        return false\r\n      })\r\n  }\r\n\r\n  return (\r\n    isGlobalLoading ?\r\n      <LoadingPage/>\r\n      :\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginForm\">\r\n\r\n          <Form>\r\n            <Row>\r\n              <Col className=\"centralized\">\r\n                <img src={logo} alt=\"cicc-logo\" />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"centralized\" style={{ fontSize: 18 }}>\r\n                <span>Sistema Cacto</span>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className={`warning-alert${message !== '' ? ' visible' : ' hidden'}`}>\r\n              <div>\r\n                {message}\r\n              </div>\r\n              <RiCloseFill onClick={() => setMessage('')} />\r\n            </div>\r\n\r\n            <Row>\r\n              <Col className=\"centralize\">\r\n                <FormGroup style={{ width: \"100%\" }}>\r\n                  <InputGroup >\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText\r\n                        style={{ display: \"inline-block\", margin: \"auto\", backgroundColor: isLoading ? '#E3E3E3' : 'white', border: userFocus && \"1px #9A9A9A\", borderStyle: userFocus && \"solid none solid solid\" }}\r\n                      >\r\n                        <RiUser3Fill style={{ marginRight: '0.5rem' }} />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Usuário\" type=\"email\" disabled={isLoading} onFocus={onUserFocus} onBlur={onUserFocus} onChange={e => setEmail(e.target.value)} />\r\n                  </InputGroup>\r\n                </FormGroup>\r\n\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n              <Col className=\"centralize\">\r\n                <FormGroup style={{ width: \"100%\" }}>\r\n                  <InputGroup >\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText\r\n                        style={{ display: \"inline-block\", margin: \"auto\", backgroundColor: isLoading ? '#E3E3E3' : 'white', border: passFocus && \"1px #9A9A9A\", borderStyle: passFocus && \"solid none solid solid\" }}\r\n                      >\r\n                        <RiLockFill style={{ marginRight: '0.5rem' }} />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Senha\" type=\"password\" disabled={isLoading} onFocus={onPassFocus} onBlur={onPassFocus} onChange={e => setPassword(e.target.value)} />\r\n                  </InputGroup>\r\n                </FormGroup>\r\n\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"centralize\">\r\n                <div className=\"forgotContainer\" style={{ textAlign: \"center\" }}>\r\n                  Dificuldade de Acesso? Entre em contato diretamente com a {' '}\r\n                  <a href=\"https://www.sefaz.pb.gov.br/contact\">\r\n                    SEFAZ/PB\r\n                  </a>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n              <Col className=\"centralize\">\r\n                <Button disabled={isLoading} color=\"primary\" style={{ height: '2.7rem' }} onClick={login}>\r\n                  {isLoading ?\r\n                    <>\r\n                      <Spinner color=\"white\" size=\"sm\" style={{ marginRight: 10 }} />\r\n                      Entrando...\r\n                    </> : \"Entrar\"}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n  );\r\n\r\n}\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Error.js",["1330","1331","1332","1333"],"import React from \"react\";\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, CardFooter, Spinner } from \"reactstrap\";\r\nimport { RiErrorWarningLine, RiArrowDownSLine } from \"react-icons/ri\"\r\n\r\nimport Footer from \"components/Footer.js\";\r\nimport Navbar from \"components/Navbar.js\";\r\nimport Sidebar from \"components/Sidebar.js\";\r\nimport routes from \"routes.js\";\r\n\r\n\r\nexport default function ErrorPage({ error, info, ...remainingProps }) {\r\n  const [expanded, setExpanded] = React.useState(false)\r\n  console.log(remainingProps)\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Sidebar\r\n        routes={routes}\r\n        bgColor=\"black\"\r\n        activeColor=\"primary\"\r\n        shouldReload\r\n      />\r\n      <div className=\"main-panel\">\r\n        <Navbar location={{ pathname: \"error\" }} />\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col>\r\n                      <div style={{ display: \"flex\", placeContent: \"center\", margin: \"4rem 0\" }}>\r\n                        <RiErrorWarningLine style={{ fontSize: \"15rem\", color: \"#ef8157\" }} />\r\n                        <div style={{ display: \"grid\", alignContent: \"center\" }}>\r\n                          <h1>Desculpe!</h1>\r\n                          No momento, a página que você está tentando acessar está indisponível.\r\n                          <br />\r\n                          Tente novamente mais tarde ou contate um administrador.\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col style={{ display: \"flex\", placeContent: \"center\" }}>\r\n                      {!expanded ?\r\n                        <RiArrowDownSLine style={{ fontSize: \"1.25rem\", cursor: \"pointer\"}} onClick={()=>setExpanded(true)} />\r\n                        :\r\n                        <>\r\n                          {error?.toString()}\r\n                          {/* {error && JSON.stringify(error, Object.getOwnPropertyNames(error), 4)} */}\r\n                          <br />\r\n                          {info?.componentStack}\r\n                        </>\r\n                      }\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {<Footer fluid />}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\ErrorBoundary.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enviroment.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\NotificationHistory.js",["1334"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardTitle,\r\n} from \"reactstrap\";\r\nimport { HiPrinter } from \"react-icons/hi\";\r\nimport SEVERITY_ENUM from '../common/enumerators/SeverityEnum'\r\nimport { getNotificationStatusLabel } from 'common/enumerators/NotificationStatus';\r\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\r\nimport { convertUtcToBrazilianDate } from 'common/utils/validate';\r\nimport { isEmpty } from 'common/utils/collections';\r\nimport { compareLastTwoLogs, checkIfKeyIsInDiff } from 'common/rules/NotificationRules';\r\nimport logo from \"logo.svg\";\r\n\r\nconst NotificationHistoryLayout = () => { // aqui\r\n    const historyData = JSON.parse(sessionStorage.getItem('historyData'));\r\n    const warning = JSON.parse(sessionStorage.getItem('warning'));\r\n    const [pageLoadDate, setPageLoadDate] = React.useState(null);\r\n    React.useEffect(() => {\r\n        const currentDate = new Date();\r\n        setPageLoadDate(currentDate.toLocaleDateString());\r\n    }, []);\r\n\r\n    const handlePrint = () => {\r\n        const content = document.querySelector('.content');\r\n        const printWindow = window.open('', '_blank');\r\n        if (printWindow) {\r\n            printWindow.document.write('<html><head>');\r\n        \r\n            // Copiar estilos CSS\r\n            const stylesheets = document.querySelectorAll('link[rel=\"stylesheet\"]');\r\n            stylesheets.forEach((stylesheet) => {\r\n                printWindow.document.write(`<link rel=\"stylesheet\" href=\"${stylesheet.href}\">`);\r\n            });\r\n        \r\n            printWindow.document.write('</head><body>');\r\n        \r\n            // Copiar conteúdo da página, incluindo imagens\r\n            printWindow.document.write(document.documentElement.outerHTML);\r\n        \r\n            printWindow.document.write('</body></html>');\r\n            printWindow.document.close();\r\n        \r\n            // Aguardar até que o conteúdo seja totalmente carregado antes de imprimir\r\n            printWindow.addEventListener('load', () => {\r\n                printWindow.print();\r\n            });\r\n        }\r\n    };\r\n\r\n    const logDiffs = compareLastTwoLogs(historyData);\r\n\r\n    console.log(\"DIFFS \", logDiffs)\r\n    \r\n    const strongStyle = { marginRight: '1px', marginLeft: '8px' };\r\n\r\n    const getStyleDiff = (key, i) => {\r\n        const log = i;\r\n        \r\n        const previousLog = historyData[historyData.indexOf(log) - 1];\r\n        if (previousLog) {\r\n            if (checkIfKeyIsInDiff(key, previousLog, log, logDiffs)) {\r\n                return { color: '#B80000', ...strongStyle };\r\n            }\r\n        }\r\n        return strongStyle;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n                <div style={{display: 'flex', alignItems: 'center', padding: '20px', marginLeft: '20px'}}>\r\n                <img style={{width: '100px', height: 'auto', marginRight: '10px'}} src={logo} alt=\"cicc-logo\" />\r\n                <h2 style={{position:'relative',top: '20px'}}>Histórico de Configuração de Notificação</h2>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginTop: '10px', position: 'relative' }}>\r\n                {!isEmpty(warning) && <Card body key={-1} style={{ width: \"95%\" }}>\r\n                <CardTitle>{ `Ocorrência ${warning.id} `} </CardTitle>\r\n                \r\n                    <p>\r\n                        <strong style={strongStyle}>Nº Alerta: </strong> {warning.id_config ?? \"\"} <br/>\r\n                        <strong style={strongStyle}>Nome: </strong> {warning.nome ?? \"\"} <br/>\r\n                        <strong style={strongStyle}>Descrição: </strong> {warning.descricao ?? \"\"} <br/>\r\n                        <strong style={strongStyle}>Prioridade: </strong> {SEVERITY_ENUM[warning.severidade] ?? \"\"} <br/>\r\n                        <strong style={strongStyle}>Ação Fiscal: </strong> {warning.procedimento ?? \"\"} <br/>\r\n                    </p>                                \r\n                    <p>\r\n                        <strong style={strongStyle}>Data/Hora da Passagem:</strong> {convertUtcToBrazilianDate(warning.evento_infevento_dhregpassagem) ?? ''}<br/>\r\n                        <strong style={strongStyle}>Local: </strong> {warning.evento_infevento_dsreflocal}<br/>\r\n                        <strong style={strongStyle}>Veículo: </strong> {warning.evento_infevento_nrplaca}<br/>\r\n                    </p>\r\n                    </Card>\r\n                }\r\n                    \r\n                { !isEmpty(historyData) && historyData.length > 0 && historyData.map(i => {\r\n                    const status = i.fiscal_notification_status\r\n                    let statusLabel = getNotificationStatusLabel(i)\r\n                    if (status === NOTIFICATION_STATUS_ENUM.VISUALIZADA && i['fiscal_notification_lock'] === 1){\r\n                        statusLabel = \"ALERTA BLOQUEADO\"\r\n                    } \r\n                    \r\n                    if (status === NOTIFICATION_STATUS_ENUM.VISUALIZADA && i['fiscal_notification_lock'] === 2){\r\n                        statusLabel = \"ALERTA DESBLOQUEADO\"\r\n                    }\r\n                    \r\n                    return (\r\n                        <Card body key={i.id_config} style={{ width: \"95%\" }}>\r\n                            <CardTitle>Modificado às <strong> {i.log_timestamp !== null ? convertUtcToBrazilianDate(i.log_timestamp) : \"\"}</strong></CardTitle>\r\n                            <p>\r\n                                <strong style={getStyleDiff(\"fiscal_notification_status\",i)}>Status: </strong> {statusLabel}\r\n                            </p>\r\n\r\n                            { !isEmpty(i.fiscal_action_designation_auditor) &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_designation_auditor\",i)}>Responsável pelo Monitoramento: </strong> {i.fiscal_action_designation_auditor}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_designation_date\",i)}>Data/Hora da Designação: </strong> {i.fiscal_action_designation_date}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_auditors\",i)}>Fiscais Designados: </strong> {i.fiscal_action_auditors}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_designation_report\",i)}>Observações da Designação: </strong> {i.fiscal_action_designation_report}<br/>\r\n                                </p>\r\n                            }\r\n                            { !isEmpty(i.fiscal_action_designation_auditor) &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"fiscal_notification_awareness_auditor\",i)}>Responsável pela Declaração de Ciência: </strong> {i.fiscal_notification_awareness_auditor}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_notification_awareness_date\",i)}>Data/Hora da Declaração de Ciência: </strong> {i.fiscal_notification_awareness_date}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_notification_awareness_report\",i)}>Observações da Declaração de Ciência: </strong> {i.fiscal_notification_awareness_report}<br/>\r\n                                </p>\r\n                            }\r\n                            { !isEmpty(i.fiscal_action_report) &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_date\",i)}> Data/Hora da Ação Fiscal Realizada: </strong> {i.fiscal_action_date}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_report\",i)}> Relatório da Ação Fiscal Realizada: </strong> {i.fiscal_action_report}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_report_auditor\",i)}> Responsável pelo Preenchimento do Relatório da Ação Fiscal Realizada: </strong> {i.fiscal_action_report_auditor}<br/>\r\n                                </p>\r\n                            }\r\n                            { !isEmpty(i.fiscal_action_homologation_auditor) &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_homologation_auditor\",i)}>Responsável pela Homologação: </strong> {i.fiscal_action_homologation_auditor}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_homologation_date\",i)}>Data/Hora da Homologação: </strong> {i.fiscal_action_homologation_date}<br/>\r\n                                    <strong style={getStyleDiff(\"fiscal_action_homologation_report\",i)}>Observações da Homologação: </strong> {i.fiscal_action_homologation_report}<br/>\r\n                                </p>      \r\n                            }\r\n                            {i.config_pause_timestamp && i.config_pause_timestamp !== null && i.config_pause_timestamp !== '' && i.config_status === NOTIFICATION_STATUS_ENUM.PAUSED &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"config_pause_timestamp\",i)}> Alerta pausado até: </strong> {convertUtcToBrazilianDate(i.config_pause_timestamp)}<br/>\r\n                                    <strong style={getStyleDiff(\"config_pause_report\",i)}> Motivo: </strong> {i.config_pause_report}<br/>\r\n                                </p>\r\n                            }          \r\n                            {i.config_pause_timestamp && i.config_pause_timestamp !== null && i.config_pause_timestamp !== '' && i.config_status === NOTIFICATION_STATUS_ENUM.ACTIVE &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"config_pause_timestamp\",i)}> Alerta reativado em: </strong> {convertUtcToBrazilianDate(i.config_pause_timestamp)}<br/>\r\n                                </p>\r\n                            }            \r\n                        </Card>\r\n                    );\r\n                })}\r\n\r\n            </div>\r\n            <div style={{ position: 'fixed', bottom: '15px', right: '10px', zIndex: 1 }}>\r\n                <Button style={{ borderRadius: '50%', backgroundColor: '#007bff', padding: '15px', border: 'none', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.2)' }} size=\"md\" id=\"print-button\" onClick={handlePrint}><HiPrinter style={{ fontSize: '3em' }} /></Button>\r\n            </div>\r\n            <footer style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                <p>Página aberta em: {pageLoadDate}</p>\r\n            </footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotificationHistoryLayout;\r\n\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\WarningConfigHistory.js",["1335"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardTitle,\r\n} from \"reactstrap\";\r\nimport { HiPrinter } from \"react-icons/hi\";\r\nimport SEVERITY_ENUM from '../common/enumerators/SeverityEnum'\r\nimport { getConfigStatusLabel } from 'common/enumerators/StatusEnum';\r\nimport STATUS_ENUM from 'common/enumerators/StatusEnum';\r\nimport { convertUtcToBrazilianDate } from 'common/utils/validate';\r\nimport { compareLastTwoLogs, checkIfKeyIsInDiff } from 'common/rules/NotificationRules';\r\nimport logo from \"logo.svg\";\r\n\r\n\r\nconst WarningConfigHistoryLayout = () => { \r\n    const historyData = JSON.parse(sessionStorage.getItem('historyData'));\r\n    const [pageLoadDate, setPageLoadDate] = React.useState(null);\r\n    React.useEffect(() => {\r\n        const currentDate = new Date();\r\n        setPageLoadDate(currentDate.toLocaleDateString());\r\n    }, []);\r\n    \r\n    const handlePrint = () => {\r\n        const content = document.querySelector('.content');\r\n        const printWindow = window.open('', '_blank');\r\n        if (printWindow) {\r\n            printWindow.document.write('<html><head>');\r\n        \r\n            // Copiar estilos CSS\r\n            const stylesheets = document.querySelectorAll('link[rel=\"stylesheet\"]');\r\n            stylesheets.forEach((stylesheet) => {\r\n                printWindow.document.write(`<link rel=\"stylesheet\" href=\"${stylesheet.href}\">`);\r\n            });\r\n        \r\n            printWindow.document.write('</head><body>');\r\n        \r\n            // Copiar conteúdo da página, incluindo imagens\r\n            printWindow.document.write(document.documentElement.outerHTML);\r\n        \r\n            printWindow.document.write('</body></html>');\r\n            printWindow.document.close();\r\n        \r\n            // Aguardar até que o conteúdo seja totalmente carregado antes de imprimir\r\n            printWindow.addEventListener('load', () => {\r\n                printWindow.print();\r\n            });\r\n        }\r\n    };\r\n\r\n    \r\n    const getTypeConfig = (value) => {\r\n        const CONFIG_TYPE_CONDITIONS_REVERSE = {\r\n            0: 'Todos (Passagens com e sem DFE, Emissões de MDFE e NFE)',\r\n            1: 'Apenas Passagens sem DFE',\r\n            5: 'Apenas Passagens com DFE',\r\n            2: 'Apenas Passagens com DFE e Emissões de MDFE/NFE',\r\n            4: 'Apenas Emissões de MDFE',\r\n            3: 'Apenas Emissões de NFE'\r\n        };\r\n\r\n        return CONFIG_TYPE_CONDITIONS_REVERSE[value];\r\n    };\r\n\r\n    const getTypeOfConfigs = (objeto) => {\r\n        let resultado = '';\r\n        for (const chave in objeto) {\r\n            if (objeto[chave] !== null) {\r\n                let chaveFormatada = chave.replace(/_/g, ' ');\r\n                resultado += `${chaveFormatada}: ${objeto[chave]}, `;\r\n            }\r\n        }\r\n        return resultado.slice(0, -2);\r\n    }\r\n\r\n    const log_diff = compareLastTwoLogs(historyData);\r\n    console.log(log_diff)\r\n    \r\n    const strongStyle = { marginRight: '1px', marginLeft: '8px'};\r\n    \r\n    const getStyleDiff = (key, i) => {\r\n        const log = i;\r\n\r\n        const previousLog = historyData[historyData.indexOf(log) - 1];\r\n        if (previousLog) {\r\n            if (checkIfKeyIsInDiff(key, previousLog, log, log_diff)) {\r\n                return { color: '#B80000', ...strongStyle };\r\n            }\r\n        }\r\n        return strongStyle;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n            <div style={{display: 'flex', alignItems: 'center', padding: '20px', marginLeft: '20px'}}>\r\n              <img style={{width: '100px', height: 'auto', marginRight: '10px'}} src={logo} alt=\"cicc-logo\" />\r\n              <h2 style={{position:'relative',top: '20px'}}>Histórico de Configuração de Alerta</h2>\r\n            </div>\r\n            \r\n            </header>\r\n            <div className=\"content\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginTop: '10px', position: 'relative' }}>\r\n                {historyData.length > 0 && historyData.map(i => {\r\n                    const status = getConfigStatusLabel(i);\r\n                    const config = getTypeConfig(i.config_type);\r\n                    const conditions = getTypeOfConfigs(i.configuracao);\r\n                    \r\n                    return (\r\n                        <Card body key={i.id_config} style={{ width: \"95%\" }}>\r\n                            <CardTitle>{i.config_modification_user === null ? 'Criado por ' : 'Editado por '} <strong>{i.config_modification_user === null ? i.criador : i.config_modification_user}</strong> às <strong> {i.config_modification_user === null ? convertUtcToBrazilianDate(i.data_criacao) : convertUtcToBrazilianDate(i.config_modification_date)}</strong></CardTitle>\r\n                            <p>\r\n                                <strong style={getStyleDiff(\"id_config\", i)}>Nº Alerta: </strong> {i.id_config ?? \"\"}\r\n                                <strong style={getStyleDiff(\"status\", i)}>Status: </strong>{i.config_modification_user !== null ? status : \"Criado\"}\r\n                                <strong style={getStyleDiff(\"nome\", i)}> Alerta: </strong> {i.nome ?? \"\"}\r\n                            </p>\r\n                            <p>\r\n                                <strong style={getStyleDiff(\"data_fechamento\", i)}>Data de Fechamento:</strong> {convertUtcToBrazilianDate(i.data_fechamento) ?? ''}\r\n                                <strong style={getStyleDiff(\"config_type\", i)}>Tipo de Configuração: </strong> {config}\r\n\r\n                            </p>\r\n                            <p>\r\n                                <strong style={getStyleDiff(\"visibility_groups\", i)}> Visibilidade: </strong> {i.visibility_groups}\r\n                                <strong style={getStyleDiff(\"configuracao\", i)}>Condições: </strong> {conditions}\r\n                                <strong style={getStyleDiff(\"severidade\", i)}>Priodidade: </strong> {SEVERITY_ENUM[i.severidade]}\r\n                            </p>\r\n                            <p>\r\n                                <strong style={getStyleDiff(\"descricao\", i)}> Descrição do alerta: </strong> {i.descricao}\r\n                            </p>\r\n                            <p>\r\n                                <strong style={getStyleDiff(\"procedimentos\", i)}> Ação fiscal: </strong> {i.procedimentos}\r\n                            </p>\r\n\r\n                            {i.config_pause_timestamp && i.config_pause_timestamp !== null && i.config_pause_timestamp !== '' && i.config_status === STATUS_ENUM.PAUSED &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"config_pause_timestamp\", i)}> Alerta pausado até: </strong> {convertUtcToBrazilianDate(i.config_pause_timestamp)}\r\n                                    <strong style={getStyleDiff(\"config_pause_report\", i)}> Motivo: </strong> {i.config_pause_report}\r\n                                </p>\r\n                            }\r\n\r\n                            {i.config_pause_timestamp && i.config_pause_timestamp !== null && i.config_pause_timestamp !== '' && i.config_status === STATUS_ENUM.ACTIVE &&\r\n                                <p>\r\n                                    <strong style={getStyleDiff(\"config_pause_timestamp\", i)}> Alerta reativado em: </strong> {convertUtcToBrazilianDate(i.config_pause_timestamp)}\r\n                            \r\n                                </p>\r\n\r\n                            }\r\n\r\n                            \r\n                        </Card>\r\n                    );\r\n                })}\r\n\r\n            </div>\r\n            \r\n            <div style={{ position: 'fixed', bottom: '15px', right: '10px', zIndex: 1 }}>\r\n                <Button style={{ borderRadius: '50%', backgroundColor: '#007bff', padding: '15px', border: 'none', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.2)' }} size=\"md\" id=\"print-button\" onClick={handlePrint}><HiPrinter style={{ fontSize: '3em' }} /></Button>\r\n            </div>\r\n\r\n            <footer style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                <p>Página aberta em: {pageLoadDate}</p>\r\n            </footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WarningConfigHistoryLayout;\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\SessionUtils.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\UserIdEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\GroupTypeEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\StatusEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\GroupsEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\collections.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\AxiosUtils.js",["1336","1337"],"\r\n\r\nimport { isAdmin, isSubgerente } from 'common/SessionUtils'\r\nimport { getJWT } from 'common/SessionUtils'\r\nimport { isComandoFiscal } from 'common/SessionUtils'\r\nimport { isExternalUser } from 'common/SessionUtils'\r\nimport { getVisibilityGroups } from 'common/SessionUtils'\r\nimport { EDITION_TIMEOUT } from 'common/enviroment'\r\nimport { READ_TIMEOUT } from 'common/enviroment'\r\nimport { exponentialDelay } from 'axios-retry';\r\nimport { LOGIN_TIMEOUT } from 'common/enviroment'\r\n\r\nexport const OR_FILTER = \"or\"\r\nexport const AND_FILTER = \"and\"\r\n\r\nexport const ASC = \"asc\"\r\nexport const DESC = \"desc\"\r\n\r\nexport const EQUAL = \"equal\"\r\nexport const IS_NULL = \"null\"\r\nexport const IN = \"in\"\r\nexport const INTERVAL = \"interval\"\r\nexport const GREATER = \"greater\"\r\n\r\nexport const CHAR = \"char\"\r\nexport const INT = \"int\"\r\nexport const VARCHAR = \"varying\"\r\n\r\n\r\nexport const FILTERS = \"filters\"\r\nexport const ROLE = \"role\"\r\nexport const QUERY = \"query\"\r\nexport const GROUP_IDS = 'group_ids'\r\n\r\nexport const READ = 0\r\nexport const WRITE = 1\r\nexport const LOGIN = 2\r\n\r\n\r\nfunction getRole(){\r\n    if (isExternalUser() ) \r\n        return \"GAECO\"\r\n    else if (isAdmin() || isComandoFiscal() ) \r\n        return \"ADMIN\"\r\n    else if (isSubgerente() ) \r\n        return \"SUBGERENTE\"\r\n    else \r\n        return \"CICC\"\r\n}\r\n\r\nexport function createBaseHttpRequestBody(data) {\r\n    let httpRequestBody = {\r\n        'jwt_token': getJWT(),\r\n        'role': getRole()\r\n    }\r\n    if (data) {\r\n        for (const [key,value] of Object.entries(data) ){\r\n            httpRequestBody[key] = value\r\n        }\r\n    }\r\n\r\n    return {...httpRequestBody}\r\n}\r\n\r\nexport function createQueryHttpRequestBody(filters=[], orderBy=undefined) {\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    httpRequestBody['query'] = {\r\n        \"filters\": [],\r\n    }\r\n    if (filters){\r\n        httpRequestBody['query']['filters'] = filters\r\n    }\r\n    if (orderBy){\r\n        httpRequestBody['query']['order_by'] = orderBy\r\n    }\r\n    return httpRequestBody\r\n}\r\n\r\nexport function addOrderByClause(httpRequestBody, column, direction) {\r\n    let order_by = {\r\n        \"column\": column,\r\n        \"direction\": direction\r\n    }\r\n    httpRequestBody['query']['order_by'] = order_by    \r\n}\r\n\r\n\r\nexport function createOrderByClause(column, direction) {\r\n    let order_by = {\r\n        \"column\": column,\r\n        \"direction\": direction\r\n    }\r\n    return order_by\r\n}\r\n\r\nexport function createSimpleFilterClause(column, columnType, filterType, value) {\r\n    let filter = {\r\n        \"column\": column,\r\n        \"filter_type\": filterType,\r\n        \"column_type\": columnType,\r\n        \"value\": value\r\n    }\r\n    return filter\r\n}\r\n\r\n\r\nexport function createCompositeFilterClause(column, filterType, clauses=[]) {\r\n    let filter = {\r\n        \"column\": column,\r\n        \"value\": [            \r\n        ],\r\n        \"filter_type\": filterType,\r\n        \"column_type\": \"\"\r\n    }\r\n    for (const clause of clauses){\r\n        filter['value'].push(clause)\r\n    }\r\n\r\n    return filter\r\n}\r\n\r\n\r\nexport function createNotFilterClause(column, columnType, filterType, value) {\r\n    return {\r\n        \"column\": \"\",\r\n        \"filter_type\": \"not\",\r\n        \"column_type\": \"\",\r\n        \"value\": createSimpleFilterClause(column, columnType, filterType, value)\r\n    }\r\n}\r\n\r\nexport function mountQueryFromTags(tags, columns){\r\n    let filters = []\r\n    \r\n\t\tObject.keys(tags).filter(columnName => tags[columnName].length > 0).forEach(columnName => {\r\n\t\t\tlet skip = false\r\n\r\n\t\t\tif(columns[columnName].field === \"group_id\"){\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet values = []\r\n\r\n\t\t\ttags[columnName].forEach(filter => {\r\n\t\t\t\tlet value = filter\r\n\r\n\t\t\t\tif(columns[columnName].dropdown)\r\n\t\t\t\t\tswitch(columns[columnName].dropdown[filter].constructor){\r\n\t\t\t\t\t\tcase Function:\r\n\t\t\t\t\t\t\tconst result = columns[columnName].dropdown[filter]()\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(result.constructor === Array){\r\n\t\t\t\t\t\t\t\tfilters.push(...result)\r\n\t\t\t\t\t\t\t\tskip = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tvalues.push(result)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\tcase Object:\r\n\t\t\t\t\t\t\tvalue = columns[columnName].dropdown[filter].value\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tvalue = columns[columnName].dropdown[filter]\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tif(columns[columnName].mask)\r\n\t\t\t\t\tif(filter.constructor === Array)\r\n\t\t\t\t\t\tvalue = filter.map(limit => columns[columnName].mask.decode(limit))\r\n\t\t\t\t\telse \r\n                        value = columns[columnName].mask.decode(filter)\r\n\r\n\t\t\t\tif(columns[columnName].column_type === \"varying\")\r\n\t\t\t\t\tvalue = `%${value}%`\r\n\r\n                const finalFilter = {\r\n\t\t\t\t\tcolumn: columns[columnName].field,\r\n\t\t\t\t\tfilter_type: columns[columnName].filter_type || (filter.constructor === Array ? \"interval\" : \"equal\"),\r\n\t\t\t\t\tcolumn_type: columns[columnName].column_type,\r\n\t\t\t\t\tvalue\r\n\t\t\t\t}\r\n\r\n                if(columns[columnName].field.constructor === Array)\r\n                    columns[columnName].field.forEach(field=>{\r\n\t\t\t\t        values.push({...finalFilter, column: field})\r\n                    })\r\n                else\r\n\t\t\t\t    values.push(finalFilter)\r\n\t\t\t})\r\n\r\n\t\t\tif(skip)\r\n\t\t\t\treturn\r\n\r\n\t\t\tif(values.length === 1)\r\n\t\t\t\tfilters.push(values[0])\r\n\t\t\telse\r\n\t\t\t\tfilters.push({\r\n\t\t\t\t\tfilter_type: \"or\",\r\n\t\t\t\t\tvalue: values\r\n\t\t\t\t})\r\n\t\t})\r\n\r\n\t\treturn filters\r\n}\r\n\r\nexport function mountGroupsFilterClause(tags, groupsSimpleMap) {\r\n    let filters = []\r\n\r\n    if (tags && \"Visibilidade\" in tags) {\r\n        let filter = tags[\"Visibilidade\"]\r\n        let groupsIDs = []\r\n        for (const group of filter){\r\n            let groupID = groupsSimpleMap[group]\r\n            groupsIDs.push(Number(groupID))\r\n        }\r\n        filters = groupsIDs\r\n    } else if (!isAdmin()) {\r\n        filters = getVisibilityGroups().map(Number)        \r\n    }\r\n\r\n    return filters;\r\n}\r\n\r\nexport function cloneFilters(filters) {\r\n    let filtersClone = []\r\n    for (const element of filters) {\r\n        filtersClone.push(element)\r\n    }\r\n    return filtersClone\r\n}\r\n\r\nexport function getTimeoutConfig(mode=READ){\r\n\r\n    let timeout = EDITION_TIMEOUT\r\n    switch (mode) {\r\n        case READ:\r\n            timeout = READ_TIMEOUT\r\n            break;\r\n        case READ:\r\n            timeout = LOGIN_TIMEOUT\r\n            break;\r\n      }\r\n\r\n  return { timeout: timeout }\r\n  \r\n}\r\n\r\nconst { Agent } = require('https');\r\n\r\nexport function getRetryConfig(){\r\n  return {\r\n    httpsAgent: new Agent({\r\n        maxSockets: 8\r\n    }),\r\n    retries: 5,\r\n    shouldResetTimeout: true,\r\n    retryDelay: exponentialDelay,\r\n    retryCondition: _ => true,\r\n    // onRetry: (retryCount, error, requestConfig) => {(\"Tentei denovo\")}\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\http\\configure-http.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\SeverityEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\routes.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Sidebar.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Footer.js",["1338"],"import React from \"react\";\r\nimport { Row, Col, Table} from \"reactstrap\";\r\n\r\nimport MessageModal from \"components/modals/MessageModal\";\r\n\r\nimport { EDITION, ERROR } from \"components/modals/ModalConsts\";\r\n\r\nimport { WarningsContext } from \"context/WarningsContext\";\r\n//import { RiInstagramFill, RiLinkedinBoxFill, RiComputerLine, RiHeartFill } from 'react-icons/ri'\r\n\r\n\r\nrequire('dotenv').config()\r\nconsole.log(process.env)\r\n// styles\r\nexport default function Footer() {\r\n\r\n  const {deadServices} = React.useContext(WarningsContext)\r\n\r\n  const [modalSettings, setModalSetting] = React.useState({\r\n    data: {\r\n      operation: EDITION,\r\n      messageType: ERROR,\r\n      message: \" \",\r\n    },\r\n    show: false\r\n  });\r\n\r\n  const toggleMessageModal = () => {\r\n    setModalSetting((prev) => ({\r\n      ...prev,\r\n      show: false\r\n    }));\r\n  };\r\n\r\n  const DeadServicesTable = () => {\r\n\r\n    return (\r\n      <>\r\n        Serviços indisponíveis\r\n        <Table >\r\n          <thead className=\"text-primary\">\r\n            <tr>\r\n              <th>Serviço</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              deadServices.map((service, index) => {\r\n                return (\r\n                  <tr key={index} >\r\n                    <td>{service}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  };\r\n\r\n  //`Serviços indisponíveis: ${deadServices.join(' ,')}`\r\n\r\n  const showDeadServices = () => {\r\n    if (deadServices.length > 0) {\r\n      setModalSetting((prev) => ({\r\n        ...prev,\r\n        data: {...prev.data, message: <DeadServicesTable/>},\r\n        show: true\r\n      }));\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n    showDeadServices()\r\n\r\n  }, [deadServices])\r\n\r\n  function buildStr() {\r\n    let data = process.env.REACT_APP_GIT_DATE;\r\n    let split = data.split(\"T\");\r\n    data = split[0] + \" - \" + split[1];\r\n\r\n    let str = 'Última atualização em: ';\r\n    str += data;\r\n    str += '. Commit: ';\r\n    str += process.env.REACT_APP_GIT_SHA;\r\n    str += '. Branch: ';\r\n    str += process.env.REACT_APP_GIT_BRANCH;\r\n\r\n    return str;\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <MessageModal {...modalSettings} toggle={toggleMessageModal}/>\r\n      <hr />\r\n\r\n      <Row className=\"links\">\r\n        <Col>\r\n          <h5 style={{textAlign: 'center', fontSize: '15px'}}>{buildStr()}</h5>\r\n        </Col>\r\n      </Row>\r\n    </footer>\r\n  );\r\n}\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\http\\create-http-agents.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Navbar.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\layouts\\Loading.js",["1339"],"import React from \"react\"\r\nimport logo from \"logo.svg\";\r\n\r\nexport default function LoadingPage() {\r\n  return (\r\n    <div class=\"loading-container\">\r\n      <img class=\"loading-icon\" src={logo} />\r\n      <div class=\"loading-spinner\" />\r\n    </div>\r\n  )\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\ViewsCreator.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\validate.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationStatus.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\forms.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\rules\\NotificationRules.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Auditors.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Camera.js",["1340"],"\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport { GoogleMap, Marker } from '@react-google-maps/api'\r\nimport { useJsApiLoader } from '@react-google-maps/api';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from 'reactstrap';\r\nimport env from 'common/enviroment.js';\r\nimport SelectableTable from 'components/tables/SelectableTable';\r\nimport TagsInput from 'components/tags/TagsInput';\r\nimport Tabs from 'components/Tabs';\r\nimport MapLegend from 'components/MapLegend';\r\n\r\nimport mapOptions from 'common/mapOptions.js'\r\nimport { MapsContext } from 'context/MapsContext'\r\nimport { NavigationContext } from 'context/NavigationContext'\r\nimport { createBaseHttpRequestBody } from 'axios/AxiosUtils';\r\n\r\nconst displayLegend = {\r\n  \"DNIT\": \"DNIT\",\r\n  \"EQUIPAMENTOS PRF\": \"PRF\",\r\n  \"Pontos Estado\": \"ESTADO\"\r\n  //\"SUGESTÕES\": \"SUGESTÕES\"\r\n}\r\n\r\nconst colors = {\r\n  \"DNIT\": \"#0f9d58\",\r\n  \"EQUIPAMENTOS PRF\": \"#0288d1\",\r\n  \"Pontos Estado\": \"#ffd600\",\r\n  //\"SUGESTÕES\": \"#801e0f\"\r\n}\r\n\r\nconst categories = Object.keys(colors)\r\n\r\n//verificar props do container\r\n//Aparentemente tem um valor 'auto' para ajustar automaticamente o tamanho da altura para caber\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: 'auto'\r\n};\r\n\r\nconst BLANK_FORM_DATA = {\r\n  \"name\": \"\",\r\n  \"description\": \"\",\r\n  \"municipio\": {},\r\n  \"nrlatitude\": \"\",\r\n  \"nrlongitude\": \"\",\r\n  \"category\": \"\",\r\n  \"status\": true\r\n}\r\n\r\nexport default function Camera(props) {\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n  const [filters, setFilters] = React.useState({});\r\n  const [modal, setModal] = React.useState(false);\r\n  const [editionModal, setEditionModal] = React.useState(false);\r\n  const { camerasData, getCamerasData, citiesPB } = React.useContext(MapsContext);\r\n  const { setIsMap } = React.useContext(NavigationContext);\r\n  const [pointsData, setPointsData] = React.useState(new Array(camerasData.length).fill(false));\r\n  const [pointIndex, setPointIndex] = React.useState(-1)\r\n  const [activeMarkers, setActiveMarkers] = React.useState(new Array(categories.length))\r\n  const [formData, setFormData] = React.useState(BLANK_FORM_DATA)\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n\r\n  const { isLoaded: googleMapLoaded, loadError: googleMapError } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: env.googleApiKey\r\n  })\r\n\r\n\r\n  const markerClick = (index) => () => {\r\n    let markers = [...activeMarkers]\r\n\r\n    markers[index] = !markers[index]\r\n\r\n    setActiveMarkers(markers)\r\n  }\r\n\r\n\r\n  const pointClick = (index) => {\r\n    return () => {\r\n      let points = [...pointsData]\r\n\r\n      points[index] = !points[index]\r\n\r\n      setPointsData(points)\r\n    }\r\n  }\r\n\r\n  const toggleModal = (modalState, setState) => {\r\n    return () => setState(!modalState)\r\n  };\r\n\r\n  const handleChange = (param) => {\r\n    const re = /^-?[0-9\\b]*[.]?[0-9]*$/\r\n\r\n    return e => {\r\n      if (e.target.value === '' || re.test(e.target.value)) {\r\n        setFormData({ ...formData, [param]: e.target.value })\r\n      }\r\n    }\r\n  }\r\n\r\n  const posPatch = () => {\r\n    getCamerasData()\r\n    setEditionModal(false)\r\n  }\r\n\r\n  const submitForm = (method, route, posFunc = () => { }) => {\r\n    //objeto para envio dos dados do form e cadastrar alerta\r\n    return () => {\r\n      let httpRequestBody = createBaseHttpRequestBody(formData)\r\n\r\n      axiosRetryProxy[method](`${env.apiAddress}/locations/${route}`, httpRequestBody)\r\n        .then(res => {\r\n          posFunc()\r\n        })\r\n    }\r\n  }\r\n\r\n  const searchId = (cityName) => {\r\n    for (var i = 0; i < citiesPB.length; i++) {\r\n      if (citiesPB[i].nome === cityName)\r\n        return { id: citiesPB[i].id, name: citiesPB[i].nome }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setIsMap(false)\r\n    getCamerasData()\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (editionModal) {\r\n      let pointIndex = pointsData.indexOf(true)\r\n\r\n      setPointIndex(pointIndex)\r\n      console.log(camerasData[pointIndex])\r\n      setFormData({ ...camerasData[pointIndex], \"municipio\": searchId(camerasData[pointIndex]['municipio']) })\r\n    }\r\n    if (tabIndex === 0) {\r\n      setFormData(BLANK_FORM_DATA)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editionModal, tabIndex])\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Tabs names={['Cadastrar Nova Câmera', 'Gerenciamento de Câmeras']} index={[tabIndex, setTabIndex]} />\r\n      <Card className=\"card\" style={{ borderTopLeftRadius: '0px' }}>\r\n        <CardBody>\r\n          <Row>\r\n            <Col>\r\n              <Label style={{ fontSize: '1.3rem' }}>{tabIndex === 0 ? \"Prévia de posicionamento\" : \"Selecione as câmeras para exclusão\"}</Label>\r\n            </Col>\r\n          </Row>\r\n          <div\r\n            id=\"map\"\r\n            className=\"map\"\r\n            style={{ position: \"relative\", overflow: \"hidden\", display: 'flex' }}\r\n          >\r\n            {tabIndex === 1 && <MapLegend categories={categories} colors={colors} activeCategories={activeMarkers} onClick={markerClick} display={displayLegend} />}\r\n\r\n            {googleMapError && <div>Não foi possível carregar o GoogleMap.</div>}\r\n            {(googleMapLoaded) ? <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={props.center}\r\n                zoom={props.zoom}\r\n                options={mapOptions}\r\n              >\r\n                {tabIndex === 0 &&\r\n                  <Marker\r\n                    className=\"map-icon\"\r\n                    position={{ lat: formData.nrlatitude !== '' && parseFloat(formData.nrlatitude), lng: formData.nrlongitude !== '' && parseFloat(formData.nrlongitude) }}\r\n                    options={{\r\n                      icon: {\r\n                        path: 'M18.364 17.364L12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0zM12 13a2 2 0 1 0 0-4 2 2 0 0 0 0 4z',\r\n                        fillColor: '#0f9d58',\r\n                        fillOpacity: 1,\r\n                        strokeColor: '#2c2c2c',\r\n                        anchor: {\r\n                          x: 20,\r\n                          y: 20,\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                }\r\n\r\n                {/*criação das cameras no mapa */}\r\n                {tabIndex === 1 &&\r\n                  camerasData.filter(point => {\r\n                    return !activeMarkers[categories.indexOf(point['category'])]\r\n                  })\r\n                    .map((point, index) => (\r\n                      <Marker\r\n                        key={`marker-${index}`}\r\n                        className=\"map-icon\"\r\n                        position={{ lat: point['nrlatitude'], lng: point['nrlongitude'] }}\r\n                        onClick={pointClick(index)}\r\n                        zIndex={pointsData[index] ? categories.length + 1 : categories.length - categories.indexOf(point['category'])}\r\n                        options={{\r\n                          icon: {\r\n                            url: `https://ik.imagekit.io/exi1dv80wm/pin/${pointsData[index] ? 'ff0000' : colors[point['category']].slice(-6)}.png`,\r\n                            scaledSize: {\r\n                              height: 26,\r\n                              width: 21\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))\r\n                }\r\n              </GoogleMap> \r\n            : \"\"}\r\n          </div>\r\n\r\n          {tabIndex === 0 &&\r\n            <Form style={{ margin: \"2rem 0.25rem\" }} onSubmit={e => { e.preventDefault(); }}>\r\n\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"latitude\">Latitude</Label>\r\n                    <Input id=\"latitude\" placeholder=\"ex: -7.43933\" value={formData.nrlatitude} onChange={handleChange(\"nrlatitude\")} />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"longitude\">Longitude</Label>\r\n                    <Input id=\"longitude\" placeholder=\"ex: -34.9136\" value={formData.nrlongitude} onChange={handleChange(\"nrlongitude\")} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"descricao\">Nome do Local de Registro</Label>\r\n                    <Input id=\"descricao\" placeholder=\"ex: BR 101 KM 109+900\" value={formData.name} onChange={e => setFormData({ ...formData, \"name\": e.target.value })} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"descricao\">Descrição</Label>\r\n                    <Input id=\"descricao\" placeholder=\"Descrição/Ponto de Referência\" value={formData.description} onChange={e => setFormData({ ...formData, \"description\": e.target.value })} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={2} style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n                  <FormGroup>\r\n                    <Label for=\"selectCategoria\">Categoria </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"selectt\"\r\n                      id=\"selectCategoria\"\r\n                      value={formData.category}\r\n                      onChange={e => setFormData({ ...formData, \"category\": e.target.value })}\r\n                    >\r\n                      <option>Selecione</option>\r\n                      <option value=\"DNIT\">DNIT</option>\r\n                      <option value=\"Equipamento PRF\">Equipamento PRF</option>\r\n                      <option value=\"Sugestões\">Sugestões</option>\r\n                      <option value=\"Pontos Estado\">Pontos Estado</option>\r\n\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={2}>\r\n                  <FormGroup>\r\n                    <Label for=\"selectStatus\">Status </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"selectStatuss\"\r\n                      id=\"selectStatus\"\r\n                      value={formData.status}\r\n                      onChange={e => setFormData({ ...formData, \"status\": e.target.value })}\r\n                    >\r\n                      <option>Selecione</option>\r\n                      <option value=\"ativo\">Ativo</option>\r\n                      <option value=\"inativo\">Inativo</option>\r\n\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleSelectMulti\">Município </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"selectMulti\"\r\n                      id=\"exampleSelectMulti\"\r\n                      value={formData.municipio.id}\r\n                      onChange={e => setFormData({ ...formData, \"municipio\": e.target.value })}\r\n                    >\r\n                      <option>Selecione</option>\r\n                      {citiesPB.map((city, index) => {\r\n                        return (\r\n                          <option key={`option-city-${index}`} value={city.id} id={index}>{city.nome}</option>\r\n                        )\r\n                      })}\r\n\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col style={{ alignItems: 'center', justifyContent: 'center', display: 'flex' }}>\r\n                  <Button color=\"primary\" style={{ width: \"15rem\", marginTop: '2rem' }} onClick={submitForm(\"post\", \"create\")}>Cadastrar</Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          }\r\n          {tabIndex === 1 &&\r\n            <>\r\n              <Row>\r\n                <Col style={{ marginTop: '2rem' }}>\r\n                  <TagsInput\r\n                    setQuery={setFilters}\r\n                    columns={{\r\n                      \"Nome\": {\r\n                        display: \"name\",\r\n                        column_type: \"varying\"\r\n                      },\r\n                      \"Descrição\": {\r\n                        field: \"description\",\r\n                        column_type: \"varying\"\r\n                      },\r\n                      \"Latitude\": {\r\n                        field: \"nrlatitude\",\r\n                        column_type: \"float\"\r\n                      },\r\n                      \"Longitude\": {\r\n                        field: \"nrlongitude\",\r\n                        column_type: \"float\"\r\n                      },\r\n                      \"Categoria\": {\r\n                        field: \"category\",\r\n                        column_type: \"varying\"\r\n                      }\r\n                    }}\r\n                  />\r\n                  <SelectableTable data={camerasData} state={[pointsData, pointClick]} pageSize={5} />\r\n                </Col>\r\n              </Row>\r\n              <div className=\"deleteContainer\">\r\n                <Row>\r\n                  <Col style={{ marginTop: '2rem' }}>\r\n                    <ul>\r\n                      {pointsData.map((point, index) => {\r\n                        if (point)\r\n                          return <li key={index}>{camerasData[index]['name']}</li>\r\n                        else\r\n                          return null\r\n                      })}\r\n                    </ul>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row style={{ marginTop: \"2rem\" }}>\r\n                  <Col style={{ alignItems: 'center', justifyContent: 'center', display: 'flex' }} >\r\n                    <Button color=\"primary\" disabled={!pointsData.filter(point => point).length} onClick={toggleModal(modal, setModal)}>Confirmar Exclusão</Button>\r\n                    {pointsData.filter(point => point).length === 1 && <Button color=\"primary\" style={{ marginLeft: '1rem' }} onClick={toggleModal(editionModal, setEditionModal)}>Editar</Button>}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Modal isOpen={modal} toggle={toggleModal(modal, setModal)}>\r\n                  <ModalHeader>Confirmar Ação</ModalHeader>\r\n                  <ModalBody>\r\n                    Deseja realmente excluir as seguintes câmeras:\r\n                    <ul>\r\n                      {pointsData.map((point, index) => {\r\n                        if (point)\r\n                          return <li key={index}>{camerasData[index]['name']}</li>\r\n                        else\r\n                          return null\r\n                      })}\r\n                    </ul>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"danger\" onClick={toggleModal(modal, setModal)}>Excluir</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggleModal(modal, setModal)}>Cancelar</Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={editionModal} toggle={toggleModal(editionModal, setEditionModal)}>\r\n                  <ModalHeader toggle={toggleModal(editionModal, setEditionModal)}>{formData.name}</ModalHeader>\r\n                  <ModalBody style={{ justifyContent: 'center', alignContent: 'center', display: 'flex' }}>\r\n                    <Form>\r\n                      <FormGroup row>\r\n                        <Label for=\"name\" sm={6}><b>Nome:</b></Label>\r\n                        <Col sm={12}>\r\n                          <Input value={formData.name} onChange={e => setFormData({ ...formData, \"name\": e.target.value })} />\r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup row>\r\n                        <Label for=\"description\" sm={6}><b>Descrição do Alerta:</b></Label>\r\n                        <Col sm={12}>\r\n                          <Input type=\"textarea\" value={formData.description} onChange={e => setFormData({ ...formData, \"description\": e.target.value })} />\r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup row>\r\n                        <Label for=\"latitude\" sm={12}><b>Coordenadas (Latitude, Longitude):</b></Label>\r\n                        {/* <Col sm={12}>\r\n                          <Input type=\"textarea\" value={toDMS(lat, long)} onChange={e => setLat(e.target.value)} />\r\n                        </Col> */}\r\n                        <Col sm={6}>\r\n                          <Input value={formData.nrlatitude} onChange={e => setFormData({ ...formData, \"nrlatitude\": e.target.value })} />\r\n                        </Col>\r\n                        <Col sm={6}>\r\n                          <Input value={formData.nrlongitude} onChange={e => setFormData({ ...formData, \"nrlongitude\": e.target.value })} />\r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup row>\r\n                        <Label for=\"municipio\" sm={12}><b>Município:</b></Label>\r\n                        <Col sm={12}>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"selectMulti\"\r\n                            id=\"exampleSelectMulti\"\r\n                            value={formData.municipio.id}\r\n                            onChange={e => setFormData({ ...formData, \"municipio\": e.target.value })}\r\n                          >\r\n                            {/* <option>Selecione</option> */}\r\n                            {citiesPB.map((city, index) => {\r\n                              return (\r\n                                <option key={`${city.nome}`} value={city.id} id={index}>{city.nome}</option>\r\n                              )\r\n                            })}\r\n\r\n                          </Input>\r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup row>\r\n                        <Label for=\"municipio\" sm={12}><b>Categoria e Status:</b></Label>\r\n\r\n                        <Col sm={7}>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"selectt\"\r\n                            id=\"selectCategoria\"\r\n                            value={formData.category}\r\n                            onChange={e => setFormData({ ...formData, \"category\": e.target.value })}\r\n                          >\r\n                            {/* <option>Selecione</option> */}\r\n                            <option value=\"DNIT\">DNIT</option>\r\n                            <option value=\"EQUIPAMENTOS PRF\">Equipamentos PRF</option>\r\n                            <option value=\"SUGESTÕES\">Sugestões</option>\r\n                            <option value=\"Pontos Estado\">Pontos Estado</option>\r\n\r\n                          </Input>\r\n                        </Col>\r\n                        <Col sm={5}>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"status\"\r\n                            id=\"status\"\r\n                            value={formData.status}\r\n                            onChange={e => setFormData({ ...formData, \"status\": e.target.value })}\r\n                          >\r\n                            {/* <option>Selecione</option> */}\r\n                            <option value={true}>Ativado</option>\r\n                            <option value={false}>Desativado</option>\r\n                          </Input>\r\n                        </Col>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup check row style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\r\n                        <Col md={16} >\r\n                          <Button onClick={pointIndex >= 0 && submitForm(\"patch\", `update/${camerasData[pointIndex][\"id\"]}`, posPatch)}>Confirmar Edição</Button>\r\n                        </Col>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </ModalBody>\r\n                </Modal>\r\n              </div>\r\n            </>\r\n          }\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nCamera.defaultProps = {\r\n  center: {\r\n    lat: -7.254653852199306,\r\n    lng: -36.69661154766497\r\n  },\r\n  zoom: 4\r\n};\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\PoliceCars.js",["1341","1342","1343"],"import React from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NavigationContext } from 'context/NavigationContext'\r\nimport { WarningsContext } from 'context/WarningsContext';\r\n\r\nimport env from 'common/enviroment'\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\nimport GROUP_TYPE_ENUM from 'common/enumerators/GroupTypeEnum'\r\n\r\nimport Tabs from 'components/Tabs';\r\nimport TagsInput from 'components/tags/TagsInput';\r\nimport Table from 'components/tables/Table';\r\nimport EditionButtons from 'components/buttons/EditionButtons';\r\nimport ModalEditionButtons from 'components/buttons/ModalEditionButtons';\r\n\r\nimport ConfirmationModal from 'components/modals/ConfirmationModal ';\r\nimport MessageModal from 'components/modals/MessageModal';\r\nimport RevisionModal from 'components/modals/RevisionModal';\r\n\r\nimport { NumericFilter } from 'common/utils/filters';\r\nimport { isAdmin, isLoggedIn } from 'common/SessionUtils';\r\nimport { createRevisionModalData } from 'components/modals/RevisionModal';\r\nimport { ERROR, EXCLUSION, CREATION, EDITION } from 'components/modals/ModalConsts';\r\nimport { createBaseHttpRequestBody, createBaseHttpRequestBody as createEditionHttpRequestBody, createQueryHttpRequestBody, createOrderByClause, createSimpleFilterClause} from 'axios/AxiosUtils';\r\nimport { ViewsContext } from 'context/ViewsContext';\r\nimport { createCompositeFilterClause } from 'axios/AxiosUtils';\r\nimport { OR_FILTER } from 'axios/AxiosUtils';\r\n// Não usado pois, não há campo opcional no Form\r\n// import { isEmpty } from 'common/utils/collections'; \r\nimport { treatResponse } from 'common/utils/errorTreatment';\r\nimport treatError from 'common/utils/errorTreatment';\r\n\r\nconst BLANK_FORM_DATA = {\r\n  \"police_car_id\": \"\",\r\n  \"police_car_name\": \"\",\r\n  \"police_car_description\": \"\",\r\n}\r\n\r\nconst GERENCIA_OPTIONS = {\r\n  \"Selecione uma opção\": \"\",\r\n  \"GR1 - JOÃO PESSOA\": \"2\",\r\n  \"GR2 - GUARABIRA\": \"3\",\r\n  \"GR3 - CAMPINA GRANDE\": \"4\",\r\n  \"GR4 - PATOS\": \"5\",\r\n  \"GR5 - CAJAZEIRAS\": \"6\",\r\n  \"COE\": \"7\",\r\n  \"GECOF\": \"GECOF\",\r\n  \"GEOFMT\": \"GEOFMT\",\r\n  \"SEFAZ\": \"SEFAZ\",\r\n  \"---------------------\": \"  \",\r\n  \"USUÁRIO EXTERNO\": \"USUÁRIO EXTERNO\",\r\n}\r\n\r\nexport default function Auditors() {\r\n  const history = useHistory()\r\n\r\n  const { refresh, refreshFlag, auditorsFilters, setAuditorsFilters } = React.useContext(ViewsContext)\r\n  const { startSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n  const { setIsMap } = React.useContext(NavigationContext);\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [isloading, setIsLoading] = React.useState(false)\r\n  const [pageIndex, setPageIndex] = React.useState(0)\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n\r\n  const [filters, setFilters] = React.useState([])\r\n  const [formData, setFormData] = React.useState(BLANK_FORM_DATA)\r\n  const [oldFormData, setOldFormData] = React.useState(BLANK_FORM_DATA)\r\n  const [invalid, setInvalid] = React.useState(false)\r\n\r\n  const [modalReadonlyMode, setModalReadonlyMode] = React.useState(true);\r\n  const [modalType, setModalType] = React.useState(-1);\r\n  const [isModalActive, setIsModalActive] = React.useState(false);\r\n  const [modalData, setModalData] = React.useState({});\r\n  const toggleModalOn = (type) => { setModalType(type); setIsModalActive(true); };\r\n  const toggleModalOff = () => { setModalType(MODAL_TYPE_ENUM.NONE); setIsModalActive(false); }\r\n  const [isEditionModalActive, setEditionModal] = React.useState(false);\r\n  const toggleEditionModal = () => setEditionModal(prev => !prev);\r\n  const [groupsOptions, setGroupsOptions] = React.useState(GERENCIA_OPTIONS)\r\n\r\n  const mountRetrievalFilters = (filters) => {\r\n    let orClauses = []\r\n    \r\n    orClauses.push(createSimpleFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.INSTITUCIONAL))\r\n    orClauses.push(createSimpleFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.SIGILOSO))\r\n    \r\n    let groupsFilter = createCompositeFilterClause(\"group_type\", OR_FILTER, orClauses)\r\n    filters.push(groupsFilter)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let filters = [] \r\n    mountRetrievalFilters(filters)\r\n\r\n    let orderBy = createOrderByClause('police_car_name', \"asc\")\r\n    let httpRequestBody = createQueryHttpRequestBody(filters, orderBy)\r\n\r\n    // Request para obter as opções de gerência\r\n    // DESATIVADO POR: Não há informações de GRE envolvendo Carros de Polícia\r\n    // axios.post(`${env.apiAddress}/group/read_all`, httpRequestBody)\r\n    //   .then(res => {\r\n    //     let create_options  = {}\r\n    //     create_options['0'] = {group_id: 0, group_description: \"SEFAZ\", group_name: \"SEFAZ\"}\r\n        \r\n    //     for (let group in res.data){\r\n    //       create_options[res.data[group].group_id] = {group_id: res.data[group].group_id, group_description: res.data[group].group_description, group_name: res.data[group].group_name}\r\n    //     }\r\n    //     setGroupsOptions(create_options)\r\n    //   }).catch(err => {})\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n      setIsMap(false);\r\n      refresh()\r\n      if (wasReloaded) {\r\n        startSSE()\r\n        setWasReloaded(false)\r\n      }\r\n\r\n      if (tabIndex === 1) {\r\n        if (filters && filters.length > 0)\r\n          setIsLoading(true)\r\n\r\n        setPageIndex(() => (0))\r\n      } else if (tabIndex === 0) {\r\n        cleanInputs();\r\n        setModalReadonlyMode(false);\r\n      }\r\n\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filters, pageIndex])\r\n\r\n  const hasEmptyValues = (obj) => Object.values({ ...obj, \"user_id\": 1, \"user_phone\" : '1' }).some(x => typeof x === 'string' && x.trim() === \"\")\r\n\r\n  const isEqual = (obj1, obj2) => {\r\n    for (let key in obj1) {\r\n      if (obj1[key] !== obj2[key])\r\n        return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const cleanInputs = () => {\r\n    setFormData(BLANK_FORM_DATA)\r\n    setOldFormData(BLANK_FORM_DATA)\r\n  }\r\n\r\n  const openEditionModal = (data, readOnlyMode = false) => {\r\n    if (data) {\r\n      setOldFormData(data)\r\n      setFormData(data)\r\n      setInvalid(false);\r\n\r\n      setModalReadonlyMode(readOnlyMode);\r\n      setEditionModal(true)\r\n    }\r\n  }\r\n\r\n  const openRevisionModal = () => {\r\n    if (hasEmptyValues(formData)) {\r\n      setInvalid(true)\r\n    }\r\n    else {\r\n      setInvalid(false)\r\n\r\n      let data = createRevisionModalData(\"Revise os Dados do Carro de Polícia\",\r\n        [\r\n          \"Id\",\r\n          \"Nome\",\r\n          \"Descrição\",\r\n        ],\r\n        [\r\n          formData.police_car_id,\r\n          formData.police_car_name,\r\n          formData.police_car_description,\r\n        ]\r\n        )\r\n      setModalData(data)\r\n      toggleModalOn(MODAL_TYPE_ENUM.REVISION)\r\n    }\r\n  };\r\n\r\n  const openConfirmationModal = () => {\r\n    if (hasEmptyValues(formData)) {\r\n      setInvalid(true)\r\n    }\r\n    else if (isEqual(formData, oldFormData)) {\r\n      setInvalid(true)\r\n      setModalData({ \r\n        operation: EDITION,\r\n        messageType: ERROR,\r\n        message: \"Não há alterações a serem salvas para este Carro de Polícia!\"\r\n      });\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n    }\r\n    else {\r\n      setInvalid(false)\r\n      setModalData({ entity: \"e Carro de Polícia\", operation: EDITION });\r\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n    }\r\n  }\r\n\r\n  const openDeleteModal = (id, name) => {\r\n    if (id) {\r\n      setFormData({ ...formData, \"police_car_id\": id });\r\n      setModalData({ entity: `e Carro de Polícia ${id}`, operation: EXCLUSION, id: id });\r\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n    }\r\n  }\r\n\r\n  const createReadHttpRequestBody = () => {\r\n    let orderBy = createOrderByClause(\"police_car_id\", \"asc\")\r\n    let httpRequestBody = createQueryHttpRequestBody(filters, orderBy)\r\n\r\n    console.log(\"httpRequestBody \", httpRequestBody);\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createCountHttpRequestBody = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    httpRequestBody['filters'] = filters\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createPoliceCar = () => {\r\n    const httpRequestBody = createEditionHttpRequestBody()\r\n\r\n    httpRequestBody['police_car_id'] = formData.police_car_id\r\n    httpRequestBody['police_car_name'] = formData.police_car_name\r\n    httpRequestBody['police_car_description'] = formData.police_car_description\r\n    httpRequestBody['police_car_modification_date'] = new Date().toISOString()\r\n\r\n    setSpinner(true)\r\n    let entity = \"do Carro de Polícia\"\r\n    axios.post(`${env.apiAddress}/police_car/create`, httpRequestBody)\r\n      .then(res => {\r\n        treatResponse(entity, CREATION, 'police_car_id', res,  setModalData, refresh)\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, CREATION));\r\n        console.log(err)\r\n      }).finally(() => {\r\n        cleanInputs();\r\n        setSpinner(false)\r\n        toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n      })\r\n  }\r\n\r\n  const deletePoliceCar = (id) => {\r\n    let httpRequestBody = createEditionHttpRequestBody()\r\n\r\n    setSpinner(true)\r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    if (isEditionModalActive) {\r\n      toggleEditionModal()\r\n    }\r\n\r\n    let entity = \"do Carro de Polícia\"\r\n\r\n    axios.delete(`${env.apiAddress}/police_car/delete/${id}`, { data: httpRequestBody })\r\n      .then(res => {\r\n        treatResponse(entity, EXCLUSION, 'police_car_id', res,  setModalData, refresh)\r\n\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, EXCLUSION));\r\n      }).finally(() => {\r\n        setSpinner(false)\r\n      })\r\n  }\r\n\r\n  const updatePoliceCar = () => {\r\n    if (hasEmptyValues(formData))\r\n      setInvalid(true)\r\n    else {\r\n      setSpinner(true)\r\n      toggleEditionModal()\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n      const httpRequestBody = createEditionHttpRequestBody()\r\n\r\n      httpRequestBody['police_car_id'] = formData.police_car_id\r\n      httpRequestBody['police_car_name'] = formData.police_car_name\r\n      httpRequestBody['police_car_description'] = formData.police_car_description\r\n      httpRequestBody['police_car_modification_date'] = new Date().toISOString()\r\n\r\n      let entity = \"do Carro de Polícia\"\r\n      axios.patch(`${env.apiAddress}/police_car/update/${formData.police_car_id}`, httpRequestBody)\r\n        .then(res => {\r\n          treatResponse(entity, EDITION, 'police_car_id', res,  setModalData, refresh)\r\n        }).catch(err => {\r\n          setModalData(treatError(err, entity, EDITION));\r\n        }).finally(() => {\r\n          setSpinner(false)\r\n          cleanInputs()\r\n        })\r\n    }\r\n  }\r\n\r\n  const isDisabled = () => {\r\n    return !isAdmin()\r\n  }\r\n\r\n  const EditionForm = (props) => {\r\n    return (<Form key={\"A\"} style={{ margin: \"5px 0px 10px 0px\" }} >\r\n\r\n      <FormGroup row>\r\n        <Label for=\"id\" sm={6}>\r\n          <b>ID</b>\r\n        </Label>\r\n        <Col sm={12}>\r\n          <Input key={\"A0\"}\r\n            value={formData.police_car_id}\r\n            maxLength=\"10\"\r\n            readOnly={modalReadonlyMode}\r\n            onChange={e => setFormData({ ...formData, 'police_car_id': e.target.value })}\r\n            invalid={invalid && (formData.police_car_id.trim() === \"\")}\r\n          />\r\n        </Col>\r\n      </FormGroup>\r\n\r\n      <FormGroup row>\r\n        <Label for=\"name\" sm={6}>\r\n          <b>Nome</b>\r\n        </Label>\r\n        <Col sm={12}>\r\n          <Input key={\"A1\"}\r\n            value={formData.police_car_name}\r\n            maxLength=\"20\"\r\n            readOnly={modalReadonlyMode}\r\n            onKeyPress={event => {NumericFilter(event) }}\r\n            onChange={e => setFormData({ ...formData, 'police_car_name': e.target.value })}\r\n            invalid={invalid && (formData.police_car_name.trim() === \"\")}\r\n          />\r\n        </Col >\r\n      </FormGroup >\r\n\r\n     <FormGroup row>\r\n        <Label for=\"name\" sm={6}>\r\n          <b>Descrição</b>\r\n        </Label>\r\n        <Col sm={12}>\r\n          <Input key={\"A2\"}\r\n            value={formData.police_car_description}\r\n            readOnly={modalReadonlyMode}\r\n            maxLength=\"60\"\r\n            onKeyPress={event => { NumericFilter(event) }}\r\n            onChange={e => setFormData({ ...formData, 'police_car_description': e.target.value })}\r\n            invalid={invalid && (formData.police_car_description.trim() === \"\")}\r\n          />\r\n        </Col >\r\n      </FormGroup >\r\n\r\n      {(props.isCreationForm) ?\r\n        <Button color=\"primary\" onClick={() => { openRevisionModal() }} style={{ marginTop: '2rem' }}>Cadastrar</Button>\r\n        : <ModalEditionButtons\r\n          id={formData.user_id} data={formData}\r\n          modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} isDisabled={isDisabled}\r\n          editionAction={setModalReadonlyMode} deleteAction={openDeleteModal}\r\n          saveAction={openConfirmationModal} cancelAction={toggleEditionModal}\r\n        />\r\n      }\r\n    </Form >\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Tabs names={[\r\n          'Cadastrar Novo Carro de Polícia',\r\n          'Gerenciamento de Carros de Polícia'\r\n        ]} \r\n        index={[tabIndex, setTabIndex]} />\r\n        <Card className=\"card\" style={{ borderTopLeftRadius: '0px' }}>\r\n          <CardBody>\r\n            {tabIndex === 0 &&\r\n              EditionForm({ isCreationForm: true, isModal: false })\r\n            }\r\n            {tabIndex === 1 &&\r\n              <>\r\n                <TagsInput\r\n                  tagsState={[auditorsFilters, setAuditorsFilters,]}\r\n                  setQuery={setFilters}\r\n                  columns={{\r\n                    \"Nome\": {\r\n                      field: \"police_car_name\",\r\n                      column_type: \"char\",\r\n                      size: 20,\r\n                    },\r\n                    \"ID\": {\r\n                      field: \"police_car_id\",\r\n                      column_type: \"char\",\r\n                      size: 10,\r\n                    },\r\n                    \"Descrição\": {\r\n                      field: \"police_car_description\",\r\n                      column_type: \"char\",\r\n                      size: 60\r\n                    }\r\n                  }} />\r\n\r\n                <Table\r\n                  dataUrl=\"/police_car/read_all\"\r\n                  countUrl=\"\"\r\n                  count=\"17\"\r\n                  requestBody={createReadHttpRequestBody}\r\n                  countRequestBody={createCountHttpRequestBody}\r\n                  tags={filters}\r\n                  fillData\r\n                  retrieveData={(data) => data}\r\n                  refresh={refreshFlag}\r\n                  trProps={row => { return { onDoubleClick: (e) => { openEditionModal(row, true) } } }}\r\n                  loading={[isloading, setIsLoading]}\r\n                  columns={{\r\n                    \"ID\": {\r\n                      args: \"police_car_id\",\r\n                      tdStyle: { wordBreak: 'break-word' }\r\n                    },\r\n                    \"Nome\": {\r\n                      args: \"police_car_name\",\r\n                      tdStyle: { wordBreak: 'break-word' }\r\n                    },\r\n                    \"Descrição\": {\r\n                      args: \"police_car_description\",\r\n                      tdStyle: { wordBreak: 'break-word' }\r\n                    },\r\n                    \"Última Modificação\": {\r\n                      args: \"police_car_modification_date\",\r\n                      tdStyle: { wordBreak: 'break-word' }\r\n                    },\r\n                    \"Ações\": {\r\n                      args: [\"police_car_id\", \"police_car_name\"],\r\n                      tdStyle: { textAlign: 'center' },\r\n                      thStyle: { textAlign: 'center' },\r\n                      Func: ({ data, row_data }) => <EditionButtons isModal={false} data={row_data} id={data[0]}\r\n                        modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} isDisabled={isDisabled}\r\n                        editionAction={openEditionModal} deleteAction={openDeleteModal} />\r\n                    }\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          </CardBody >\r\n        </Card >\r\n      </div >\r\n      {isEditionModalActive &&\r\n        <Modal\r\n          isOpen={isEditionModalActive} toggle={() => { cleanInputs(); toggleEditionModal() }}\r\n          style={{ maxWidth: '70%' }}\r\n          size=\"lg\"\r\n        >\r\n          <ModalHeader toggle={() => { cleanInputs(); toggleEditionModal() }}>Auditor Fiscal Cadastrado</ModalHeader>\r\n          <ModalBody style={{ justifyContent: 'center', alignContent: 'center', padding: '0.5rem' }}>\r\n            {EditionForm({ isCreationForm: false, isModal: true })}\r\n          </ModalBody>\r\n        </Modal>\r\n      }\r\n\r\n      {modalType === MODAL_TYPE_ENUM.CONFIRMATION && <ConfirmationModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethods={[undefined, updatePoliceCar, deletePoliceCar]} />}\r\n\r\n      {modalType === MODAL_TYPE_ENUM.MESSAGE && <MessageModal show={isModalActive} toggle={toggleModalOff} data={modalData} spinner={spinner} />}\r\n\r\n      {modalType === MODAL_TYPE_ENUM.REVISION && <RevisionModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethod={createPoliceCar} spinner={spinner} />}\r\n    </>\r\n  )\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Maps.js",["1344","1345","1346","1347"],"import React, { useMemo, useState } from 'react'\r\nimport { GoogleMap, Marker } from '@react-google-maps/api'\r\nimport { useJsApiLoader } from '@react-google-maps/api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ListGroup, ListGroupItem,\r\n  Spinner, Alert,\r\n  InputGroupText, InputGroup\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\n\r\nimport mapOptions from 'common/mapOptions.js'\r\nimport env from 'common/enviroment.js'\r\nimport USER_ID_ENUM from 'common/enumerators/UserIdEnum'\r\n\r\nimport Table from 'components/tables/Table'\r\nimport Tabs from 'components/Tabs';\r\n\r\nimport MapLegend from 'components/MapLegend'\r\n\r\nimport { MapsContext } from 'context/MapsContext'\r\nimport { WarningsContext } from 'context/WarningsContext';\r\nimport { VehicleContext } from 'context/VehicleContext';\r\nimport { AuditorsContext } from 'context/AuditorsContext';\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\n\r\nimport { isLoggedIn } from 'common/SessionUtils';\r\nimport { getCortexToken } from 'common/SessionUtils';\r\nimport { getUserRole } from 'common/SessionUtils';\r\n\r\nimport WarningModal from 'components/modals/WarningModal/WarningModal';\r\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\r\nimport { getUserLogin } from 'common/SessionUtils';\r\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\r\nimport { isLocked } from 'common/enumerators/LockEnum';\r\nimport { isTreated } from 'common/enumerators/NotificationStatus';\r\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\r\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL  } from \"common/model/Notification\";\r\nimport { hasUserLoggedData } from 'common/SessionUtils';\r\nimport { getUserRegistrationID } from 'common/SessionUtils';\r\nimport { getUserID } from 'common/SessionUtils';\r\nimport { getUserName } from 'common/SessionUtils';\r\nimport { Notification } from \"common/model/Notification\";\r\nimport { isEmpty } from 'common/utils/collections';\r\nimport { getNowDateTimeString } from 'common/utils/validate';\r\nimport LocationTrackingModal from 'components/modals/LocationTrackingModal/LocationTrackingModal';\r\nimport useToggle from 'common/hooks/useToogle';\r\nimport { useModalWithData } from 'common/hooks/useModalWithData';\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\n\r\n\r\n\r\nexport default function Maps(props) {\r\n\r\n  const body = {\r\n    'cortex_token': getCortexToken(),\r\n    'role': getUserRole()\r\n  }\r\n\r\n  const history = useHistory()\r\n\r\n  const { setplaca } = React.useContext(VehicleContext)\r\n  const { warnings, traffic, changeVisto, printIsMap, startSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n  const { getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const { activeCameras, pointsData, setPointsData, getCamerasData } = React.useContext(MapsContext);\r\n  const { warningsViewed , setWarningsViewed} = React.useContext(WarningsUpdateContext)\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n\r\n  //const [modalMaps, setModalMaps] = React.useState(false)\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n  const [index, setIndex] = useState(0)\r\n  //const toggleMapsModal = () => setModalMaps(!modalMaps)\r\n\r\n  const [modalPlaca, setModalPlaca] = React.useState(false)\r\n  const toggleModalPlaca = () => setModalPlaca(!modalPlaca)\r\n\r\n\r\n  const [warningModalData, setWarningModalData] = React.useState({})\r\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA)\r\n  const [activeModal, setActiveModal] = React.useState(-1)\r\n  const toggleModal = (i = -1) => {\r\n    setActiveModal(i)\r\n  }\r\n  const [reload, setReload] = React.useState(false)\r\n  const toggleReload = () => setReload(!reload)\r\n\r\n  const [fetchDataFlag, toggleFetchData] = useToggle(false)\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  const { isLoaded: googleMapLoaded, loadError : googleMapError } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: env.googleApiKey\r\n  })\r\n\r\n\r\n  const [typeCameraFilters, setTypeCameraFilters] = React.useState({\r\n    'DNIT': true,\r\n    'PRF': true,\r\n    'SEMOB': true,\r\n    'Estadual': true\r\n  })\r\n\r\n\r\n  const displayLegend = {\r\n    \"DNIT\": \"DNIT\",\r\n    \"EQUIPAMENTOS PRF\": \"PRF\",\r\n    \"Pontos Estado\": \"ESTADO\"\r\n    //\"SUGESTÕES\": \"SUGESTÕES\"\r\n  }\r\n\r\n  const colors = {\r\n    \"DNIT\": \"#0f9d58\",\r\n    \"EQUIPAMENTOS PRF\": \"#0288d1\",\r\n    \"Pontos Estado\": \"#ffd600\"\r\n    //\"SUGESTÕES\": \"#801e0f\"\r\n  }\r\n  const categories = Object.keys(colors)\r\n  const [activeMarkers, setActiveMarkers] = React.useState(new Array(categories.length))\r\n\r\n  const titleCase = (text) => {\r\n    return text.toLowerCase()\r\n      .split(' ')\r\n      .map((word) => {\r\n        return word[0].toUpperCase() + word.slice(1);\r\n      }).join(' ')\r\n  }\r\n\r\n\r\n\r\n  const ChangeKey = (nome) => {\r\n\r\n    let mudar = []\r\n\r\n    nome.split('').forEach((letra, index) => {\r\n      if (nome[index] === `${nome[index].toUpperCase()}`) {\r\n        mudar.push(nome[index])\r\n\r\n      }\r\n    })\r\n\r\n    mudar.forEach(function (letra) {\r\n      nome = nome.replace(`${letra}`, ` ${letra.toLowerCase()}`)\r\n    })\r\n\r\n    return titleCase(nome)\r\n\r\n  }\r\n\r\n  const pointClick = (index) => {\r\n    return () => {\r\n      let points = [...pointsData]\r\n\r\n      points[index] = {\r\n        ...points[index],\r\n        active: !points[index].active\r\n      }\r\n\r\n      setPointsData(points)\r\n    }\r\n  }\r\n\r\n  const markerClick = (index) => () => {\r\n    let markers = [...activeMarkers]\r\n\r\n    markers[index] = !markers[index]\r\n\r\n    setActiveMarkers(markers)\r\n  }\r\n\r\n  //verificar props do container\r\n  //Aparentemente tem um valor 'auto' para ajustar automaticamente o tamanho da altura para caber\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: 'auto'\r\n  };\r\n\r\n  const setEditionDataOLD = (warning, data) => {\r\n\r\n    const auditorData = getAuditorRegistry(getUserLogin(), USER_ID_ENUM.USER_LOGIN);\r\n\r\n    if (warning) {\r\n\r\n      if (warning['fiscal_action_auditors']) {\r\n        let auditors = {}\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_NAME)\r\n        }\r\n        data[\"fiscal_action_auditors\"] = auditors\r\n      }\r\n\r\n\r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_report_auditor\"], USER_ID_ENUM.USER_ID)\r\n      if (monitoringAuditor && Object.keys(monitoringAuditor).length > 0) {\r\n        data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n        data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n        data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n\r\n      } else {\r\n        data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n        if (auditorData) {\r\n          data[\"monitoring_user_registration_id\"] = auditorData.user_registration_id\r\n          data[\"monitoring_user_id\"] = auditorData.user_id\r\n          data[\"monitoring_user_name\"] = auditorData.user_name\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return data\r\n\r\n  }\r\n\r\n  const setEditionData = (warning, data) => {\r\n    \r\n\r\n    if (!warning)\r\n      return data\r\n\r\n    \r\n    let status = warning.fiscal_notification_status\r\n    data['fiscal_action_designation_report'] = isEmpty(warning['fiscal_action_designation_report']) ? \"\" :  warning['fiscal_action_designation_report']\r\n    //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS. \r\n    if (isTreated(warning) || isLocked(warning) ) {\r\n      \r\n      if (!isEmpty(warning.fiscal_action_auditors)) {\r\n        let homologationAuditor = getAuditorRegistry(warning[\"fiscal_action_homologation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n        data[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id']\r\n      }\r\n      \r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_designation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n      data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n      data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n      data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n      data[\"monitoring_user_login\"] = monitoringAuditor['user_login']\r\n\r\n      data[\"fiscal_action_designation_date\"] = getNowDateTimeString()\r\n      data[\"fiscal_action_designation_auditor\"] = monitoringAuditor['user_name']\r\n      \r\n      let auditors = {}\r\n      \r\n      //Tratamento para os casos de designação sem comando fiscal. \r\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO ) {\r\n        auditors[EM_MONITORAMENTO] = { 'user_name': EM_MONITORAMENTO_LABEL, 'user_login': EM_MONITORAMENTO_LABEL }\r\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA ) {\r\n        auditors[SEM_COMANDO_FISCAL] = { 'user_name': SEM_COMANDO_FISCAL_LABEL, 'user_login': SEM_COMANDO_FISCAL_LABEL }\r\n      } else if (warning['fiscal_action_auditors']) {\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN)\r\n        }\r\n      }\r\n      data[\"fiscal_action_auditors\"] = auditors\r\n\r\n    } else {\r\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA E O LOCK ESTÁ DESATIVADO, TODOS OS CAMPOS ESTÃO VAZIOS E O USUÁRIO LOGADO PASSARÁ A SER RESPONSÁVEL PELO MONITORAMENTO\r\n      data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n      if (hasUserLoggedData()) {\r\n        data[\"monitoring_user_registration_id\"] = getUserRegistrationID()\r\n        data[\"monitoring_user_id\"] = getUserID()\r\n        data[\"monitoring_user_name\"] = getUserName()\r\n        data[\"monitoring_user_login\"] = getUserLogin()\r\n      }\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  const openWarningModal = (warning) => {\r\n\r\n\r\n    let data = { ...DESIGNATION_FORM_DATA, fiscal_action_auditors: {} }\r\n    let notificationObj = new Notification(warning)\r\n    setFormData(setEditionData(warning, data))\r\n\r\n    setWarningModalData(notificationObj);\r\n\r\n    toggleModal(0);\r\n\r\n  }\r\n\r\n  const openMapModal = (plate, location) => {\r\n    let modalData = {\r\n      plate: plate,\r\n      location : location\r\n\r\n    }\r\n      setModalData(modalData)\r\n      toggleModalOn(MODAL_TYPE_ENUM.MAP, modalData)\r\n      toggleFetchData()\r\n  }\r\n\r\n  const Local = (props) => {\r\n\r\n    if (props && props.event_json) {\r\n\r\n      let placa = props.event_json['evento_infevento_nrplaca']\r\n      let local = props.event_json['evento_infevento_dsreflocal']\r\n\r\n      return (\r\n        <>\r\n          <div\r\n            className={props.location !== \"null\" && \"underlined_text\"}\r\n            onClick={() => { openMapModal(placa, local) }}\r\n            style={{ cursor: props.location !== \"null\" && \"pointer\", color: '#2322c8' }}\r\n          >\r\n            {props.location}\r\n          </div>\r\n        </>\r\n      )\r\n    } else {\r\n      return \"-\"\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n      printIsMap();\r\n      getCamerasData();\r\n      changeVisto();\r\n      if (wasReloaded) {\r\n        startSSE()\r\n\r\n        setWasReloaded(false)\r\n        setWasReloaded(false)\r\n      }\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n    testAndUnlockWarning(warningsViewed, setWarningsViewed)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    setIndex(0)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabIndex])\r\n\r\n  const FilterEvent = (data_row, field_to_filter) => {\r\n\r\n    if (data_row[field_to_filter].includes('_LPD')) {\r\n\r\n      if (typeCameraFilters.DNIT) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('BR')) {\r\n\r\n      if (typeCameraFilters.PRF) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('PB')) {\r\n      if (typeCameraFilters.Estadual) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (!typeCameraFilters.SEMOB) {\r\n\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n  const createMapModal = useMemo(() => <LocationTrackingModal show={isModalActive}  googleMapOnLoad={googleMapLoaded} googleMapOnError={googleMapError} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag} />, [modalData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            {googleMapError && <div>Não foi possível carregar o GoogleMap.</div>}\r\n            {(googleMapLoaded) ? <Card className=\"card-plain\">\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: \"relative\", overflow: \"hidden\", display: \"flex\" }}\r\n                  >\r\n                    <MapLegend categories={categories} colors={colors} activeCategories={activeMarkers} onClick={markerClick} display={displayLegend} />\r\n                    <GoogleMap\r\n                      mapContainerStyle={containerStyle}\r\n                      center={props.center}\r\n                      zoom={props.zoom}\r\n                      options={mapOptions}\r\n                    >\r\n                      {activeCameras.filter(point => {\r\n                        return !activeMarkers[categories.indexOf(point['category'])]\r\n                      }).map((point, index) => (\r\n                        //Marcação passando ícone\r\n                        <Marker\r\n                          className=\"map-icon\"\r\n                          key={`marker-${index}`}\r\n                          position={{ lat: point['nrlatitude'], lng: point['nrlongitude'] }}\r\n                          onClick={pointClick(index)}\r\n                          zIndex={pointsData[index].active ? categories.length + 1 : categories.length - categories.indexOf(point['category'])}\r\n                          options={{\r\n                            icon: {\r\n                              url: `https://ik.imagekit.io/exi1dv80wm/pin/${pointsData[index].active ? '00ff00' : colors[point['category']].slice(-6)}.png`,\r\n                              scaledSize: {\r\n                                height: 26,\r\n                                width: 21\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </GoogleMap>\r\n\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            : \"\"}\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Tabs names={['Tabela de alertas', 'Tabela de tráfego']} index={[tabIndex, setTabIndex]} />\r\n            <Card style={{ borderTopLeftRadius: '0px' }}>\r\n              <CardBody>\r\n                <InputGroup>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.Estadual}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'Estadual': event.target.checked })}\r\n                    />\r\n                    Estadual\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.PRF}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'PRF': event.target.checked })}\r\n                    />\r\n                    PRF\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.DNIT}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'DNIT': event.target.checked })}\r\n                    />\r\n                    DNIT\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.SEMOB}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'SEMOB': event.target.checked })}\r\n                    />\r\n                    SEMOB\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                <Card>\r\n                  <CardBody>\r\n                    {tabIndex === 0 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={warnings.filter(warning => FilterEvent(warning, 'evento_infevento_dsreflocal'))}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        pageSize={10}\r\n                        columns={{\r\n                          \"Alerta\": {\r\n                            Func: (props) =>\r\n                              <p                                \r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"nome\"\r\n                          },\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data).toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateObj[0]}<br />{dateObj[1]}</div>\r\n                            },\r\n                            args: \"evento_infevento_dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => {\r\n                              return (\r\n                                <Local location={props.data} event_json={props.row_data} />\r\n                              )\r\n                            },\r\n                            args: \"evento_infevento_dsreflocal\"\r\n                          },\r\n                          \"UF\": \"evento_infevento_sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) =>\r\n                              <p\r\n                                className='links-table'\r\n                                onClick={() => { setModalData(props.row_data); toggleModalPlaca() }}\r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"evento_infevento_nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"evento_infevento_dstipoveiculo\",\r\n                          \"Modelo\": \"evento_infevento_nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {tabIndex === 1 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={traffic.filter(event => FilterEvent(event, 'dsreflocal'))}\r\n                        pageSize={100}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        style={{ fontSize: '0.8rem' }}\r\n                        columns={{\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data)\r\n                              const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateHour[0]}<br />{dateHour[1]}</div>\r\n                            },\r\n                            args: \"dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => <Local location={props.data} event_json={props.row_data} />,\r\n                            args: \"dsreflocal\"\r\n                          },\r\n                          \"UF\": \"sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) => {\r\n                              const [modal, setModal] = React.useState(false);\r\n                              const [dataVehicle, setdataVehicle] = React.useState([])\r\n                              const [isErroInPost, setisErroInPost] = React.useState(false)\r\n\r\n                              const ToVehicleRoute = () => {\r\n                                setplaca(props.data)\r\n                              }\r\n\r\n                              const closeModalVehicle = () => {\r\n                                setModal(false)\r\n                              }\r\n\r\n                              function sleep(time) {\r\n                                return new Promise((resolve) => setTimeout(resolve, time));\r\n                              }\r\n\r\n                              const toggleModal = () => {\r\n                                setisErroInPost(false)\r\n                                axiosRetryProxy.post(`${env.apiAddress}/cortex/license/${props.data}`, body).then(res => {\r\n                                  let data_consulta = []\r\n                                  sleep(2000).then(() => {\r\n                                    // Do something after the sleep!\r\n                                    Object.entries(res.data).forEach(([key, value]) => {\r\n\r\n                                      if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\"\r\n                                        || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\"\r\n                                        || key === \"municipioPlaca\") {\r\n                                        data_consulta.push({\r\n                                          \"chave\": key ? ChangeKey(key) : '',\r\n                                          \"valor\": value ? value : ''\r\n                                        })\r\n                                      }\r\n                                    })\r\n                                    setdataVehicle(data_consulta)\r\n                                  });\r\n\r\n                                }).catch((err) => {\r\n                                  sleep(1000).then(() => {\r\n                                    setisErroInPost(true)\r\n                                  });\r\n\r\n                                }).finally(() => {\r\n                                  sleep(1000).then(() => {\r\n                                    setModal(true);\r\n                                  });\r\n\r\n                                })\r\n                              }\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    className=\"underlined_text\"\r\n                                    onClick={toggleModal}\r\n                                    style={{ textAlign: 'center', cursor: \"pointer\" }}\r\n                                  >\r\n                                    {props.data}\r\n                                  </div>\r\n\r\n                                  <Modal isOpen={modal} toggle={toggleModal}>\r\n                                    <ModalHeader toggle={closeModalVehicle}>{`Placa ${props.data}`}</ModalHeader>\r\n                                    <ModalBody>\r\n                                      <ListGroup>\r\n                                        {\r\n                                          (dataVehicle.length && Array.isArray(dataVehicle)) ?\r\n                                            dataVehicle.map((dados, index) => (\r\n                                              <ListGroupItem key={index} className=\"justify-content-between\">\r\n                                                <Row>\r\n                                                  <Col>\r\n                                                    <b>{dados.chave}</b>\r\n                                                  </Col>\r\n                                                  <Col>\r\n                                                    {dados.valor}\r\n                                                  </Col>\r\n                                                </Row>\r\n                                              </ListGroupItem>\r\n                                            ))\r\n                                            :\r\n                                            isErroInPost ?\r\n                                              <Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Alert color=\"danger\">\r\n                                                    Error !\r\n                                                  </Alert>\r\n                                                </Col>\r\n                                              </Row>\r\n                                              :\r\n                                              <Row Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Spinner color=\"info\" />\r\n                                                </Col>\r\n                                              </Row>\r\n                                        }\r\n                                      </ListGroup>\r\n                                      {Array.isArray(dataVehicle) && dataVehicle.length > 0 &&\r\n                                        <Row>\r\n                                          <hr></hr>\r\n                                          <Button color=\"primary\" className=\"btn-md\" onClick={ToVehicleRoute}>\r\n                                            Mais Informações\r\n                                          </Button>\r\n                                        </Row>\r\n                                      }\r\n                                    </ModalBody>\r\n                                  </Modal>\r\n                                </>\r\n                              )\r\n                            },\r\n                            args: \"nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"dstipoveiculo\",\r\n                          \"Modelo\": \"nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {activeModal === 0 &&\r\n                      <WarningModal\r\n                        show={true} data={warningModalData} formData={formData} editionMode={false}\r\n                        setFormData={setFormData} toggle={() => toggleModal(-1)} reloadMethod={toggleReload} spinner={spinner}\r\n                      />\r\n                    }\r\n                    {\r\n                      <Modal isOpen={modalPlaca} toggle={toggleModalPlaca}>\r\n                        <ModalHeader toggle={toggleModalPlaca}>{`Placa ${modalData['nrplaca']}}`}</ModalHeader>\r\n                        <ModalBody style={{ justifyContent: 'center', alignContent: 'center', display: 'flex' }}>\r\n                          {/*<img alt=\"Foto da placa\" src=\"https://i.ytimg.com/vi/lmVlZbmNgGw/hqdefault.jpg\" />*/}\r\n                        </ModalBody>\r\n                      </Modal>\r\n                    }\r\n                  </CardBody>\r\n                </Card>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      {modalType === MODAL_TYPE_ENUM.MAP && createMapModal}\r\n    </>\r\n  );\r\n}\r\n\r\nMaps.defaultProps = {\r\n  center: {\r\n    lat: -7.254653852199306,\r\n    lng: -36.69661154766497\r\n  },\r\n  zoom: 4\r\n};\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Groups.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\mask.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Companys.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Status.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Vehicles.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\Traffic.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\DfeIssuance.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Notification\\Notifications.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\MessageModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\ModalConsts.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\Warnings.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\bell\\NotificationBell.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\bell\\PendingBell.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\MaskEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\errorTreatment.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\LockEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\mapOptions.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Notification.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\panels\\WarningConfigPanel.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\ModalTypeEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\RevisionModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\ConfirmationModal .js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\format-data.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\filters.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\EditionButtons.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\ModalEditionButtons.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Notification\\utils\\filters.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Notification\\utils\\format-data.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\filters.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelector.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\Table.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadNotificationPendingJobs.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useAsync.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Event.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useNotification.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\WarningConfig.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\NfeWarningTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\MdfeWarningTable.js",["1348","1349"],"import React from \"react\";\r\nimport { ViewsContext } from \"context/ViewsContext\";\r\nimport TagsInput from \"components/tags/TagsInput\";\r\nimport Table from \"components/tables/Table\";\r\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport { MDFE_ORIGIN } from \"common/model/Mdfe\";\r\nimport DfeIssuanceModal from \"components/modals/DfeIssuanceModal/DfeIssueanceModal\";\r\n\r\nimport NOTIFICATION_TYPE_ENUM from \"common/enumerators/NotificationTypeEnum\";\r\n\r\nimport { createBaseHttpRequestBody, createQueryHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { isExternalUser } from \"common/SessionUtils\";\r\nimport { formatCnpjCpf } from \"common/utils/validate\";\r\nimport { SEVERITY } from \"common/model/WarningConfig\";\r\nimport Severity from \"components/table-elements/Severity\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\nimport { NAME } from \"common/model/WarningConfig\";\r\nimport Warning from \"components/table-elements/Warning\";\r\nimport { DHEMI } from \"common/model/Dfe\";\r\nimport { FISCAL_NOTIFICATION_DATE } from \"common/model/Notification\";\r\nimport { CNPJ_ISSUER } from \"common/model/Dfe\";\r\nimport { CPF_ISSUER } from \"common/model/Dfe\";\r\nimport { CNPJ_RECIPIENT } from \"common/model/Dfe\";\r\nimport { CPF_RECIPIENT } from \"common/model/Dfe\";\r\nimport { DFE_VALUE } from \"common/model/Dfe\";\r\nimport { FISCAL_NOTIFICATION_TYPE } from \"common/model/Notification\";\r\nimport { DFE_TYPE } from \"common/model/Dfe\";\r\nimport { mountGroupsFilterClause } from \"axios/AxiosUtils\";\r\nimport { GROUP_IDS } from \"axios/AxiosUtils\";\r\nimport { QUERY } from \"axios/AxiosUtils\";\r\nimport { FILTERS } from \"axios/AxiosUtils\";\r\nimport { mdfeIssuanceTagFilters } from \"../utils/filters\";\r\nimport { DfeTimestamp } from \"../utils/format-data\";\r\n\r\n\r\nexport default function MdfeWarningTable({openWarningModal }) {\r\n\r\n  const { refreshFlag, mdfeIssuanceFilters, setMdfeIssuanceFilters } = React.useContext(ViewsContext)\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [filters, setFilters] = React.useState([])\r\n\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n\r\n  const createReadHttpRequestBody = () => {\r\n    let httpRequestBody = createQueryHttpRequestBody(filters)\r\n    let groups = mountGroupsFilterClause(mdfeIssuanceFilters)\r\n\r\n    httpRequestBody[QUERY][GROUP_IDS] = groups\r\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.MDFE\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createCountHttpRequestBody = () => {\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    let groups = mountGroupsFilterClause(mdfeIssuanceFilters)\r\n\r\n    httpRequestBody[GROUP_IDS] = groups\r\n    httpRequestBody[FILTERS] = filters\r\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.MDFE\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n\r\n  return (<>\r\n     <TagsInput\r\n              tagsState={[mdfeIssuanceFilters, setMdfeIssuanceFilters]}\r\n              setQuery={setFilters}\r\n              columns={mdfeIssuanceTagFilters}\r\n            />\r\n            <Table\r\n              dataUrl=\"/warnings/read_all\"\r\n              countUrl=\"/warnings/count_warnings\"\r\n              timeout={10000}\r\n              fillData\r\n              tags={filters}\r\n              loading={[isLoading, setIsLoading]}\r\n              refresh={refreshFlag}\r\n              requestBody={createReadHttpRequestBody}\r\n              countRequestBody={createCountHttpRequestBody}\r\n              columns={{\r\n                \"Prioridade\": {\r\n                  args: SEVERITY,\r\n                  thStyle: { textAlign: 'center' },\r\n                  func: (severity) =>  <Severity severity={severity} />\r\n                },\r\n                \"Nº Alerta\": {\r\n                  args: ID_CONFIG,\r\n                  thStyle: { textAlign: 'right' },\r\n                  tdStyle: { textAlign: 'right' },\r\n                },\r\n                \"Alerta\": {\r\n                  args: NAME,\r\n                  thStyle: { textAlign: 'center' },\r\n                  tdStyle: { whiteSpace: 'pre', textAlign: 'center' },\r\n                  Func: ({ row_data }) => <Warning data={row_data} toggleModal={openWarningModal}/>\r\n                },\r\n                \"Data/Hora Emissão\": {\r\n                  args: DHEMI,\r\n                  thStyle: { textAlign: 'center' },\r\n                  tdStyle: { whiteSpace: 'pre', textAlign: 'center' },\r\n                  func: (date) => <DfeTimestamp date={date}/>\r\n                },\r\n                \"UF Origem\": {\r\n                  args: MDFE_ORIGIN,\r\n                  thStyle: { textAlign: 'center' },\r\n                  tdStyle: { textAlign: 'center' },\r\n                },\r\n                \"UF Destino\": {\r\n                  args: DHEMI,\r\n                  thStyle: { textAlign: 'center' },\r\n                  tdStyle: { textAlign: 'center' },\r\n                },\r\n                \"Disparo\": {\r\n                  args: FISCAL_NOTIFICATION_DATE,\r\n                  thStyle: { textAlign: 'center' },\r\n                  tdStyle: { whiteSpace: 'pre', textAlign: 'center' },\r\n                  func: (date) => <DfeTimestamp date={date}/>\r\n                },\r\n                \"Emitente\": {\r\n                  args: [CNPJ_ISSUER, CPF_ISSUER],\r\n                  thStyle: { textAlign: 'right' },\r\n                  tdStyle: { textAlign: 'right' },\r\n                  func: (emitente) => emitente[0] ? formatCnpjCpf(emitente[0]) : formatCnpjCpf(emitente[1])\r\n                },\r\n                \"Valor\": {\r\n                  args: DFE_VALUE,\r\n                  thStyle: { textAlign: 'right' },\r\n                  tdStyle: { textAlign: 'right' },\r\n                  func: (valor) => { return (valor) ? ` R$ ${valor.toLocaleString('pt-br', { minimumFractionDigits: 2 })}` : \"\" }\r\n                },\r\n                \"DFE\": {\r\n                  args: FISCAL_NOTIFICATION_TYPE,\r\n                  Func: (props) => {\r\n                    return (isExternalUser()) ? \"\" : <div\r\n                      className={props.type !== null && \"underlined_text\"}\r\n                      onClick={() => { setModalData(props.row_data); toggleModalOn(MODAL_TYPE_ENUM.DFE_ISSUANCE) }}\r\n                      style={{ textAlign: 'center', cursor: props.type !== null && \"pointer\", color: '#2322c8' }}\r\n                      >\r\n                        {DFE_TYPE[props.data]}\r\n                      </div>\r\n                  }\r\n                }\r\n              }} \r\n      />\r\n \r\n      {modalType === MODAL_TYPE_ENUM.DFE_ISSUANCE &&  <DfeIssuanceModal show={isModalActive} toggle={toggleModalOff} data={modalData} />}\r\n      \r\n  </>)\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficDfeTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficNoDfeTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useModalWithData.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\Severity.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\rules\\WarningConfigRules.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\WarningTable.js",["1350","1351"],"import React from \"react\";\r\nimport Severity from \"components/table-elements/Severity\";\r\nimport { ViewsContext } from \"context/ViewsContext\";\r\nimport TagsInput from \"components/tags/TagsInput\";\r\nimport { getLastWarningID, setLastWarningId, getViewedWarnings } from \"common/SessionUtils\";\r\nimport Table from \"components/tables/Table\";\r\nimport { createQueryHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport NOTIFICATION_TYPE_ENUM from \"common/enumerators/NotificationTypeEnum\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\r\nimport { isEmptyResponse } from \"common/utils/errorTreatment\";\r\nimport axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport env from \"common/enviroment\";\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\nimport Plate from \"components/table-elements/Plate\";\r\nimport { ID } from \"common/model/Notification\";\r\nimport { TrafficTimestamp } from \"components/table-elements/TrafficTimestamp\";\r\nimport { RiLockFill, RiCameraLine } from \"react-icons/ri\";\r\nimport Warning from \"components/table-elements/Warning\";\r\nimport TrafficLastLocations from \"components/table-elements/TrafficLastLocations\";\r\nimport { NavigationContext } from \"context/NavigationContext\";\r\nimport { tryMarkAsViewed } from \"common/rules/NotificationRules\";\r\nimport { mountGroupsFilterClause } from \"axios/AxiosUtils\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\nimport WarningModal from \"components/modals/WarningModal/WarningModal\";\r\nimport WarningDfe from \"components/table-elements/WarningDfe\";\r\nimport useToggle from \"common/hooks/useToogle\";\r\nimport WarningDfeModal from \"components/modals/WarningDfeModal/WarningDfeModal\";\r\nimport { FISCAL_NOTIFICATION_LOCK } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_STATUS } from \"common/model/Notification\";\r\nimport { SEVERITY } from \"common/model/WarningConfig\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\nimport { NAME } from \"common/model/WarningConfig\";\r\nimport { EVENT_CREATION_TIMESTAMP } from \"common/model/Event\";\r\nimport { FISCAL_NOTIFICATION_DATE } from \"common/model/Notification\";\r\nimport { EVENT_LOCAL } from \"common/model/Event\";\r\nimport { MDFE_ORIGIN } from \"common/model/Mdfe\";\r\nimport { MDFE_DESTINATION } from \"common/model/Mdfe\";\r\nimport { EVENT_VEHICLE_PLATE } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_TYPE } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_MODEL } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_COLOUR } from \"common/model/Event\";\r\nimport { ID_EVENT_ALTERNATIVE } from \"common/model/Event\";\r\nimport allowLock from \"common/rules/NotificationRules\";\r\nimport { isUnviewed } from \"common/enumerators/NotificationStatus\";\r\nimport LOCK_ENUM from \"common/enumerators/LockEnum\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { AuditorsContext } from \"context/AuditorsContext\";\r\nimport { GroupsContext } from \"context/GroupsContext\";\r\nimport useNotification from \"common/hooks/useNotification\";\r\nimport { DESIGNATION_AUDITOR } from \"common/model/Notification\";\r\nimport { DESIGNATION_DATE } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_LOCK_USER } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_LOCK_TIMESTAMP } from \"common/model/Notification\";\r\nimport { DESIGNATION_REPORT } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_TYPE } from \"common/model/Notification\";\r\nimport { QUERY } from \"axios/AxiosUtils\";\r\nimport { FILTERS } from \"axios/AxiosUtils\";\r\nimport { GROUP_IDS } from \"axios/AxiosUtils\";\r\nimport { EVENT_UF } from \"common/model/Event\";\r\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\r\nimport VehicleModal from \"components/modals/VehicleModal\";\r\nimport TrafficImageModal from \"components/modals/TrafficImageModal/TrafficImageModal\";\r\nimport { Notification } from \"common/model/Notification\";\r\nimport { warningTableFiltersOptions } from \"../utils/filters\";\r\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\r\nimport { cloneFilters } from \"axios/AxiosUtils\";\r\nimport getRandomImage from \"common/utils/getRandomImage\";\r\nimport { EVENT_INGESTION_TIMESTAMP } from \"common/model/Event\";\r\n\r\nconst INTERVAL_WINDOW = (5 * 60000) // 5 minutos\r\n\r\n//TODO remover estas referencias a groupsConditons e groupsValues. Isso deve vir do context\r\nexport default function WarningTable({toggleMapModal}) {\r\n\r\n\r\n  const { refreshFlag, warningTableFilters, setWarningTableFilters, warningTableTags, setWarningTableTags } = React.useContext(ViewsContext)\r\n  const { warningsViewed, setWarningsViewed } = React.useContext(WarningsUpdateContext)\r\n  const {  getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const {  getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData } = React.useContext(GroupsContext);\r\n  const { clearBell } = React.useContext(NavigationContext)\r\n  const [viewedWarningsData, setViewedWarningsData] = React.useState([]);;\r\n  const [refreshWarningsFlag, setRefreshWarningsFlag] = React.useState(false)\r\n  const refreshWarnings = () => setRefreshWarningsFlag(prev => !prev);\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA)\r\n  const [intervalId, setIntervalId] = React.useState(false)\r\n  const [fetchDataFlag, toggleFetchData] = useToggle(false)\r\n\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n  const {mountEditionData} = useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData) \r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    testAndUnlockWarning(warningsViewed, setWarningsViewed)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (intervalId)\r\n      clearInterval(intervalId)\r\n\r\n    setIntervalId(setInterval(() => { refreshWarnings() }, INTERVAL_WINDOW, 0, true))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [warningTableFilters, clearBell])\r\n  \r\n  \r\n  \r\n  function handleRowClick(warning) {\r\n\r\n    let id = warning[ID].toString()\r\n\r\n    //Se já foi visualizado, não tem porque marcar novamente como visualizado\r\n    if (tryMarkAsViewed(warning, warningsViewed)) {\r\n      let httpRequestBody = createBaseHttpRequestBody({\r\n        [DESIGNATION_AUDITOR]: getUserLogin(),\r\n        [DESIGNATION_DATE]: getNowDateTimeString(),\r\n        [FISCAL_NOTIFICATION_STATUS]: NOTIFICATION_STATUS_ENUM.VISUALIZADA\r\n      })\r\n\r\n      axiosRetryProxy.patch(`${env.apiAddress}/warnings/update_view/${id}`, httpRequestBody).then(res => {\r\n        if (isEmptyResponse(res) || !isSuccessStatusCode(res)) {\r\n          setWarningsViewed((prevState) => ({\r\n            ...prevState,\r\n            [id]: { user: \"TELMO IURY THAIS RAONI E YURI\", checked: false, lock: 0, status: 1 } //Este nome esquisito é só para marcar que um usuário diferente daquele logado ganhou a corrida na visualização\r\n          }))\r\n        } else {\r\n          setWarningsViewed((prevState) => ({\r\n            ...prevState,\r\n            [id]: { user: getUserLogin(), checked: false, lock: 0, status: 1 }\r\n          }))\r\n        }\r\n      }).catch(err => {\r\n        console.log('erro ao atualizar designation_user')\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const createWarningsHttpRequestBody = () => {\r\n\r\n    let filtersClone = cloneFilters(warningTableFilters)\r\n\r\n    let httpRequestBody = createQueryHttpRequestBody(filtersClone)\r\n    let groups = mountGroupsFilterClause(warningTableTags)\r\n\r\n    httpRequestBody[QUERY][GROUP_IDS] = groups\r\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.TRAFFIC\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createCountWarningsHttpRequestBody = () => {\r\n\r\n    let filtersClone = cloneFilters(warningTableFilters)\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    let groups = mountGroupsFilterClause(warningTableTags)\r\n\r\n    httpRequestBody[GROUP_IDS] = groups\r\n    httpRequestBody[FILTERS] = filtersClone\r\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.TRAFFIC\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const warningsRequestMiddleware = (data) => {\r\n    if (!getLastWarningID() && data && data.length > 0) {\r\n      setLastWarningId(parseInt(data[data.length - 1][ID]))\r\n    }\r\n\r\n    if (viewedWarningsData.length === 0 && getViewedWarnings()) {\r\n      setViewedWarningsData(JSON.parse(getViewedWarnings()));\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n\r\n\r\n  //TODO AJEITAR ISSO. Tá complicado e feio. \r\n  function conditionalRowFormat(notification) {\r\n\r\n    let warning_id = notification.id.toString()\r\n\r\n    if (Object.keys(warningsViewed).includes(warning_id)) {\r\n      if ((warningsViewed[warning_id].lock === 0 || warningsViewed[warning_id].lock === null) && warningsViewed[warning_id].status === 1) {\r\n        return { backgroundColor: 'rgb(255 255 0 / 0.1)' }\r\n      } else {\r\n        return {}\r\n      }\r\n\r\n\r\n    } else {\r\n      if (notification[FISCAL_NOTIFICATION_STATUS] === 1 && (notification[FISCAL_NOTIFICATION_LOCK] === 0 || notification[FISCAL_NOTIFICATION_LOCK] === null)) {\r\n        return { backgroundColor: 'rgb(255 255 0 / 0.1)' }\r\n      } else if (notification[FISCAL_NOTIFICATION_STATUS] === 0) {\r\n        return { fontWeight: 550 }\r\n      }\r\n\r\n\r\n      return {}\r\n    }\r\n  }\r\n\r\n\r\n  const lockWarning = async (warning) => {\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [FISCAL_NOTIFICATION_LOCK_USER]: getUserLogin(),\r\n      [FISCAL_NOTIFICATION_LOCK_TIMESTAMP]: getNowDateTimeString(),\r\n      [FISCAL_NOTIFICATION_LOCK]: LOCK_ENUM.LOCK,\r\n      [FISCAL_NOTIFICATION_STATUS]: warning[FISCAL_NOTIFICATION_STATUS],\r\n      [DESIGNATION_AUDITOR]: warning[DESIGNATION_AUDITOR],\r\n      [DESIGNATION_DATE]: warning[DESIGNATION_DATE]\r\n    })\r\n\r\n    try {\r\n      let res = await axiosRetryProxy.patch(`${env.apiAddress}/warnings/update_view/${warning[ID]}`, httpRequestBody)\r\n      if (isSuccessStatusCode(res) && !isEmptyResponse(res)) {\r\n        warning[FISCAL_NOTIFICATION_LOCK_USER] = httpRequestBody[FISCAL_NOTIFICATION_LOCK_USER]\r\n        warning[FISCAL_NOTIFICATION_LOCK_TIMESTAMP] = httpRequestBody[FISCAL_NOTIFICATION_LOCK_TIMESTAMP]\r\n        warning[FISCAL_NOTIFICATION_LOCK] = httpRequestBody[FISCAL_NOTIFICATION_LOCK]\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  const openTrafficImageModal = () => {\r\n    toggleModalOn(MODAL_TYPE_ENUM.TRAFFIC_IMAGE)\r\n  }\r\n  \r\n\r\n  const openWarningModal = async (warning) => {\r\n\r\n    handleRowClick(warning)\r\n    let notificationObj = new Notification(warning)\r\n\r\n    setSpinner(() => true)\r\n    \r\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING, notificationObj)\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [ID]: warning.id,\r\n    })\r\n\r\n    \r\n\r\n    axiosRetryProxy.post(`${env.apiAddress}/warnings/read_view`, httpRequestBody)\r\n      .then(async res => {\r\n\r\n        if (isEmpty(res.data[0])){\r\n          return \r\n        }\r\n\r\n        let warningUpToDate = res.data[0]\r\n        let currentStatus = warningUpToDate[FISCAL_NOTIFICATION_STATUS]\r\n        warning[FISCAL_NOTIFICATION_LOCK] = warningUpToDate[FISCAL_NOTIFICATION_LOCK]\r\n        warning[FISCAL_NOTIFICATION_LOCK_USER] = warningUpToDate[FISCAL_NOTIFICATION_LOCK_USER]\r\n        warning[FISCAL_NOTIFICATION_LOCK_TIMESTAMP] = warningUpToDate[FISCAL_NOTIFICATION_LOCK_TIMESTAMP]\r\n        warning[FISCAL_NOTIFICATION_STATUS] = currentStatus\r\n\r\n        warning[DESIGNATION_AUDITOR] = warningUpToDate[DESIGNATION_AUDITOR] \r\n        warning[DESIGNATION_DATE] = warningUpToDate[DESIGNATION_DATE]\r\n        warning[DESIGNATION_REPORT] = warningUpToDate[DESIGNATION_REPORT]\r\n        warning[FISCAL_ACTION_AUDITORS] = warningUpToDate[FISCAL_ACTION_AUDITORS]\r\n\r\n        if (allowLock(warning)) {\r\n\r\n          //IMPORTANTE: ESTE COMANDO ABAIXO GARANTE QUE SE O COMANDO PARA ABRIR O MODAL FOR EXECUTADO ANTES DO UPDATE DE STATUS PARA VISUALIZADO, O STATUS SEJA DEFINIDO PARA VISUALIZADO\r\n          if (isUnviewed(currentStatus)) {\r\n            warning[FISCAL_NOTIFICATION_STATUS] = NOTIFICATION_STATUS_ENUM.VISUALIZADA\r\n            warning[DESIGNATION_AUDITOR] = getUserLogin()\r\n            warning[DESIGNATION_DATE] = getNowDateTimeString()\r\n          }\r\n\r\n          let isLocked = await lockWarning(warning)\r\n\r\n          if (isLocked) {\r\n            let warning_id = warning.id.toString()\r\n            warning[FISCAL_NOTIFICATION_LOCK] = LOCK_ENUM.UNLOCK\r\n            setWarningsViewed((prevState) => ({\r\n              ...prevState,\r\n              [warning_id]: { user: getUserLogin(), checked: false, lock: LOCK_ENUM.UNLOCK, status: warning[FISCAL_NOTIFICATION_STATUS] }\r\n            }))\r\n          }\r\n        }\r\n\r\n        notificationObj = new Notification(warning)\r\n        setFormData(mountEditionData(notificationObj, \"\"))\r\n        setModalData(() => notificationObj);\r\n\r\n\r\n      }).catch(err => {\r\n        setFormData(mountEditionData(notificationObj, \"\"))\r\n        setModalData(() => notificationObj);\r\n      })\r\n      .finally(() => {\r\n        setSpinner(() => false)\r\n\r\n      })\r\n\r\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING, notificationObj)\r\n\r\n  }\r\n\r\n\r\n\r\n  const IconLockUnlock = (props) => {\r\n\r\n    //Precisa desta conversão a chave está vindo do sistema de push notification como string ao invés de int. \r\n    let warning_id = props.data[0].toString()\r\n\r\n    if (Object.keys(warningsViewed).includes(warning_id)) {\r\n      if (warningsViewed[warning_id].lock === 0 || warningsViewed[warning_id].lock === null) {\r\n        return <p> </p>\r\n      }\r\n\r\n      if (warningsViewed[warning_id].lock === 1 && warningsViewed[warning_id].status > NOTIFICATION_STATUS_ENUM.VISUALIZADA) {\r\n        return <p> </p>\r\n      }\r\n\r\n      return <p><RiLockFill size={15} /> </p>\r\n    } else {\r\n\r\n      let lock = props.data[1]\r\n      let status = props.data[2]\r\n\r\n      if (lock === 0)\r\n        return <p> </p>\r\n\r\n      if (lock === 1 && status > NOTIFICATION_STATUS_ENUM.VISUALIZADA)\r\n        return <p> </p>\r\n\r\n      return <p><RiLockFill size={15} /> </p>\r\n    }\r\n  }\r\n\r\n\r\n  return ( <>\r\n    <TagsInput\r\n      setQuery={setWarningTableFilters}\r\n      tagsState={[warningTableTags, setWarningTableTags]}\r\n      columns={warningTableFiltersOptions}\r\n    />\r\n    <Table\r\n      dataUrl=\"/warnings/read_all\"\r\n      countUrl=\"/warnings/count_warnings\"\r\n      timeout={10000}\r\n      requestBody={createWarningsHttpRequestBody}\r\n      countRequestBody={createCountWarningsHttpRequestBody}\r\n      requestMiddleware={warningsRequestMiddleware}\r\n      tags={warningTableFilters}\r\n      fillData\r\n      refresh={refreshWarningsFlag ^ refreshFlag}\r\n      loading={[isLoading, setIsLoading]}\r\n      invalid={[\"null\", undefined, null, \"\", \"-\"]}\r\n      trProps={row => { return { style: conditionalRowFormat(row) } }}\r\n      columns={{\r\n        \" \": {\r\n          args: [ID, FISCAL_NOTIFICATION_LOCK, FISCAL_NOTIFICATION_STATUS],\r\n          Func: ({ data }) => <IconLockUnlock data={data} />\r\n        },\r\n        \"Prioridade\": {\r\n          args: SEVERITY,\r\n          func: (severity) =>  <Severity severity={severity} />\r\n        },\r\n        \"Ocorrência\": {\r\n          thStyle: { textAlign: 'right' },\r\n          tdStyle: { textAlign: 'right' },\r\n          args: ID,\r\n        },\r\n        \"Nº Alerta\": {\r\n          thStyle: { textAlign: 'right' },\r\n          tdStyle: { textAlign: 'right' },\r\n          args: ID_CONFIG,\r\n        },\r\n        \"Alerta\": {\r\n          args: NAME,\r\n          Func: ({ row_data }) => <Warning data={row_data} toggleModal={openWarningModal}/>\r\n        },\r\n        \"Passagem\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} isTrafficTimestamp={true} />\r\n        },\r\n        \"Recebimento\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} />\r\n        },\r\n        \"Disparo\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, FISCAL_NOTIFICATION_DATE],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} />\r\n        },\r\n        \"Local\": {\r\n          args: EVENT_LOCAL,\r\n          Func: ({ row_data }) => <TrafficLastLocations data={row_data}  toggleModal={toggleMapModal} fetchData={toggleFetchData}/>\r\n        },\r\n        /*\"Imagem\": {\r\n          args: [ID, FISCAL_NOTIFICATION_STATUS],\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n          Func: ({ row_data }) => {\r\n            return (\r\n              <button\r\n                className=\"btn btn-primary\" \r\n                onClick={() => {\r\n                  openTrafficImageModal()\r\n                }}>\r\n\r\n                <RiCameraLine \r\n                  size={18} \r\n                />\r\n              </button>\r\n            )\r\n          }\r\n        }, */\r\n        \"Uf Disparo\": {\r\n          args: EVENT_UF,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n        },\r\n        \"Uf Origem\": {\r\n          args: MDFE_ORIGIN,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n        },\r\n        \"Uf Destino\": {\r\n          args: MDFE_DESTINATION,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n        },\r\n        \"Placa\": {\r\n          args: EVENT_VEHICLE_PLATE,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n          func: (plate) => <Plate plate={plate} toggleModal={toggleModalOn} />\r\n        },\r\n        \"Veículo\": EVENT_VEHICLE_TYPE,\r\n        \"Modelo\": EVENT_VEHICLE_MODEL,\r\n        \"Cor\": EVENT_VEHICLE_COLOUR,\r\n\r\n        \"DF-e\": {\r\n          args: ID_EVENT_ALTERNATIVE,\r\n          Func: ({ row_data }) => <WarningDfe data={row_data} toggleModalOn={toggleModalOn} toggleFetchData={toggleFetchData} />\r\n        },\r\n        \"Situação\": {\r\n          args: [ID],\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center', whiteSpace: 'pre' },\r\n          Func: ({ row_data}) => {\r\n            const notificationObj = new Notification(row_data)\r\n            return notificationObj.getNotificationStatusLabel(warningsViewed)\r\n          }\r\n        },\r\n      }}\r\n    />\r\n    {modalType === MODAL_TYPE_ENUM.WARNING && <WarningModal show={isModalActive} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag} formData={formData} setFormData={setFormData} reloadMethod={refreshWarnings} spinner={spinner} />}\r\n    {modalType === MODAL_TYPE_ENUM.VEHICLE && <VehicleModal show={isModalActive} toggle={toggleModalOff} data={modalData} />}\r\n    {modalType === MODAL_TYPE_ENUM.WARNING_DFE && <WarningDfeModal show={isModalActive} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag}/>}\r\n    {modalType === MODAL_TYPE_ENUM.TRAFFIC_IMAGE && <TrafficImageModal show={isModalActive} toggle={toggleModalOff} uri={getRandomImage()}/>}\r\n  </>)\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\ConfigTypeEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\Tabs.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\TagsInput.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useToogle.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\SimpleMapModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningConfigModal\\WarningConfigModal.js",["1352","1353"],"import axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { getUserLogin, isAdmin, isSubgerente } from \"common/SessionUtils\";\r\n\r\nimport React from \"react\";\r\n\r\nimport env from \"common/enviroment\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Col,\r\n  Form\r\n} from 'reactstrap';\r\nimport { EDITION, ERROR, EXCLUSION } from \"../ModalConsts\";\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\nimport { isMonitoramento } from \"common/SessionUtils\";\r\nimport ConfirmationModal from \"../ConfirmationModal \";\r\nimport MessageModal from \"../MessageModal\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\r\nimport treatError from \"common/utils/errorTreatment\";\r\nimport { getConfigStatusLabel } from \"common/enumerators/StatusEnum\";\r\nimport { CONFIG_TYPE_CONDITIONS } from \"common/rules/WarningConfigRules\";\r\nimport GroupsInput from \"components/group/GroupsInput\";\r\nimport { compareGroups } from \"common/rules/WarningConfigRules\";\r\nimport { TAG_INPUT_OPTIONS } from \"views/Warnings/utils/filters\";\r\nimport { SEVERITY_CONDITIONS } from \"common/rules/WarningConfigRules\";\r\nimport ModalEditionButtons from \"components/buttons/ModalEditionButtons\";\r\nimport { validateData } from \"common/rules/WarningConfigRules\";\r\nimport { cleanTagsInput } from \"views/Warnings/utils/format-data\";\r\nimport { compareWithOldValues } from \"common/rules/WarningConfigRules\";\r\nimport { treatResponse } from \"common/utils/errorTreatment\";\r\nimport STATUS_ENUM from \"common/enumerators/StatusEnum\";\r\nimport { removeMask } from \"common/utils/mask\";\r\nimport { isExternalUser } from \"common/SessionUtils\";\r\nimport MASK_ENUM from \"common/enumerators/MaskEnum\";\r\nimport { allowDuplication } from \"common/rules/WarningConfigRules\";\r\nimport { hasEmptyValues } from \"common/rules/WarningConfigRules\";\r\nimport WarningTagsInput from \"components/tags/WarningTagsInput\";\r\nimport { maxClosingDate } from \"common/rules/WarningConfigRules\";\r\nimport useToggle from \"common/hooks/useToogle\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\nimport { wasSuccessRequest } from \"common/utils/errorTreatment\";\r\nimport { TYPE } from \"common/model/WarningConfig\";\r\nimport { CREATION_DATE } from \"common/model/WarningConfig\";\r\nimport { MONITORING_PARAMETERS_JSON } from \"common/model/WarningConfig\";\r\nimport { GROUP_IDS_SSE } from \"common/model/WarningConfig\";\r\nimport { NAME } from \"common/model/WarningConfig\";\r\nimport { DESCRIPTION } from \"common/model/WarningConfig\";\r\nimport { CLOSING_DATE } from \"common/model/WarningConfig\";\r\nimport { VISIBILITY_GROUP } from \"common/model/WarningConfig\";\r\nimport { SEVERITY } from \"common/model/WarningConfig\";\r\nimport { FISCAL_ACTION } from \"common/model/WarningConfig\";\r\nimport { DESC } from \"axios/AxiosUtils\";\r\nimport { STATUS } from \"common/model/WarningConfig\";\r\nimport { CREATOR } from \"common/model/WarningConfig\";\r\nimport { MODIFICATION_DATE } from \"common/model/WarningConfig\";\r\nimport { MODIFICATION_USER } from \"common/model/WarningConfig\";\r\nimport { PAUSE_TIMESTAMP } from \"common/model/WarningConfig\";\r\nimport { CPF_RECIPIENT } from \"common/model/WarningConfig\";\r\nimport { CPF_MDFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { CPF_NFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { CPF_DRIVER } from \"common/model/WarningConfig\";\r\nimport { CNPJ_RECIPIENT } from \"common/model/WarningConfig\";\r\nimport { CNPJ_MDFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { CNPJ_NFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { PLATE } from \"common/model/WarningConfig\";\r\nimport { MDFE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { NFE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { AGREGATED_LOWER_VALUE } from \"common/model/WarningConfig\";\r\n\r\n\r\nexport const BLANK_FORM_DATA = {\r\n  \"fiscal_action_auditors\": {},\r\n  \"monitoring_user_name\": '',\r\n  \"monitoring_user_login\": '',\r\n  \"monitoring_user_id\": '',\r\n  \"monitoring_user_registration_id\": '',\r\n  \"fiscal_action_designation_report\": ''\r\n\r\n}\r\n\r\n\r\nexport default function WarningConfigModal({ show, toggle, data, tags, refresh, modalReadonlyMode, setModalReadonlyMode, groupsConditions, groupsValues }) {\r\n\r\n  const [tabIndex, setTabIndex] = React.useState(1)\r\n  const [invalid, setInvalid] = React.useState(false);\r\n  const [spinner_, setSpinner] = React.useState(false)\r\n  const [deleteStatus, toggleDeleteStatus] = useToggle(false)\r\n\r\n  const [formData, setFormData] = React.useState(() => (data))\r\n  const [oldFormData] = React.useState(() => (JSON.parse(JSON.stringify(data))))\r\n\r\n  const [formTags, setFormTags] = React.useState(tags)\r\n  const [oldFormTags] = React.useState(() => (JSON.parse(JSON.stringify(tags))))\r\n  \r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n  const { modalData, setModalData, modalActionMethods, setModalActionMethods, toggleModalOn, toggleModalOff, isModalActive, modalType } = useModalWithData()\r\n\r\n\r\n  const isDisabled = (warningConfigCreator) => {\r\n\r\n    //Quando o modal é acionado pelo double click, a variável input criador virá undefined. \r\n    //Assim, sendo necessário recuperar a informação a partir do formData\r\n    if (isEmpty(warningConfigCreator)) {\r\n      warningConfigCreator = formData['criador']\r\n    }\r\n\r\n    if ((warningConfigCreator === getUserLogin()) || isAdmin()) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const combinedToggleOff = () => {\r\n    if (deleteStatus) {\r\n      toggle()\r\n      toggleModalOff()\r\n    } else {\r\n      toggleModalOff()\r\n    }\r\n  }\r\n  \r\n\r\n  const openDeleteModal = (id) => {\r\n    if (id !== undefined) {\r\n      setModalData({ entity: \"a Configuração de Alerta\", operation: EXCLUSION, id: id });\r\n      setModalActionMethods([undefined, updateWarning, deleteWarning]);\r\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n    }\r\n  }\r\n\r\n  const openConfirmationModal = async () => {\r\n    \r\n    let invalidMessage = validateData(formData)\r\n    let cleanedTagsInput = cleanTagsInput(formTags)\r\n    \r\n    if (hasEmptyValues(formData, cleanedTagsInput)) {\r\n      setInvalid(true)\r\n      setModalData({ operation: EDITION, messageType: ERROR, message: \"Há campos obrigatórios com preenchimento pendente!\" });\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    } else if (!isEmpty(invalidMessage)) {\r\n      let errorMessage = \"Há campos obrigatórios com dados inválidos:\\n\"\r\n      errorMessage += invalidMessage.join(\"\")\r\n      setModalData({ message: errorMessage, messageType: ERROR })\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    } else if (compareWithOldValues(formData, oldFormData, formTags, oldFormTags)) {\r\n      setInvalid(true)\r\n      setModalData({ entity: \"da Configuração de Alerta\", operation: EDITION, messageType: ERROR, message: \"Não há alterações a serem salvas para esta configuração de Alerta!\" });\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    } else {\r\n      const configs = await checkDuplicityWarningConfigs(STATUS_ENUM.ATUALIZADO);\r\n      let configNames = []\r\n      if (configs && configs.length > 0) {\r\n\r\n        for (let config of configs) {\r\n          configNames.push(config.nome)\r\n        }\r\n\r\n        let disclaimer = `Os seguintes alertas já cadastrados possuem as mesmas condições de monitoramento: ${configNames.join(', ')}! \\n\\n`\r\n\r\n        setInvalid(false);\r\n        if (allowDuplication()) {\r\n          disclaimer += \"Confirma a alteração da Configuração de Alerta?\"\r\n          setModalData({ message: disclaimer, operation: EDITION });\r\n          setModalActionMethods([undefined, updateWarning, deleteWarning]);\r\n          toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\r\n        } else {\r\n          setModalData({ entity: \"da Configuração de Alerta\", operation: EDITION, messageType: ERROR, message: disclaimer });\r\n          toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n        }\r\n      } else {\r\n        setInvalid(false);\r\n        setModalData({ entity: \"a Configuração de Alerta\", operation: EDITION });\r\n        setModalActionMethods([undefined, updateWarning, deleteWarning]);\r\n        toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n      }\r\n    }\r\n  }\r\n\r\n  const createEditionHttpRequestBody = (configStatus) => {\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [NAME]: escapeSpecialCharacters(formData[NAME]),\r\n      [DESCRIPTION]: escapeSpecialCharacters(formData[NAME]), [FISCAL_ACTION]: escapeSpecialCharacters(formData[FISCAL_ACTION]),\r\n      [STATUS]: configStatus, [CREATOR]: getUserLogin(),\r\n      [MODIFICATION_DATE]: getNowDateTimeString(), [MODIFICATION_USER]: getUserLogin(),\r\n      [CLOSING_DATE]: `${formData[CLOSING_DATE][0]}T${formData[CLOSING_DATE][1]}`, \r\n      [SEVERITY]: formData[SEVERITY],\r\n      [TYPE]: Number(formData[TYPE]),\r\n      [PAUSE_TIMESTAMP]: (formData[PAUSE_TIMESTAMP]) ? formData[PAUSE_TIMESTAMP] : getNowDateTimeString(),\r\n      [GROUP_IDS_SSE]: formData[VISIBILITY_GROUP]\r\n\r\n    })\r\n\r\n    if (isExternalUser()) {\r\n      httpRequestBody[TYPE] = 0\r\n    }\r\n\r\n    if (configStatus === STATUS_ENUM.CRIADO) {\r\n      httpRequestBody[CREATION_DATE] = getNowDateTimeString()\r\n    }\r\n\r\n    let cleanedTagsInput = cleanTagsInput(formTags)\r\n\r\n\r\n    httpRequestBody[MONITORING_PARAMETERS_JSON] = {\r\n      [CPF_RECIPIENT]: cleanedTagsInput[CPF_RECIPIENT] ? removeMask(cleanedTagsInput[CPF_RECIPIENT], MASK_ENUM.CPF) : null,\r\n      [CPF_MDFE_ISSUER]: cleanedTagsInput[CPF_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_MDFE_ISSUER], MASK_ENUM.CPF) : null,\r\n      [CPF_NFE_ISSUER]: cleanedTagsInput[CPF_NFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_NFE_ISSUER], MASK_ENUM.CPF) : null,\r\n      [CPF_DRIVER]: cleanedTagsInput[CPF_DRIVER] ? removeMask(cleanedTagsInput[CPF_DRIVER], MASK_ENUM.CPF) : null,\r\n      [CNPJ_RECIPIENT]: cleanedTagsInput[CNPJ_RECIPIENT] ? removeMask(cleanedTagsInput[CNPJ_RECIPIENT], MASK_ENUM.CNPJ) : null,\r\n      [CNPJ_MDFE_ISSUER]: cleanedTagsInput[CNPJ_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_MDFE_ISSUER], MASK_ENUM.CNPJ) : null,\r\n      [CNPJ_NFE_ISSUER]: cleanedTagsInput[CNPJ_NFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_NFE_ISSUER], MASK_ENUM.CNPJ) : null,\r\n      [PLATE]: cleanedTagsInput[PLATE] ? removeMask(cleanedTagsInput[PLATE], MASK_ENUM.PLATE) : null,\r\n      [MDFE_LOWER_VALUE]: cleanedTagsInput[MDFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[MDFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\r\n      [NFE_LOWER_VALUE]: cleanedTagsInput[NFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[NFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\r\n      [AGREGATED_LOWER_VALUE]: cleanedTagsInput[AGREGATED_LOWER_VALUE] ? removeMask(cleanedTagsInput[AGREGATED_LOWER_VALUE], MASK_ENUM.MONEY) : null\r\n    }\r\n    return httpRequestBody\r\n  }\r\n\r\n  const checkDuplicityWarningConfigs = async (status) => {\r\n\r\n    const httpRequestBody = createEditionHttpRequestBody(status)\r\n    httpRequestBody[ID_CONFIG] = formData[ID_CONFIG]\r\n\r\n    try {\r\n\r\n      const res = await axiosRetryProxy.post(`${env.apiAddress}/warningconfigs/check_duplicity`, httpRequestBody)\r\n      return res.data\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    };\r\n  };\r\n\r\n\r\n  const deleteWarning = (id) => {\r\n\r\n    const entity = \"da Configuração de Alerta\"\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [STATUS]: STATUS_ENUM.REMOVIDO,\r\n      [MODIFICATION_DATE]: getNowDateTimeString(), [MODIFICATION_USER]: getUserLogin(),\r\n    })\r\n    httpRequestBody[GROUP_IDS_SSE] = formData[VISIBILITY_GROUP]\r\n\r\n    setSpinner(true)\r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    axiosRetryProxy.patch(`${env.apiAddress}/warningconfigs/update/${id}`, httpRequestBody)\r\n      .then(res => {\r\n        \r\n        treatResponse(entity, EXCLUSION, ID_CONFIG, res, setModalData, refresh)\r\n\r\n        if (wasSuccessRequest(res, ID_CONFIG)){\r\n          toggleDeleteStatus()\r\n        }\r\n\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, EXCLUSION));\r\n      }).finally(() => {\r\n        setSpinner(false)\r\n      })\r\n  }\r\n\r\n\r\n  const updateWarning = () => {\r\n\r\n    const entity = \"da Configuração de Alerta\"\r\n\r\n    setSpinner(true)\r\n    \r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    const httpRequestBody = createEditionHttpRequestBody(STATUS_ENUM.ATUALIZADO)\r\n\r\n    axiosRetryProxy.patch(`${env.apiAddress}/warningconfigs/update/${formData[ID_CONFIG]}`, httpRequestBody)\r\n      .then(res => {\r\n        treatResponse(entity, EDITION, ID_CONFIG, res, setModalData, refresh)\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, EDITION));\r\n      }).finally(() => {\r\n        setSpinner(false)        \r\n        setModalReadonlyMode(true)\r\n        \r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n  const redirectHistory = () => {\r\n    window.open('/warningconfig_history', '_blank');\r\n  };\r\n\r\n  return <>\r\n\r\n<Modal\r\n          isOpen={show} toggle={() => { toggle() }}\r\n          style={{ maxWidth: '70%' }}\r\n          size=\"lg\"\r\n        >\r\n          <ModalHeader toggle={() => {  toggle()}}>Alerta Cadastrado</ModalHeader>\r\n          <ModalBody style={{ justifyContent: 'center', alignContent: 'center', padding: '0.5rem' }}>\r\n            <><Form style={{ margin: \"5px 0px 10px 0px\" }} onSubmit={e => { e.preventDefault(); }}>\r\n              <Nav tabs style={{ background: \"#f2f2f2\" }}>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 1 && \"active\"}\r\n                    onClick={() => { setTabIndex(1) }}\r\n                  >\r\n                    Descrição\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 2 && \"active\"}\r\n                    onClick={() => { setTabIndex(2) }}\r\n                  >\r\n                    Configurações\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 3 && \"active\"}\r\n                    onClick={() => { setTabIndex(3) }}\r\n                  >\r\n                    Ação Fiscal\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 4 && \"active\"}\r\n                    onClick={() => { setTabIndex(4); }} // aq \r\n                  >\r\n                    Histórico\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={`${tabIndex}`} style={{ padding: \"15px\" }}>\r\n                <TabPane tabId=\"1\">\r\n                  <FormGroup row>\r\n                    <Col sm={4}>\r\n                      <Label for=\"exampleEmail\"><b>Nº Alerta</b></Label>\r\n                      <Input value={formData[ID_CONFIG]} readOnly={true} />\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                      <Label for=\"input\"><b>Status</b></Label>\r\n                      <Input value={getConfigStatusLabel(formData)} readOnly={true} />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col sm={12}>\r\n                      <Label for=\"exampleEmail\"><b>Alerta</b></Label>\r\n                      <Input\r\n                        value={formData[NAME]}\r\n                        readOnly={modalReadonlyMode}\r\n                        maxLength=\"50\"\r\n                        invalid={invalid && (formData[NAME] === \"\" || formData[NAME] === oldFormData[NAME])}\r\n                        onChange={e => setFormData({ ...formData, [NAME]: e.target.value })}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Label for=\"exampleEmail\" sm={6}><b>Descrição do Alerta</b></Label>\r\n                    <Col sm={12}>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        readOnly={modalReadonlyMode}\r\n                        rows=\"4\"\r\n                        maxLength=\"1024\"\r\n                        value={formData[DESCRIPTION]}\r\n                        invalid={invalid && (formData[DESCRIPTION] === \"\" || formData[DESCRIPTION] === oldFormData[DESCRIPTION])}\r\n                        onChange={e => setFormData({ ...formData, [DESCRIPTION]: e.target.value })}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <FormGroup row>\r\n                    <Col>\r\n                      <Label for=\"input\"><b>Data de Fechamento</b></Label>\r\n                      <Input\r\n                        type='date'\r\n                        value={formData[CLOSING_DATE][0]}\r\n                        min={getNowDateTimeString()}\r\n                        max={maxClosingDate()}\r\n                        step=\"1\"\r\n                        readOnly={modalReadonlyMode}\r\n                        invalid={invalid && (formData[CLOSING_DATE][0] === \"\" || formData[CLOSING_DATE][0] === oldFormData[CLOSING_DATE][0])}\r\n                        onChange={e => { setFormData({ ...formData, [CLOSING_DATE]: [e.target.value, formData[CLOSING_DATE][1]] }) }}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Label for=\"input\"><b>Horário de Fechamento</b></Label>\r\n                      <Input\r\n                        value={formData[CLOSING_DATE][1]}\r\n                        placeholder='__:__:__'\r\n                        min={getNowDateTimeString()}\r\n                        step=\"1\"\r\n                        readOnly={modalReadonlyMode}\r\n                        invalid={invalid && (formData[CLOSING_DATE][1] === \"\" || formData[CLOSING_DATE][1] === oldFormData[CLOSING_DATE][1])}\r\n                        onChange={e => {\r\n                          let value = e.target.value\r\n                          // Caso estiver apagando, não é necessário fazer a checagem de regex\r\n                          if (value.length < formData[CLOSING_DATE][1].length)\r\n                            setFormData({ ...formData, [CLOSING_DATE]: [formData[CLOSING_DATE][0], value] })\r\n                          else {\r\n                            if (value.length === 3 || value.length === 6)  // Adicionando os : automaticamente\r\n                              value = `${value.slice(0, -1)}:${value.slice(-1)}`\r\n                            if (value === \"\" || /^(([0-1]\\d?)|(2[0-3]?))(?::([0-5]\\d?))?(?::([0-5]\\d?))?$/.test(value))   // Finalmente testando o regex e atualizando\r\n                              setFormData({ ...formData, [CLOSING_DATE]: [formData[CLOSING_DATE][0], value] })\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n\r\n                  {(isAdmin() || isSubgerente() || isMonitoramento()) && <FormGroup row>\r\n                    <Col sm={12}>\r\n                      <Label for=\"input\"><b>Tipo de Configuração</b></Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        value={formData[TYPE]}\r\n                        readOnly={modalReadonlyMode}\r\n                        disabled={modalReadonlyMode}\r\n                        invalid={invalid && (formData[TYPE] === \"\" || formData[TYPE] === oldFormData[TYPE])}\r\n                        onChange={e => setFormData({ ...formData, [TYPE]: e.target.value })}\r\n                      >\r\n\r\n                        {Object.entries(CONFIG_TYPE_CONDITIONS).map((key_value) => {\r\n                          return (\r\n                            <option key={key_value[1]} value={key_value[1]}>{key_value[0]}</option>\r\n                          )\r\n                        })\r\n                        }\r\n                      </Input>\r\n                    </Col>\r\n                  </FormGroup>}\r\n\r\n                  <GroupsInput\r\n                    readOnly={modalReadonlyMode}\r\n                    disabled={modalReadonlyMode}\r\n                    invalid={invalid && (isEmpty(formData[VISIBILITY_GROUP]) || compareGroups(formData, oldFormData))}\r\n                    data={formData}\r\n                    fieldName={VISIBILITY_GROUP}\r\n                    setData={setFormData}\r\n                    conditions={groupsConditions}\r\n                    groups={groupsValues}\r\n                    first\r\n                  />\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"input\"><b>Condições</b></Label>\r\n                    <WarningTagsInput\r\n                      tags={formTags}\r\n                      invalid={invalid}\r\n                      setTags={setFormTags}\r\n                      readOnly={modalReadonlyMode} disabled={modalReadonlyMode}\r\n                      columns={TAG_INPUT_OPTIONS}\r\n                      size={\"lg\"}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"input\"><b>Prioridade</b></Label>\r\n\r\n                    <Input\r\n                      type=\"select\" readOnly={modalReadonlyMode} disabled={modalReadonlyMode}\r\n                      invalid={invalid && (formData[SEVERITY] === \"\" || formData[SEVERITY] === oldFormData[SEVERITY])}\r\n                      value={formData[SEVERITY]}\r\n                      onChange={e => { setFormData({ ...formData, [SEVERITY]: e.target.value }) }}\r\n                    >\r\n                      {Object.entries(SEVERITY_CONDITIONS).map((key_value) => {\r\n                        return (\r\n                          <option value={key_value[1]} key={key_value[1]}>{key_value[0]}</option>\r\n                        )\r\n                      })\r\n                      }\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <br />\r\n                </TabPane>\r\n                <TabPane tabId=\"3\">\r\n                  <FormGroup row>\r\n                    <Label for=\"exampleEmail\" sm={6}><b>Ação Fiscal</b></Label>\r\n                    <Col sm={12}>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        value={formData[FISCAL_ACTION]}\r\n                        readOnly={modalReadonlyMode}\r\n                        rows=\"4\"\r\n                        maxLength=\"2048\"\r\n                        style={{ minHeight: \"21em\", padding: \"6px 7px 6px 12px\" }}\r\n                        invalid={invalid && (formData[FISCAL_ACTION] === \"\" || formData[FISCAL_ACTION] === oldFormData[FISCAL_ACTION])}\r\n                        onChange={e => { setFormData({ ...formData, [FISCAL_ACTION]: e.target.value }) }}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </TabPane>\r\n                <TabPane tabId=\"4\">\r\n                  <Row style={{ marginTop: '5px' }}>\r\n                    <Col>\r\n                      <b style={{ marginBottom: \"5px\" }}>Histórico (<a style={{ color: \"#51cbce\", cursor: \"pointer\" }} onClick={() => { redirectHistory(); }}>Versão Completa</a>):</b>\r\n                      <Input\r\n                        type='textarea'\r\n                        value={formData.history}\r\n                        readOnly={true}\r\n                        maxLength=\"2048\"\r\n                        style={{ minHeight: \"21em\", padding: \"6px 7px 6px 12px\" }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </TabContent>\r\n              <FormGroup row>\r\n                <Col sm={12}>\r\n                  <ModalEditionButtons\r\n                    id={formData.id_config} data={formData} creator={formData.criador}\r\n                    modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} isDisabled={isDisabled}\r\n                    editionAction={setModalReadonlyMode} deleteAction={openDeleteModal}\r\n                    saveAction={openConfirmationModal} cancelAction={toggle}\r\n\r\n                  />\r\n\r\n                </Col>\r\n              </FormGroup>\r\n            </Form></>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n\r\n    {modalType === MODAL_TYPE_ENUM.CONFIRMATION && <ConfirmationModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethods={modalActionMethods} />}\r\n    {modalType === MODAL_TYPE_ENUM.MESSAGE && <MessageModal show={isModalActive} toggle={combinedToggleOff} data={modalData} spinner={spinner_} />}\r\n\r\n  </>\r\n}\r\n\r\n\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\NoficationActionButtons.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationTypeEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\SuspensionModal\\SuspensionModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationPendingModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\PauseButton.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningClosingModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelectorItem.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\HomologationModal.js",["1354","1355","1356"],"import React from \"react\";\r\nimport {\r\n  Modal, ModalBody, ModalHeader,\r\n  Button, Col, FormGroup,\r\n  Input, Row, Spinner\r\n} from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport env from 'common/enviroment';\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\r\nimport { FcCancel, FcHighPriority, FcOk } from \"react-icons/fc\";\r\nimport { createSimpleFilterClause } from \"axios/AxiosUtils\";\r\nimport { createNotFilterClause } from \"axios/AxiosUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport { getHomologationPendingStatusCodes } from \"common/enumerators/NotificationStatus\";\r\nimport { FISCAL_NOTIFICATION_STATUS } from \"common/model/Notification\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\r\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\r\nimport { getValue } from \"common/utils/errorTreatment\";\r\nimport { ERROR, OK } from \"./ModalConsts\";\r\nimport treatError from \"common/utils/errorTreatment\";\r\n\r\nexport const HOMOLOGATION_MODE = 0\r\nexport const AWARENESS_MODE = 1\r\nexport const SUPERVISION_MODE = 2\r\n\r\n\r\nexport default function HomologationModal({ show, toggle, data, refresh, parentData, setParentData }) {\r\n\r\n  const LABELS = [\r\n    { header: \"Homologar Ação Fiscal\", question: \"Confirma a homologação da ação fiscal?\", error: \"Falha no registro da homologação\", success: \"Homologação da notificação realizada com sucesso!\" }, \r\n    { header: \"Declaração de Ciência\", question: \"Confirma a declaração de ciência?\" , error: \"Falha no registro da declaração de ciência\", success: \"Declaração de ciência realizada com sucesso!\" },\r\n    { header: \"Declaração de Supervisão\", question: \"Confirma a supervisão da ação fiscal?\" , error: \"Falha no registro da declaração de supervisão\", success: \"Supervisão da ação fiscal realizada com sucesso!\" }\r\n  ]\r\n\r\n  const ICON_MESSAGES = [<FcOk size={'6.5rem'}/>, <FcCancel size={'6.5rem'}/>, <FcHighPriority size={'6.5rem'}/>]\r\n\r\n  const homologationType = data.homologationType\r\n  const notification_id = data.notification_id\r\n  const warning = data.raw_data\r\n  const popPending = data.popHomologatedNotification\r\n  const index = data.index\r\n\r\n  const [report, setReport] = React.useState(\"\");\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [homologationMode, setHomologationMode] = React.useState(true);\r\n  const [modalData, setModalData] = React.useState({});\r\n  \r\n\r\n  const mountIconTag = () => {\r\n    return ICON_MESSAGES[modalData.messageType]\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (homologationType === HOMOLOGATION_MODE){\r\n      updateHomologationStatus()\r\n    } else if (homologationType === AWARENESS_MODE){\r\n      updateAwarenessStatus()\r\n    } else if (homologationType === SUPERVISION_MODE){\r\n      updateSupervisionStatus()\r\n    }\r\n  }\r\n\r\n  const updateHomologationStatus = () => {\r\n\r\n    let newStatus = NOTIFICATION_STATUS_ENUM.HOMOLOGADA\r\n    let status = warning[FISCAL_NOTIFICATION_STATUS]\r\n    if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO){\r\n      newStatus = NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA\r\n    }\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      fiscal_notification_modification_date: getNowDateTimeString(),\r\n      fiscal_action_homologation_date: getNowDateTimeString(),\r\n      fiscal_action_homologation_auditor: getUserLogin(),\r\n      fiscal_action_homologation_report: escapeSpecialCharacters(report),\r\n      fiscal_notification_status: newStatus\r\n    })\r\n    \r\n    //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\r\n    warning.fiscal_notification_modification_date = getNowDateTimeString()\r\n    warning.fiscal_action_homologation_date = getNowDateTimeString()\r\n    warning.fiscal_action_homologation_auditor = getUserLogin()\r\n    warning.fiscal_action_homologation_report = escapeSpecialCharacters(report)\r\n    warning.fiscal_notification_status = newStatus\r\n\r\n    update(httpRequestBody, HOMOLOGATION_MODE)    \r\n  }\r\n\r\n\r\n  const updateSupervisionStatus = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      fiscal_notification_modification_date: getNowDateTimeString(),\r\n      fiscal_action_supervision_date: getNowDateTimeString(),\r\n      fiscal_action_supervision_auditor: getUserLogin(),\r\n      fiscal_action_supervision_report: escapeSpecialCharacters(report),\r\n    })\r\n\r\n    //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\r\n    warning.fiscal_notification_modification_date = getNowDateTimeString()\r\n    warning.fiscal_action_supervision_date = getNowDateTimeString()\r\n    warning.fiscal_action_supervision_auditor = getUserLogin()\r\n    warning.fiscal_action_supervision_report = escapeSpecialCharacters(report)\r\n\r\n    update(httpRequestBody, SUPERVISION_MODE)    \r\n  }\r\n\r\n  const updateAwarenessStatus = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      fiscal_notification_awareness_date: getNowDateTimeString(),\r\n      fiscal_notification_awareness_report: escapeSpecialCharacters(report),\r\n      fiscal_notification_awareness_auditor: getUserLogin()\r\n    })\r\n    //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\r\n    warning.fiscal_notification_awareness_date = getNowDateTimeString()\r\n    warning.fiscal_notification_awareness_report = escapeSpecialCharacters(report)\r\n    warning.fiscal_notification_awareness_auditor = getUserLogin()\r\n\r\n    update(httpRequestBody, AWARENESS_MODE)\r\n  }\r\n\r\n\r\n  const propagateAwarenessData = async (httpRequestBody) => {\r\n\r\n    let vehiclePlate = warning['vehicle_plate']\r\n    if (!vehiclePlate) \r\n      return \r\n\r\n    \r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']))\r\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']))\r\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"greater\", NOTIFICATION_STATUS_ENUM.DESIGNADA))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_awareness_auditor\", \"char\", \"null\", \"false\"))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_awareness_date\", \"char\", \"null\", \"true\"))\r\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id))\r\n\r\n    httpRequestBody['filters'] = filters\r\n\r\n    await axios.patch(`${env.apiAddress}/warnings/update_by_filter/`, httpRequestBody)\r\n      .then(res => {\r\n        console.log(res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  const propagateSupervisionData = async (httpRequestBody) => {\r\n\r\n    let vehiclePlate = warning['vehicle_plate']\r\n    if (!vehiclePlate) \r\n      return \r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']))\r\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']))\r\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"greater\", NOTIFICATION_STATUS_ENUM.REALIZADA))\r\n    filters.push(createSimpleFilterClause(\"fiscal_action_supervision_auditor\", \"char\", \"null\", \"false\"))\r\n    filters.push(createSimpleFilterClause(\"fiscal_action_supervision_date\", \"char\", \"null\", \"true\"))\r\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id))\r\n\r\n    httpRequestBody['filters'] = filters\r\n\r\n    await axios.patch(`${env.apiAddress}/warnings/update_by_filter/`, httpRequestBody)\r\n      .then(res => {\r\n        console.log(res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  const propagateHomologationData = async (httpRequestBody) => {\r\n    \r\n    let vehiclePlate = warning['vehicle_plate']\r\n    if (!vehiclePlate) \r\n      return \r\n\r\n    if (httpRequestBody[FISCAL_NOTIFICATION_STATUS] === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA){\r\n      return\r\n    }\r\n\r\n    let status = httpRequestBody['fiscal_notification_status']  \r\n    httpRequestBody['fiscal_notification_status']  = status * NOTIFICATION_STATUS_ENUM.IMPORTED_STATUS_CODE\r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']))\r\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']))\r\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"in\", getHomologationPendingStatusCodes()))\r\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id))\r\n\r\n\r\n    \r\n    httpRequestBody['filters'] = filters\r\n\r\n    await axios.patch(`${env.apiAddress}/warnings/update_by_filter/`, httpRequestBody)\r\n      .then(res => {\r\n        console.log(res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const update = (httpRequestBody, mode) => {\r\n\r\n    setSpinner(true)\r\n    setHomologationMode(false)\r\n\r\n    axios.patch(`${env.apiAddress}/warnings/update/${notification_id}`, httpRequestBody)\r\n      .then(async res => {\r\n\r\n        if (!isSuccessStatusCode(res) || !getValue(res, 'id')) {\r\n          setModalData({ messageType: ERROR, message: LABELS[homologationType][\"error\"] });\r\n        } else {\r\n          \r\n          setModalData({ messageType: OK, message: LABELS[homologationType][\"success\"] });\r\n          \r\n          if (mode === AWARENESS_MODE){\r\n            await propagateAwarenessData(httpRequestBody)\r\n          } else if (mode === SUPERVISION_MODE) {\r\n            await propagateSupervisionData(httpRequestBody)\r\n          } else {\r\n            await propagateHomologationData(httpRequestBody)\r\n          }\r\n\r\n          if (popPending ) {\r\n            let pending_count = warning['pending_count']\r\n            //Decrementa primeiro e remove no condicional abaixo\r\n            if (typeof pending_count === 'number' && pending_count > 0 ){\r\n              pending_count = pending_count - 1\r\n              warning['pending_count'] = pending_count \r\n            } \r\n\r\n            //se não houver mais pendências, ele remove aqui. \r\n            if (typeof pending_count === 'number' && pending_count === 0 ){\r\n              delete parentData[index]\r\n            } else {\r\n              parentData[index] = warning\r\n            }\r\n            setParentData(parentData)\r\n          }\r\n        }\r\n      }).catch(err => {\r\n        setModalData(treatError(err, \"\", LABELS[homologationType][\"error\"]));\r\n      }).finally(() => {\r\n        refresh()\r\n        setSpinner(false)\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    (homologationMode) ? \r\n    <>\r\n      <Modal isOpen={show} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>{LABELS[homologationType][\"header\"]}</ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n          <h3 style={{ 'textAlign': 'center', margin: '10px 0px', whiteSpace: 'pre-line' }}>\r\n          <b>{LABELS[homologationType][\"question\"]}</b>\r\n                </h3>\r\n                </div>\r\n          <div style={{ marginTop: '50px' }}>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <b>Observações:</b>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"text\"\r\n                  id=\"homologation_warning\"\r\n                  maxLength={2048}\r\n                  style={{ paddingTop: 0, paddingLeft: 5 }}\r\n                  onChange={e => { setReport(e.target.value) }}\r\n                  value={report}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n        </ModalBody>\r\n        <FormGroup row className=\"text-center\" style={{ marginTop: '25px' }}>\r\n          <Col>\r\n            <Button color='primary' onClick={() => { handleClick() }}>Sim</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button color='danger' onClick={toggle}>Não</Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Modal>\r\n    </>\r\n    : \r\n      <Modal isOpen={show} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}></ModalHeader>\r\n          <ModalBody style={{ 'textAlign': 'center' }}>\r\n            {\r\n              spinner ?\r\n                <Spinner color=\"info\" style={{ width: \"4.0rem\", height: \"4.0rem\", margin: '4.0rem' }} />\r\n                :\r\n                  <div>\r\n                    {mountIconTag()}\r\n                    <h3>{modalData.message}</h3>                    \r\n                  </div>            \r\n            }\r\n          </ModalBody>\r\n        </Modal>\r\n  )\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadNearClosingWarningConfig.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\MapLegend.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\constants.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NearClosingWarningModal\\NearClosingWarningModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\Pagination.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\NotificationModal.js",["1357"],"import React from \"react\";\r\n\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nimport { BsFillXCircleFill, BsArrowDownCircleFill } from \"react-icons/bs\";\r\n\r\nimport axios from \"axios\";\r\nimport env from \"common/enviroment\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\n\r\nimport ConfirmationModal from \"../ConfirmationModal \";\r\nimport MessageModal from \"../MessageModal\";\r\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\n\r\nimport { AuditorsContext } from 'context/AuditorsContext'\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\nimport { GroupsContext } from \"context/GroupsContext\";\r\n\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\r\nimport { compressImage, readFileAsBase64 } from \"./utils/image\";\r\nimport { EDITION, ERROR, EXCLUSION } from \"../ModalConsts\";\r\nimport { BLANK_NOTIFICATION_FORM_DATA, DATA_ONLY, DEFAULT_TAB_PANE_NAMES, IMAGE_ONLY, MERGE, NOTHING, TAB_PANE_NAME_WITH_SUPERVISION, emptyBackground } from \"./utils/constants\";\r\nimport { alowPropagateNotificationData, compareWithOldValues, getNotificationMostRecentStatus, hasEmptyValues, validateData } from \"./utils/rules\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport { formatCompletionData, formatConfirmationMessage, formatFiscalAuditors, formatTabBackground, formatTabNames } from \"./utils/format-data\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport { createSimpleFilterClause } from \"axios/AxiosUtils\";\r\nimport { createNotFilterClause } from \"axios/AxiosUtils\";\r\nimport MASK_ENUM from \"common/enumerators/MaskEnum\";\r\nimport useToggle from \"common/hooks/useToogle\";\r\nimport { evaluateStatus } from \"common/rules/NotificationRules\";\r\nimport { FISCAL_NOTIFICATION_PARENT_ID } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_STATUS } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_MODIFICATION_DATE } from \"common/model/Notification\";\r\nimport { VEHICLE_PLATE } from \"common/model/Notification\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\nimport { ID } from \"common/model/Notification\";\r\nimport { FILTERS } from \"axios/AxiosUtils\";\r\nimport { NOTIFICATION_ID } from \"common/model/Image\";\r\nimport { IMAGE_DESCRIPTION } from \"common/model/Image\";\r\nimport { IMAGE_NAME } from \"common/model/Image\";\r\nimport { IMAGE_DATA } from \"common/model/Image\";\r\nimport { IMAGE_PREVIEW } from \"common/model/Image\";\r\nimport { ID_IMAGE } from \"common/model/Image\";\r\nimport { NAME } from \"common/model/WarningConfig\";\r\n\r\n\r\nimport { REPORT_ENABLED } from \"common/model/Notification\";\r\n\r\nimport { IMAGE_URL } from \"common/model/Image\";\r\nimport { HISTORY } from \"common/model/Notification\";\r\nimport useNotification from \"common/hooks/useNotification\";\r\nimport HomologationPanel from \"./panels/HomologationPanel\";\r\nimport { AWARENESS_MODE, HOMOLOGATION_MODE, SUPERVISION_MODE } from \"../HomologationModal\";\r\nimport { isHomologated } from \"common/enumerators/NotificationStatus\";\r\nimport { SUPERVISION_AUDITOR } from \"common/model/Notification\";\r\nimport ReportPanel from \"./panels/ReportPanel\";\r\nimport EventPanel from \"./panels/EventPanel\";\r\nimport FiscalActionPanel from \"./panels/FiscalActionPanel\";\r\nimport DesignationPanel from \"./panels/DesignationPanel\";\r\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { removeUnicode } from \"common/utils/validate\";\r\nimport { removeMask } from \"common/utils/mask\";\r\nimport { treatNullValue } from \"common/utils/collections\";\r\nimport { treatResponse } from \"common/utils/errorTreatment\";\r\nimport treatError from \"common/utils/errorTreatment\";\r\nimport { cpfFilter } from \"components/tags/filterPresets\";\r\nimport { cnpjFilter } from \"components/tags/filterPresets\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { REPORT_BOOKED_CPF } from \"common/model/Notification\";\r\nimport { REPORT_BOOKED_CNPJ } from \"common/model/Notification\";\r\nimport { REPORT_CPF_DRIVER } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\r\nimport { HOMOLOGATION_AUDITOR } from \"common/model/Notification\";\r\nimport { INT } from \"axios/AxiosUtils\";\r\nimport { GREATER } from \"axios/AxiosUtils\";\r\nimport { CHAR } from \"axios/AxiosUtils\";\r\nimport { EQUAL } from \"axios/AxiosUtils\";\r\nimport { FISCAL_ACTION_REPORT } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_DATE } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_REPORT_DATE } from \"common/model/Notification\";\r\nimport { DESIGNATION_AUDITOR } from \"common/model/Notification\";\r\nimport { MONITORING_USER_LOGIN } from \"common/model/Notification\";\r\nimport { DESIGNATION_DATE } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_REPORT_AUDITOR } from \"common/model/Notification\";\r\nimport { AWARENESS_AUDITOR } from \"common/model/Notification\";\r\nimport { REPORT_AI } from \"common/model/Notification\";\r\nimport { REPORT_DAR } from \"common/model/Notification\";\r\nimport { REPORT_REVENUE_CODE } from \"common/model/Notification\";\r\nimport { REPORT_PENALTY_VALUE } from \"common/model/Notification\";\r\nimport { TRAILER_PLATE } from \"common/model/Notification\";\r\nimport { REPORT_BOOKED_IE } from \"common/model/Notification\";\r\nimport { REPORT_LATITUDE } from \"common/model/Notification\";\r\nimport { REPORT_LONGITUDE } from \"common/model/Notification\";\r\nimport { REPORT_PRODUCT_NAME } from \"common/model/Notification\";\r\nimport { wasSuccessRequest } from \"common/utils/errorTreatment\";\r\n\r\n\r\n\r\n\r\nexport default function NotificationModal({ show, toggle, data, initialReadOnlyState, refresh }) {\r\n\r\n  const [tabIndex, setTabIndex] = React.useState(1)\r\n  const [isFirst, setIsFirst] = React.useState(true);\r\n  const { getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const { getGroupOwnerData, getGroupSupervisorData, getMonitoringGroupOwner } = React.useContext(GroupsContext);\r\n  const { warningsViewed } = React.useContext(WarningsUpdateContext)\r\n\r\n  const [formData, setFormData] = React.useState(() => (data))\r\n  const [oldFormData] = React.useState(() => (JSON.parse(JSON.stringify(data))))\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [invalid, setInvalid] = React.useState(false)\r\n  const [readOnly, setReadOnly] = React.useState(initialReadOnlyState)\r\n  const [mode, setMode] = React.useState({\r\n    awareness: false,\r\n    homologation: false,\r\n    supervision: false,\r\n    edition: false\r\n  })\r\n\r\n\r\n  const [updateAuditorsResponsibleFlag, toggleUpdateAuditorsResponsible] = useToggle(false)\r\n  const [imagesToUpload, setImagesToUpload] = React.useState({ 'previews': [], 'images': [] })\r\n\r\n  const { modalData, setModalData, modalActionMethods, setModalActionMethods, isModalActive, modalType, toggleModalOn, toggleModalOff, toogleMessageModalOn, toogleConfirmationModalOn } = useModalWithData()\r\n  const { mountAuditorsResponsibles } = useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData)\r\n\r\n  const [notificationImages, setNotificationImages] = React.useState([]);\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  React.useEffect(() => {\r\n    if (data) {\r\n      if (data[REPORT_BOOKED_CPF]) data[REPORT_BOOKED_CPF] = cpfFilter.mask.encode(data[REPORT_BOOKED_CPF])\r\n      if (data[REPORT_BOOKED_CNPJ]) data[REPORT_BOOKED_CNPJ] = cnpjFilter.mask.encode(data[REPORT_BOOKED_CNPJ])\r\n      if (data[REPORT_CPF_DRIVER]) data[REPORT_CPF_DRIVER] = cpfFilter.mask.encode(data[REPORT_CPF_DRIVER])\r\n    }\r\n\r\n    setFormData(data)\r\n\r\n  }, [data])\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n\r\n    httpRequestBody[NOTIFICATION_ID] = data[FISCAL_NOTIFICATION_PARENT_ID]\r\n\r\n    axiosRetryProxy.post(`${env.apiAddress}/warning_images/download`, httpRequestBody)\r\n      .then(res => {\r\n\r\n        let data = res.data.map((image) => {\r\n\r\n          return { ...image, preview: image.preview ? image.preview : \"\" }\r\n        })\r\n\r\n        setNotificationImages(data)\r\n\r\n      }).catch(err => {\r\n        console.log('error ao receber imagens:', err)\r\n      })\r\n\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  React.useEffect(() => {\r\n    //Este método abaixo só deve ser chamado quando houver edição dos fiscais responsáveis pela ação fiscal \r\n    if (!isFirst) {\r\n\r\n      let newData = mountAuditorsResponsibles(formData)\r\n      \r\n      setFormData({ ...newData })\r\n    } else {\r\n      setIsFirst(false)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps  \r\n  }, [updateAuditorsResponsibleFlag])\r\n\r\n  const cleanInputs = () => {\r\n\r\n    setFormData({ ...BLANK_NOTIFICATION_FORM_DATA, [FISCAL_ACTION_AUDITORS]: {}, [HOMOLOGATION_AUDITOR]: \"\" })\r\n  }\r\n\r\n\r\n\r\n\r\n  function redirectHistory() {\r\n    window.open('/notification_history', '_blank');\r\n  };\r\n\r\n\r\n\r\n\r\n  const removeImageToUpload = (index) => {\r\n\r\n    setImagesToUpload((prevState) => ({\r\n      previews: prevState.previews.filter((_, i) => i !== index),\r\n      images: prevState.images.filter((_, i) => i !== index)\r\n    }));\r\n\r\n  };\r\n\r\n  function enableEditionButton(status) {\r\n    if (isHomologated(status) || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const addImageToUpload = (event) => {\r\n    const images = event.target.files;\r\n    const imagesArray = Array.from(images);\r\n\r\n    setImagesToUpload((prevState) => ({ ...prevState, images: [...prevState.images, ...imagesArray] }))\r\n\r\n    const readerPromises = imagesArray.map((image) => {\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          resolve(compressImage(reader.result));\r\n        };\r\n        reader.readAsDataURL(image);\r\n      });\r\n    });\r\n\r\n    Promise.all(readerPromises).then((results) => {\r\n      setImagesToUpload((prevState) => ({ ...prevState, previews: [...prevState.previews, ...results] }))\r\n    });\r\n  };\r\n\r\n\r\n  const propagateNotificationData = async (warning, httpRequestBody) => {\r\n\r\n    let status = httpRequestBody[FISCAL_NOTIFICATION_STATUS]\r\n    delete httpRequestBody[FISCAL_NOTIFICATION_MODIFICATION_DATE]\r\n    httpRequestBody[FISCAL_NOTIFICATION_STATUS] = status * NOTIFICATION_STATUS_ENUM.IMPORTED_STATUS_CODE\r\n\r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(VEHICLE_PLATE, CHAR, EQUAL, warning[VEHICLE_PLATE]))\r\n    filters.push(createSimpleFilterClause(ID_CONFIG, CHAR, EQUAL, warning[ID_CONFIG]))\r\n    filters.push(createSimpleFilterClause(ID, INT, GREATER, warning[FISCAL_NOTIFICATION_PARENT_ID]))\r\n    filters.push(createSimpleFilterClause(FISCAL_NOTIFICATION_STATUS, INT, GREATER, NOTIFICATION_STATUS_ENUM.DESIGNADA))\r\n    filters.push(createNotFilterClause(ID, INT, EQUAL, warning[ID]))\r\n\r\n    httpRequestBody[FILTERS] = filters\r\n\r\n    axios.patch(`${env.apiAddress}/warnings/update_by_filter/`, httpRequestBody)\r\n      .then(res => {\r\n        refresh();\r\n        return res\r\n      }).catch(err => {\r\n        return err\r\n      })\r\n  }\r\n\r\n\r\n  const updateNotification = async () => {\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [FISCAL_NOTIFICATION_PARENT_ID]: formData[FISCAL_NOTIFICATION_PARENT_ID],\r\n      [FISCAL_ACTION_AUDITORS]: formatFiscalAuditors(Object.values(formData[FISCAL_ACTION_AUDITORS])),\r\n      [FISCAL_ACTION_REPORT]: escapeSpecialCharacters(formData[FISCAL_ACTION_REPORT]),\r\n      [FISCAL_ACTION_DATE]: `${formData[FISCAL_ACTION_DATE][0]}T${formData[FISCAL_ACTION_DATE][1]}`,\r\n      [FISCAL_ACTION_REPORT_DATE]: getNowDateTimeString(),\r\n      [FISCAL_NOTIFICATION_MODIFICATION_DATE]: getNowDateTimeString(),\r\n      [DESIGNATION_AUDITOR]: formData[MONITORING_USER_LOGIN],\r\n      [DESIGNATION_DATE]: formData[DESIGNATION_DATE],\r\n      [FISCAL_ACTION_REPORT_AUDITOR]: getUserLogin(),\r\n      [HOMOLOGATION_AUDITOR]: formData[HOMOLOGATION_AUDITOR],\r\n      [AWARENESS_AUDITOR]: formData[AWARENESS_AUDITOR],\r\n      [REPORT_ENABLED]: formData[REPORT_ENABLED],\r\n      [REPORT_AI]: escapeSpecialCharacters(removeUnicode(formData[REPORT_AI])),\r\n      [REPORT_DAR]: escapeSpecialCharacters(removeUnicode(formData[REPORT_DAR])),\r\n      [REPORT_REVENUE_CODE]: escapeSpecialCharacters(removeUnicode(formData[REPORT_REVENUE_CODE])),\r\n      [REPORT_PENALTY_VALUE]: removeMask(removeUnicode(formData[REPORT_PENALTY_VALUE]), MASK_ENUM.MONEY),\r\n      [TRAILER_PLATE]: escapeSpecialCharacters(removeUnicode(formData[TRAILER_PLATE])),\r\n      [VEHICLE_PLATE]: escapeSpecialCharacters(removeUnicode(formData[VEHICLE_PLATE])),\r\n      [REPORT_CPF_DRIVER]: escapeSpecialCharacters(removeMask(formData[REPORT_CPF_DRIVER])),\r\n      [REPORT_BOOKED_IE]: escapeSpecialCharacters(removeUnicode(formData[REPORT_BOOKED_IE])),\r\n      [REPORT_BOOKED_CPF]: escapeSpecialCharacters(removeMask(formData[REPORT_BOOKED_CPF])),\r\n      [REPORT_BOOKED_CNPJ]: escapeSpecialCharacters(removeMask(formData[REPORT_BOOKED_CNPJ])),\r\n      [REPORT_LATITUDE]: treatNullValue(removeUnicode(formData[REPORT_LATITUDE]), 0.0),\r\n      [REPORT_LONGITUDE]: treatNullValue(removeUnicode(formData[REPORT_LONGITUDE]), 0.0),\r\n      [REPORT_PRODUCT_NAME]: escapeSpecialCharacters(formData[REPORT_PRODUCT_NAME])\r\n    })\r\n\r\n    let newStatus = evaluateStatus(httpRequestBody, formData[FISCAL_NOTIFICATION_STATUS])\r\n    httpRequestBody[FISCAL_NOTIFICATION_STATUS] = newStatus\r\n\r\n\r\n\r\n    return await axios.patch(`${env.apiAddress}/warnings/update/${formData[ID]}`, httpRequestBody)\r\n      .then(async res => {\r\n\r\n        if (wasSuccessRequest(res, ID)) {\r\n          setFormData({ ...formData, [FISCAL_NOTIFICATION_STATUS]: newStatus })\r\n\r\n          if (alowPropagateNotificationData(formData)) {\r\n            await propagateNotificationData(formData, httpRequestBody)\r\n          }\r\n        }\r\n        return res\r\n      }).catch(err => {\r\n        return err\r\n      })\r\n  }\r\n\r\n  const uploadImage = async (image) => {\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n\r\n    httpRequestBody[NOTIFICATION_ID] = formData[FISCAL_NOTIFICATION_PARENT_ID]\r\n    httpRequestBody[IMAGE_DESCRIPTION] = image[IMAGE_NAME]\r\n\r\n    const base64String = await readFileAsBase64(image, false);\r\n\r\n    httpRequestBody[IMAGE_DATA] = base64String.replace(/^data:image\\/(png|jpeg);base64,/, '');\r\n    httpRequestBody[IMAGE_PREVIEW] = base64String\r\n\r\n    if (httpRequestBody[IMAGE_DESCRIPTION] && httpRequestBody[IMAGE_DESCRIPTION].includes(\"derzu\")) {\r\n      console.log(\"DERZU1\", base64String.length)\r\n      console.log(\"DERZU2\", base64String)\r\n      console.log(\"DERZU3\", httpRequestBody['image_data'].length)\r\n      console.log(\"DERZU4\", httpRequestBody['image_data'])\r\n    }\r\n\r\n    try {\r\n      let res = await axios.post(`${env.apiAddress}/warning_images/upload`, httpRequestBody);\r\n      //resolve();\r\n      return res\r\n    } catch (err) {\r\n      //reject()\r\n      console.log(err)\r\n      return err\r\n    }\r\n  }\r\n\r\n  const update = async (mode) => {\r\n    setSpinner(true)\r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    let promisses = []\r\n\r\n    if (mode === DATA_ONLY || mode === MERGE) {\r\n      promisses.push(updateNotification())\r\n    }\r\n\r\n    if (mode === IMAGE_ONLY || mode === MERGE) {\r\n      for (const image of imagesToUpload.images) {\r\n        let imagePromisse = uploadImage(image)\r\n        promisses.push(imagePromisse)\r\n      }\r\n    }\r\n\r\n    try {\r\n      let responses = await Promise.all(promisses);\r\n      let data = formatCompletionData(mode, responses)\r\n\r\n      refresh();\r\n      toogleMessageModalOn(data.message, data.icon)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      toogleMessageModalOn(\"Falha na atualização da Notificação!\", ERROR)\r\n    } finally {\r\n      setMode({ ...mode, edition: false })\r\n      setSpinner(false)\r\n    }\r\n  }\r\n\r\n  const deleteImage = async (imageIndex) => {\r\n\r\n    const entity = \"da Imagem\"\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n\r\n    httpRequestBody[NOTIFICATION_ID] = formData[FISCAL_NOTIFICATION_PARENT_ID]\r\n    httpRequestBody[ID_IMAGE] = notificationImages[imageIndex][ID_IMAGE]\r\n\r\n    axios.post(`${env.apiAddress}/warning_images/delete`, httpRequestBody).then(res => {\r\n      treatResponse(entity, EXCLUSION, ID_IMAGE, res, setModalData, refresh)\r\n    }).catch(err => {\r\n      setModalData(treatError(err, entity, EXCLUSION));\r\n    }).finally(() => {\r\n      setSpinner(false)\r\n      cleanInputs()\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const openDeleteConfirmationModal = (imageIndex) => {\r\n    setModalActionMethods([undefined, undefined, deleteImage]);\r\n    setModalData({ message: 'Confima a exclusão desta imagem?', operation: EXCLUSION, id: imageIndex })\r\n    toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n  };\r\n\r\n\r\n\r\n  const openConfirmationModal = () => {\r\n    let errorMessages = validateData(formData)\r\n\r\n    if (hasEmptyValues(formData)) {\r\n      setInvalid(true)\r\n      toogleMessageModalOn(\"Há campos obrigatórios não preenchidos!\", ERROR)\r\n\r\n    } else if (!isEmpty(errorMessages)) {\r\n      setInvalid(true)\r\n      let errorMessage = \"Há campos obrigatórios com dados inválidos:\\n\"\r\n      errorMessage += errorMessages.join(\"\")\r\n      toogleMessageModalOn(errorMessage, ERROR)\r\n\r\n    } else {\r\n\r\n      let hasImageModification = (imagesToUpload.images.length > 0)\r\n      let hasDataModification = !compareWithOldValues(formData, oldFormData)\r\n\r\n      let mode = (hasDataModification) ? DATA_ONLY : NOTHING\r\n      mode = (!hasDataModification && hasImageModification) ? IMAGE_ONLY : mode\r\n      mode = (hasDataModification && hasImageModification) ? MERGE : mode\r\n\r\n      setInvalid(false)\r\n      if (mode === NOTHING) {\r\n        let errorMessage = \"Não há alterações a serem salvas para esta notificação!\"\r\n        toogleMessageModalOn(errorMessage, ERROR)\r\n      } else {\r\n        let message = formatConfirmationMessage(mode)\r\n        let data = { message: message, operation: EDITION, id: formData[ID] }\r\n        toogleConfirmationModalOn(data, () => { setSpinner(true); update(mode, formData[ID]); setReadOnly(true) })\r\n      }\r\n    }\r\n  }\r\n\r\n  const getTabPaneNames = () => {\r\n    if (isEmpty(formData[SUPERVISION_AUDITOR])) {\r\n      return DEFAULT_TAB_PANE_NAMES\r\n    } else {\r\n      return TAB_PANE_NAME_WITH_SUPERVISION\r\n    }\r\n  }\r\n\r\n\r\n  const EditionButton = () => {\r\n\r\n    return <Row>\r\n      {enableEditionButton(formData[FISCAL_NOTIFICATION_STATUS]) &&\r\n        <Col style={{ textAlign: \"end\", marginTop: \"10px\" }}>\r\n          {readOnly ?\r\n            <Button color='primary'\r\n              onClick={() => { setReadOnly(false); setTabIndex(3); setMode({ ...mode, edition: true }) }}\r\n              style={{ width: \"12rem\", height: \"2.5rem\", marginTop: \"10px\" }}>Editar Ação Fiscal\r\n            </Button>\r\n            :\r\n            <>\r\n              <Button\r\n                color='primary'\r\n                onClick={() => {\r\n                  openConfirmationModal();\r\n                }}\r\n                style={{ marginRight: \"1rem\", marginTop: \"10px\" }}\r\n              >\r\n                Salvar\r\n              </Button>\r\n              <Button\r\n                color='danger'\r\n                style={{ marginTop: \"10px\" }}\r\n                onClick={() => { setFormData(JSON.parse(JSON.stringify(oldFormData))); setMode({ ...mode, edition: false }); setReadOnly(true); }}\r\n              >\r\n                Cancelar\r\n              </Button>\r\n            </>\r\n          }\r\n        </Col>\r\n      }\r\n    </Row>\r\n\r\n\r\n  }\r\n\r\n\r\n  const BuildNavigationPart = () => {\r\n\r\n    return (\r\n      <Nav tabs style={{ background: \"#f2f2f2\" }}>\r\n        {\r\n          Object.entries(getTabPaneNames()).map((key_value) => {\r\n            return (\r\n              <NavItem key={key_value[0]} style={{ cursor: \"pointer\" }}>\r\n                <NavLink\r\n                  className={tabIndex === (key_value[1]) ? \"active\" : \"\"}\r\n                  style={formatTabBackground(mode, key_value[1])}\r\n                  onClick={() => { setTabIndex(key_value[1]) }}\r\n                  key={key_value[0]}\r\n                >\r\n                  {formatTabNames(mode, key_value[1], key_value[0])}\r\n                </NavLink>\r\n              </NavItem>\r\n            )\r\n          })\r\n        }\r\n      </Nav>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={show} toggle={toggle} size=\"lg\">\r\n        <ModalHeader toggle={toggle} style={{ padding: \"10px 15px\" }}>\r\n          {`${formData[NAME]} (Ocorrência ${formData[ID]}) - ${getNotificationMostRecentStatus(formData[ID], formData[FISCAL_NOTIFICATION_STATUS], warningsViewed)}`}\r\n        </ModalHeader>\r\n        <ModalBody style={{ alignContent: 'center', padding: \"0px\" }}>\r\n          <BuildNavigationPart />\r\n          <TabContent activeTab={`${tabIndex}`} style={{ padding: \"15px\" }}>\r\n            <TabPane tabId=\"1\">\r\n\r\n              <EventPanel data={formData} />\r\n\r\n            </TabPane>\r\n\r\n            <TabPane tabId=\"2\">\r\n\r\n              <DesignationPanel data={formData} />\r\n\r\n              <HomologationPanel data={formData} setData={setFormData} refresh={refresh} homologationType={AWARENESS_MODE} setMode={setMode} mode={mode} />\r\n\r\n            </TabPane>\r\n\r\n            <TabPane tabId=\"3\">\r\n\r\n              <FiscalActionPanel data={formData} setData={setFormData} oldData={oldFormData} readOnly={readOnly} invalid={invalid} refresh={toggleUpdateAuditorsResponsible} />\r\n\r\n              <EditionButton />\r\n\r\n            </TabPane>\r\n\r\n            <TabPane tabId=\"4\">\r\n              <ReportPanel data={formData} setData={setFormData} oldData={oldFormData} invalid={invalid} readOnly={readOnly} />\r\n\r\n              <EditionButton />\r\n            </TabPane>\r\n\r\n            {tabIndex === 5 &&\r\n              <TabPane tabId=\"5\">\r\n                {!imagesToUpload.previews.length && notificationImages.length === 0 && emptyBackground}\r\n                <Row style={{ display: 'flex', flexWrap: 'wrap', padding: '10px', maxWidth: '100%', overflowX: 'auto', margin: '0' }}>\r\n                  {notificationImages.map((notificationImg, index) => (\r\n                    <Col md=\"4\" xs=\"4\" key={index} style={{ margin: '0px 0px 15px 0px' }}>\r\n                      <img src={notificationImg[IMAGE_PREVIEW]} alt={`Preview2 ${index}`} style={{ margin: '0px 0px 0px 5px' }} />\r\n                      <a href={`${notificationImg[IMAGE_URL]}`}>\r\n                        <BsArrowDownCircleFill style={{ color: 'green', fontSize: '20px', position: 'absolute', top: '20px', right: '1px', cursor: 'pointer' }} />\r\n                      </a>\r\n                      {!readOnly && <BsFillXCircleFill onClick={() => openDeleteConfirmationModal(index)} style={{ color: '#EF8157', fontSize: '20px', position: 'absolute', top: '-1px', right: '1px', cursor: 'pointer' }} />}\r\n                    </Col>\r\n                  ))}\r\n                  {imagesToUpload.previews.map((previewImg, index) => (\r\n                    <Col md=\"4\" xs=\"4\" key={index} style={{ margin: '0px 0px 15px 0px' }}>\r\n                      <img src={previewImg} alt={`Preview ${index}`} style={{ maxWidth: '100%', margin: '5px', position: 'relative' }} />\r\n                      {!readOnly && <BsFillXCircleFill onClick={() => removeImageToUpload(index)} style={{ color: '#EF8157', fontSize: '20px', position: 'absolute', top: '-1px', right: '1px', cursor: 'pointer' }} />}\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <Row>\r\n                  <Col style={{ textAlign: \"center\" }}>\r\n                    <label htmlFor=\"file-upload\" readOnly={readOnly} disabled={readOnly} className=\"custom-file-upload btn btn-primary\" style={{ marginTop: '65px', marginBottom: '49px' }}>\r\n                      <input\r\n                        id=\"file-upload\"\r\n                        type=\"file\"\r\n                        multiple\r\n                        readOnly={readOnly}\r\n                        disabled={readOnly}\r\n                        accept=\"image/png,image/jpeg\"\r\n                        onChange={addImageToUpload}\r\n                        style={{ display: 'none' }}\r\n                      />\r\n                      Selecionar Imagens\r\n                    </label>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <EditionButton />\r\n\r\n              </TabPane>\r\n            }\r\n\r\n            <TabPane tabId=\"6\">\r\n              <HomologationPanel data={formData} setData={setFormData} refresh={refresh} homologationType={SUPERVISION_MODE} setMode={setMode} mode={mode} />\r\n            </TabPane>\r\n\r\n            <TabPane tabId=\"7\">\r\n              <HomologationPanel data={formData} setData={setFormData} refresh={refresh} homologationType={HOMOLOGATION_MODE} setMode={setMode} mode={mode} />\r\n            </TabPane>\r\n\r\n            <TabPane tabId=\"8\">\r\n              <Row style={{ marginTop: '5px' }}>\r\n                <Col>\r\n                  <b>Histórico (<a style={{ color: \"#51cbce\", cursor: \"pointer\" }} onClick={() => { redirectHistory(); }}>Versão Completa</a>):</b>\r\n                  <Input\r\n                    type='textarea'\r\n                    value={formData[HISTORY]}\r\n                    readOnly\r\n                    maxLength=\"2048\"\r\n                    style={{ minHeight: \"21em\", padding: \"6px 7px 6px 12px\" }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      {modalType === MODAL_TYPE_ENUM.CONFIRMATION && <ConfirmationModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethods={modalActionMethods} />}\r\n      {modalType === MODAL_TYPE_ENUM.MESSAGE && <MessageModal show={isModalActive} toggle={toggleModalOff} data={modalData} spinner={spinner} />}\r\n\r\n    </>)\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\LocationTrackingModal\\LocationTrackingModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\WarningModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\SelectableTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\WarningTagsInput.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Traffic\\utils\\filters.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\filterPresets.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\group\\GroupsInput.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\AuditorFindModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\hooks\\useAbortController.js",["1358"],"import { useRef, useEffect, useCallback } from 'react';\r\n\r\nexport const useAbortController = () => {\r\n  const abortControllersRef = useRef([]);\r\n\r\n  const getAbortController = useCallback(() => {\r\n    const abortController = new AbortController();\r\n    abortControllersRef.current.push(abortController);\r\n    return abortController;\r\n  }, []);\r\n\r\n  // Gera um novo signal a cada chamada\r\n  const getSignal = useCallback(() => {\r\n    return getAbortController().signal;\r\n  }, [getAbortController]);\r\n\r\n  // Cancela todas as requisições pendentes\r\n  const abortAll = useCallback(() => {\r\n    abortControllersRef.current.forEach(\r\n      controller => {\r\n        controller.abort();\r\n        console.log(\r\n          'Requisição cancelada pelo useAbortController!'\r\n        );\r\n      }\r\n    );\r\n    abortControllersRef.current = [];\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Chamada quando o componente for desmontado\r\n    return () => {\r\n      abortAll();\r\n    };\r\n  }, []);\r\n\r\n  return { getSignal, abortAll };\r\n};","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\format-data.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\filters.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\User.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\VehicleModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficTimestamp.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficLastLocations.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\Plate.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\utils\\getRandomImage.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\WarningDfe.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Mdfe.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tags\\Tag.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\TrafficImageModal\\TrafficImageModal.js",["1359","1360"],"import React from \"react\";\r\nimport {\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Spinner\r\n} from 'reactstrap';\r\n\r\n// import useAsync from \"common/hooks/useAsync\";\r\n// import { isEmpty } from \"common/utils/collections\";\r\n// import { ATF_LINK } from \"common/enviroment\";\r\n\r\nexport default function TrafficImageModal({ show, toggle, uri}) {\r\n    // const { loading, error, value } = useAsync(async () => {\r\n    // }, []);\r\n\r\n    return (\r\n        <Modal isOpen={show} toggle={toggle} size=\"xl\">\r\n          <ModalHeader toggle={toggle}>\r\n            {`Imagem`}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n          <div className=\"content\">\r\n            {/* {loading ? <Spinner color=\"info\" style={{ width: \"4.0rem\", height: \"4.0rem\", margin: '4.0rem' }} /> : \"\"}\r\n            {error ? <h1 color=\"info\" >Não foi possível recuperar os dados de DFE. </h1> : \"\"}     */}\r\n            {uri &&\r\n              <div style={{ display: 'flex', justifyContent: 'center' }} >\r\n                <img \r\n                  src={uri}\r\n                  style={{ width: '60%', height: '100%' }} \r\n                />\r\n              </div>\r\n            }       \r\n          </div>\r\n          </ModalBody>\r\n        </Modal>\r\n    );\r\n};","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\table-elements\\Warning.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningDfeModal\\WarningDfeModal.js",["1361","1362","1363"],"import React from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Spinner,\r\n\r\n} from 'reactstrap';\r\n\r\n\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport readDfeData from \"axios/ReadDfeData\";\r\nimport ReadMdfeData from \"axios/ReadMdfeData\";\r\nimport useAsync from \"common/hooks/useAsync\";\r\nimport { Notification } from \"common/model/Notification\";\r\nimport MdfeTable from \"components/tables/MdfeTable\";\r\nimport BlankRowTable from \"components/tables/BlankRowTable\";\r\nimport NfeTable from \"components/tables/NfeTable\";\r\nimport CteTable from \"components/tables/CteTable\";\r\nimport CTE from \"common/model/Cte\";\r\nimport { CTE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { NFE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { NFE_TOTAL_VALUE } from \"common/model/Nfe\";\r\nimport { NFE_EMIT_CPF } from \"common/model/Nfe\";\r\nimport { NFE_EMIT_CNPJ } from \"common/model/Nfe\";\r\nimport { NFE_DEST_CNPJ } from \"common/model/Nfe\";\r\nimport { NFE_DEST_CPF } from \"common/model/Nfe\";\r\nimport { NFE_PLATE } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER1 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER3 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER4 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER5 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER2 } from \"common/model/Nfe\";\r\nimport { VEHICLE_PLATE } from \"common/model/Notification\";\r\nimport { MDFE_DOC } from \"common/model/Mdfe\";\r\nimport { ATF_LINK } from \"common/enviroment\";\r\nimport { NFE_KEY } from \"common/model/Nfe\";\r\n\r\n\r\n\r\nexport default function WarningDfeModal({ show, toggle, data, fetchData }) {\r\n  const { readDfeDataRequest } = readDfeData()\r\n\r\n  const { readMdfeDataRequest } = ReadMdfeData()\r\n\r\n  const [nfeData, setNfeData] = React.useState(null)\r\n  const [cteData, setCteData] = React.useState(null)\r\n  const [mdfeData, setMdfeData] = React.useState(null)\r\n  const [relevantNfes, setRelevantNfes] = React.useState(null)\r\n  const [relevantCtes, setRelevantCtes] = React.useState(null)\r\n\r\n  const notificationObj = new Notification(data)\r\n  const eventObj = notificationObj.getEvent()\r\n\r\n  const mdfeOfInterest = notificationObj.isMdfeNotification() ? notificationObj.getMdfeKey() : null\r\n  const nfeOfInterest = notificationObj.isNfeNotification() ? notificationObj.getNfeKey() : null\r\n  const cteOfInterest = notificationObj.isCteNotification() ? notificationObj.getCteKey() : null\r\n\r\n\r\n  const { loading, error, value } = useAsync(async () => {\r\n    if (isEmpty(data)) {\r\n      return\r\n    }\r\n\r\n    let res = await readDfeDataRequest(eventObj.getEventId())\r\n    if (!isEmpty(res) && Array.isArray(res)) {\r\n      setMdfeData(res[0])\r\n      setNfeData(res[1])\r\n    }\r\n\r\n    if (notificationObj.isMdfeNotification()) {\r\n      res = await readMdfeDataRequest(notificationObj.getMdfeKey())\r\n      if (!isEmpty(res) && Array.isArray(res)) {\r\n        setRelevantNfes(mountNfeData(res))\r\n      }\r\n    }\r\n\r\n  }, [fetchData]);\r\n\r\n\r\n  function mountFilter(dict, label, value, column, filterType, upperValue) {\r\n    if (value && value !== 0) {\r\n      dict[label] = { 'value': value, 'upperValue': upperValue, 'filterType': filterType, 'column': column }\r\n    }\r\n  }\r\n\r\n  function evalFilters(filters, nfe) {\r\n    let result = []\r\n\r\n    Object.values(filters).forEach(({ value, upperValue, column }) => {\r\n      //È um filtro de placa\r\n      if (data['filterType'] === 1) {\r\n        if (Array.isArray(column)) {\r\n\r\n          let plates = [value]\r\n          if (Array.isArray(value)) {\r\n            plates = value\r\n          }\r\n\r\n          let plate_result = false\r\n          for (const plate_value of plates) {\r\n            let plate = [nfe[NFE_PLATE], nfe[NFE_TRAILER1], nfe[NFE_TRAILER2], nfe[NFE_TRAILER3], nfe[NFE_TRAILER4], nfe[NFE_TRAILER5]].includes(plate_value)\r\n            plate_result = plate_result || plate\r\n          }\r\n\r\n          result.push(plate_result)\r\n        } else {\r\n          result.push(value === nfe[column])\r\n        }\r\n        //È um filtro greater than\r\n      } else if (data['filterType'] === 2) {\r\n        result.push(value <= nfe[column])\r\n        //È um filtro de intervalo\r\n      } else if (data['filterType'] === 3) {\r\n        result.push(value <= nfe[column] && nfe[column] <= upperValue)\r\n      }\r\n    })\r\n\r\n    return !isEmpty(result) && result.every(v => v === true)\r\n  }\r\n\r\n  function mountNfeData(mdfeCompleteData) {\r\n    let result = []\r\n    let filters = {}\r\n    let warningConfigObj = notificationObj.getWarningConfig()\r\n    if (isEmpty(warningConfigObj.getNfeUpperValue())) {\r\n      mountFilter(filters, NFE_LOWER_VALUE, warningConfigObj.getNfeLowerValue(), NFE_TOTAL_VALUE, 2)\r\n    } else {\r\n      mountFilter(filters, NFE_LOWER_VALUE, warningConfigObj.getNfeLowerValue(), NFE_TOTAL_VALUE, 3, warningConfigObj.getNfeUpperValue())\r\n    }\r\n\r\n    mountFilter(filters, NFE_EMIT_CPF, warningConfigObj.getCpfNfeIssuer(), NFE_EMIT_CPF, 1)\r\n    mountFilter(filters, NFE_EMIT_CNPJ, warningConfigObj.getCnpjNfeIssuer(), NFE_EMIT_CNPJ, 1)\r\n    mountFilter(filters, NFE_DEST_CNPJ, warningConfigObj.getCnpjRecipient(), NFE_DEST_CNPJ, 1)\r\n    mountFilter(filters, NFE_DEST_CPF, warningConfigObj.getCpfRecipient(), NFE_DEST_CPF, 1)\r\n    mountFilter(filters, VEHICLE_PLATE, warningConfigObj.getPlate(), [NFE_PLATE, NFE_TRAILER1, NFE_TRAILER2,\r\n      NFE_TRAILER3, NFE_TRAILER4, NFE_TRAILER5], 1)\r\n\r\n    if (!mdfeCompleteData[0] || !mdfeCompleteData[0][MDFE_DOC]) {\r\n      return result\r\n    }\r\n\r\n    for (let doc of mdfeCompleteData[0][MDFE_DOC]) {\r\n      let nfeData = doc['fatonfe']\r\n      if (!nfeData || !nfeData[NFE_KEY]) {\r\n        continue //pode ser uma cte, que ainda não é processada pelo sistema. Por isso, vem nula. \r\n      }\r\n      if (evalFilters(filters, nfeData)) {\r\n        result.push(nfeData)\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  function mountCteData(mdfeCompleteData) {\r\n    if (!mdfeCompleteData[0] || !mdfeCompleteData[0][MDFE_DOC])\r\n      return []\r\n\r\n    let result = []\r\n    let filters = {}\r\n    const warningConfigObj = notificationObj.getWarningConfig()\r\n\r\n    if (isEmpty(warningConfigObj.getNfeUpperValue()))\r\n      mountFilter(filters, CTE_LOWER_VALUE, warningConfigObj.getCteLowerValue(), CTE.VALUE, 2)\r\n    else\r\n      mountFilter(filters, CTE_LOWER_VALUE, warningConfigObj.getCteLowerValue(), CTE.VALUE, 3, warningConfigObj.getCteUpperValue())\r\n\r\n    mountFilter(filters, CTE.EMIT_CPF, warningConfigObj.getCpfCteIssuer(), CTE.EMIT_CPF, 1)\r\n    mountFilter(filters, CTE.EMIT_CNPJ, warningConfigObj.getCnpjCteIssuer(), CTE.EMIT_CNPJ, 1)\r\n    mountFilter(filters, CTE.DEST_CNPJ, warningConfigObj.getCnpjRecipient(), CTE.DEST_CNPJ, 1)\r\n    mountFilter(filters, CTE.DEST_CPF, warningConfigObj.getCpfRecipient(), CTE.DEST_CPF, 1)\r\n\r\n    for (let doc of mdfeCompleteData[0][MDFE_DOC]) {\r\n      let currentCteData = doc['fatocte']\r\n      if (!currentCteData || !currentCteData[CTE.KEY])\r\n        continue\r\n      if (evalFilters(filters, currentCteData)) {\r\n        result.push(currentCteData)\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal isOpen={show} toggle={toggle} size=\"xl\">\r\n      <ModalHeader toggle={toggle}>Lista de DFes Relacionadas ao Evento</ModalHeader>\r\n\r\n      <ModalBody>\r\n        {loading ? <Spinner color=\"info\" style={{ width: \"4.0rem\", height: \"4.0rem\", margin: '4.0rem' }} /> : \"\"}\r\n        {error ? <h1 color=\"info\" >Não foi possível recuperar os dados de DFE. </h1> : \"\"}\r\n        {!isEmpty(value) && (\r\n          <>\r\n            <br />\r\n            <small style={{ color: \"red\" }}>\r\n              Necessário estar logado no\r\n              <a\r\n                style={{ color: '#2322c8' }}\r\n                href={ATF_LINK}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                ATF\r\n              </a>\r\n              para acessar link\r\n            </small>\r\n          </>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {!isEmpty(mdfeData) && <MdfeTable data={mdfeData} headerText=\"Lista de MDFes no Veículo\" mdfeOfInterest={mdfeOfInterest} showBell loading={loading} />}\r\n          {!isEmpty(relevantNfes) && <BlankRowTable margin={20} />}\r\n          {!isEmpty(relevantNfes) && <NfeTable data={relevantNfes} headerText={`Lista de NFEs referenciadas no MDFE ${mdfeOfInterest} relevantes para o alerta`} loading={loading} />}\r\n          {!isEmpty(relevantCtes) && <CteTable data={relevantCtes} headerText={`Lista de CTEs referenciadas no MDFE ${mdfeOfInterest} relevantes para o alerta`} loading={loading} />}\r\n          {!isEmpty(mdfeData) && !isEmpty(nfeData) && <BlankRowTable margin={20} />}\r\n          {!isEmpty(nfeData) && <NfeTable data={nfeData} headerText=\"Lista de NFEs Avulsas no Veículo\" nfeOfInterest={nfeOfInterest} showBell loading={loading} />}\r\n          {!isEmpty(cteData) && <CteTable data={cteData} headerText=\"Lista de CTEs Avulsas no Veículo\" nfeOfInterest={cteOfInterest} showBell loading={loading} />}\r\n        </div>\r\n\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\enumerators\\FiltersEnum.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\format-data.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\ViewFiltersOptions.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\buttons\\DfeLink.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Dfe.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\DfeModal\\DfeModal.js",["1364"],"import React from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Spinner\r\n} from 'reactstrap';\r\n\r\nimport readDfeData from \"axios/ReadDfeData\";\r\n\r\n\r\nimport useAsync from \"common/hooks/useAsync\";\r\nimport MdfeTable from \"components/tables/MdfeTable\";\r\nimport NfeTable from \"components/tables/NfeTable\";\r\nimport CteTable from \"components/tables/CteTable\";\r\nimport BlankRowTable from \"components/tables/BlankRowTable\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { ATF_LINK } from \"common/enviroment\";\r\n\r\n\r\nexport default function DfeModal({ show, toggle, data, fetchData }) {\r\n  const { readDfeDataRequest } = readDfeData()\r\n\r\n  const [nfeData, setNfeData] = React.useState(null)\r\n  const [cteData, setCteData] = React.useState(null)\r\n  const [mdfeData, setMdfeData] = React.useState(null)\r\n\r\n  const { loading, error, value } = useAsync(async () => {\r\n    let event_id = data[\"event_id\"]\r\n    let res = await readDfeDataRequest(event_id)\r\n    if (!isEmpty(res) && Array.isArray(res)) {\r\n      setMdfeData(res[0])\r\n      setNfeData(res[1])\r\n    }\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <Modal isOpen={show} toggle={toggle} size=\"xl\">\r\n      <ModalHeader toggle={toggle}>\r\n        Lista de DFes\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        {loading ? <Spinner color=\"info\" style={{ width: \"4.0rem\", height: \"4.0rem\", margin: '4.0rem' }} /> : \"\"}\r\n        {error ? <h1 color=\"info\" >Não foi possível recuperar os dados de DFE. </h1> : \"\"}\r\n        {!isEmpty(value) && (\r\n          <>\r\n            <br/>\r\n            <small style={{color: \"red\"}}>\r\n              Necessário estar logado no\r\n              <a\r\n              style={{ color: '#2322c8' }}\r\n              href={ATF_LINK}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              >\r\n              ATF\r\n              </a>\r\n              para acessar link\r\n            </small>\r\n          </>\r\n        )}\r\n        <div className=\"content\">\r\n          {!isEmpty(mdfeData) && <MdfeTable data={mdfeData} headerText=\"Lista de MDFEs\" loading={loading} />}\r\n          {!isEmpty(mdfeData) && !isEmpty(nfeData) && <BlankRowTable margin={20} />}\r\n          {!isEmpty(nfeData) && <NfeTable data={nfeData} headerText=\"Lista de NFEs\" loading={loading} />}\r\n          {!isEmpty(cteData) && <CteTable data={cteData} headerText=\"Lista de CTEs\" loading={loading} />}\r\n        </div>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\DesignationPanel.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\FiscalActionPanel.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\EventPanel.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\ReportPanel.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\rules.js",["1365","1366","1367","1368","1369","1370","1371"],"import NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\"\r\nimport { getNotificationStatusLabel } from \"common/enumerators/NotificationStatus\"\r\nimport { REPORT_CPF_DRIVER } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_CPF } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_DATE } from \"common/model/Notification\"\r\nimport { FISCAL_NOTIFICATION_PARENT_ID } from \"common/model/Notification\"\r\nimport { HOMOLOGATION_AUDITOR } from \"common/model/Notification\"\r\nimport { MONITORING_USER_ID } from \"common/model/Notification\"\r\nimport { REPORT_DAR } from \"common/model/Notification\"\r\nimport { REPORT_PENALTY_VALUE } from \"common/model/Notification\"\r\nimport { REPORT_LATITUDE } from \"common/model/Notification\"\r\nimport { REPORT_PRODUCT_NAME } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_REPORT_DATE } from \"common/model/Notification\"\r\nimport { REPORT_ENABLED } from \"common/model/Notification\"\r\nimport { REPORT_LONGITUDE } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_IE } from \"common/model/Notification\"\r\nimport { REPORT_REVENUE_CODE } from \"common/model/Notification\"\r\nimport { REPORT_AI } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_REPORT } from \"common/model/Notification\"\r\nimport { VEHICLE_PLATE } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_CNPJ } from \"common/model/Notification\"\r\nimport { TRAILER_PLATE } from \"common/model/Notification\"\r\nimport { isEmpty } from \"common/utils/collections\"\r\nimport { compareArray } from \"common/utils/collections\"\r\nimport { validateCNPJ } from \"common/utils/validate\"\r\nimport { validateCPF } from \"common/utils/validate\"\r\n\r\n\r\nfunction cleanText(str) {\r\n  if (str) {\r\n    return str.replace(/\\D/g, '')\r\n  } else {\r\n    return str\r\n  }\r\n}\r\n\r\nexport const aiInput = {\r\n  placeholder: \"________.__.________/____-__\",\r\n  onChange: (state, setter) => e => {\r\n    const regex = /^\\d{8}[\\.]?\\d{2}[\\.]?\\d{8}[\\/]?\\d{4}[-]?\\d{2}$/\r\n    let value = e.target.value\r\n    if (value.length === 24 && regex.test(value))\r\n      setter(value.replace(/^(\\d{8})[\\.]?(\\d{2})[\\.]?(\\d{8})[\\/]?(\\d{4})[-]?(\\d{2})$/, \"$1.$2.$3/$4-$5\"))\r\n    else if (state && value.length < state.length) // Caso estiver apagando, não é necessário fazer a checagem de regex\r\n      setter(value)\r\n    else {\r\n      if (value.length === 9 || value.length === 12)  // Adicionando os . e - automaticamente\r\n        value = `${value.slice(0, -1)}.${value.slice(-1)}`\r\n      if (value.length === 21)\r\n        value = `${value.slice(0, -1)}/${value.slice(-1)}`\r\n      if (value.length === 26)\r\n        value = `${value.slice(0, -1)}-${value.slice(-1)}`\r\n      if (value === \"\" || /^\\d{1,8}(?:\\.\\d{1,2})?(?:\\.\\d{1,8})?(?:\\/\\d{1,4})?(?:-\\d{1,2})?$/.test(value))   // Finalmente testando o regex e atualizando\r\n        setter(value)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function validateData(obj) {\r\n\r\n    let result = []\r\n    if (!isEmpty(obj[TRAILER_PLATE]) && obj[TRAILER_PLATE].length < 7) {\r\n      result.push(\"Placa do reboque está inválida\\n\")\r\n    }\r\n  \r\n    if (!isEmpty(obj[REPORT_CPF_DRIVER]) && !validateCPF(cleanText(obj[REPORT_CPF_DRIVER]))) {\r\n      result.push(\"CPF do condutor está inválido\\n\")\r\n    }\r\n  \r\n    if (!isEmpty(obj[REPORT_BOOKED_CPF]) && !validateCPF(cleanText(obj[REPORT_BOOKED_CPF]))) {\r\n      result.push(\"CPF do autuado está inválido\\n\")\r\n    }\r\n  \r\n    if (!isEmpty(obj[REPORT_BOOKED_CNPJ]) && !validateCNPJ(cleanText(obj[REPORT_BOOKED_CNPJ]))) {\r\n      result.push(\"CNPJ do autuado está inválido\\n\")\r\n    }\r\n\r\n    // if (!isEmpty(obj.report_ai) && !validateCNPJ(cleanText(obj.report_ai))) {\r\n  //   result.push(\"Nº do AI está inválido\\n\")\r\n  // }\r\n\r\n    if (obj[FISCAL_ACTION_DATE][0] &&  obj[FISCAL_ACTION_DATE][0]){\r\n      const maxDate = new Date()\r\n      maxDate.setHours(0);\r\n      maxDate.setMinutes(1);\r\n      maxDate.setSeconds(0);\r\n\r\n      const date = new Date(`${obj[FISCAL_ACTION_DATE][0]}T${obj[FISCAL_ACTION_DATE][1]}`)\r\n      date.setHours(0);\r\n      date.setMinutes(0);\r\n      date.setSeconds(0);\r\n\r\n    if (date > maxDate) {\r\n      result.push(\"Data da Ação Fiscal não pode ser superior à data atual\\n\")\r\n    }\r\n\r\n  }\r\n\r\n  return result\r\n\r\n}\r\n\r\nexport function getNotificationMostRecentStatus(id, fiscal_notification_status, warningsViewed) {\r\n  let key = id.toString()\r\n  if (fiscal_notification_status > NOTIFICATION_STATUS_ENUM.VISUALIZADA) {\r\n    return getNotificationStatusLabel(fiscal_notification_status)\r\n  } else if (Object.keys(warningsViewed).includes(key)) {\r\n    return getNotificationStatusLabel(NOTIFICATION_STATUS_ENUM.VISUALIZADA)\r\n  } else {\r\n    return getNotificationStatusLabel(fiscal_notification_status)\r\n  }\r\n}\r\n\r\n  export function alowPropagateNotificationData(notification){\r\n    \r\n    //As propagação de um estado só deve acontecer caso a configuração que gerou o alerta estiver relacionada a uma condição de placa e se ela tiver um parent_id configurado. \r\n    // Caso contrário, deve não deve haver propagação\r\n    let vehiclePlate = notification[VEHICLE_PLATE]\r\n    if (!vehiclePlate){\r\n      return false\r\n    }\r\n\r\n    if (isEmpty(notification[FISCAL_NOTIFICATION_PARENT_ID])){\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\nexport function compareWithOldValues(formData, oldFormData) {\r\n\r\n    if (formData[FISCAL_ACTION_REPORT] === oldFormData[FISCAL_ACTION_REPORT] &&\r\n      compareArray(formData[FISCAL_ACTION_DATE], oldFormData[FISCAL_ACTION_DATE]) &&\r\n      formData[MONITORING_USER_ID] === oldFormData[MONITORING_USER_ID] &&\r\n      oldFormData[HOMOLOGATION_AUDITOR] === formData[HOMOLOGATION_AUDITOR] &&\r\n      compareArray(oldFormData[FISCAL_ACTION_AUDITORS], formData[FISCAL_ACTION_AUDITORS]) &&\r\n      formData[REPORT_AI] === oldFormData[REPORT_AI] &&\r\n      formData[REPORT_DAR] === oldFormData[REPORT_PRODUCT_NAME] &&\r\n      formData[REPORT_REVENUE_CODE] === oldFormData[REPORT_REVENUE_CODE] &&\r\n      formData[REPORT_PENALTY_VALUE] === oldFormData[REPORT_PENALTY_VALUE] &&\r\n      formData[TRAILER_PLATE] === oldFormData[TRAILER_PLATE] &&\r\n      formData[REPORT_CPF_DRIVER] === oldFormData[REPORT_CPF_DRIVER] &&\r\n      formData[REPORT_BOOKED_IE] === oldFormData[REPORT_BOOKED_IE] &&\r\n      formData[REPORT_BOOKED_CPF] === oldFormData[REPORT_BOOKED_CPF] &&\r\n      formData[REPORT_BOOKED_CNPJ] === oldFormData[REPORT_BOOKED_CNPJ] &&\r\n      formData[REPORT_LATITUDE] === oldFormData[REPORT_LATITUDE] &&\r\n      formData[REPORT_LONGITUDE] === oldFormData[REPORT_LONGITUDE] &&\r\n      formData[REPORT_PRODUCT_NAME] === oldFormData[REPORT_PRODUCT_NAME]) {\r\n      return true\r\n    }\r\n\r\n  return false\r\n}\r\n\r\n  export function hasEmptyValues(obj) {\r\n    let bookedData = isEmpty(obj[REPORT_AI]) || isEmpty(obj[REPORT_PRODUCT_NAME]) ||\r\n      isEmpty(obj[REPORT_REVENUE_CODE]) || isEmpty(obj[REPORT_PENALTY_VALUE]) ||\r\n      isEmpty(obj[VEHICLE_PLATE]) || isEmpty(obj[TRAILER_PLATE]) ||\r\n      isEmpty(obj[REPORT_CPF_DRIVER]) || isEmpty(obj[REPORT_BOOKED_IE]) ||\r\n      (isEmpty(obj[REPORT_BOOKED_CPF]) && isEmpty(obj[REPORT_BOOKED_CNPJ])) || //este aqui é um campo opcional ou preenche cpf ou cnpj\r\n      isEmpty(obj[REPORT_LATITUDE]) || isEmpty(obj[REPORT_LONGITUDE]) ||\r\n      isEmpty(obj[REPORT_PRODUCT_NAME]) ||\r\n      isEmpty(obj[HOMOLOGATION_AUDITOR])\r\n\r\n    let hasBookedData = obj[REPORT_ENABLED]\r\n\r\n    if (isEmpty(obj[FISCAL_ACTION_REPORT]) || isEmpty(obj[FISCAL_ACTION_DATE]) ||\r\n      isEmpty(obj[FISCAL_ACTION_AUDITORS]) || isEmpty(obj[MONITORING_USER_ID] ||\r\n        (hasBookedData && bookedData))\r\n    )\r\n      return true\r\n\r\n  return false\r\n}","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\format-data.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\constants.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\toDMS.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\image.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\HomologationPanel.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\DfeIssuanceModal\\DfeIssueanceModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadVehicleLocations.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadPoliceCarLocations.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\group\\Group.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\TableLoading.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSimpleInput.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Image.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\modals\\GroupsModal.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadMdfeData.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\NfeTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\CteTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\MdfeTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\axios\\ReadDfeData.js",["1372","1373","1374","1375"],"import axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport env from 'common/enviroment';\r\n\r\nimport { createBaseHttpRequestBody, createQueryHttpRequestBody, createSimpleFilterClause } from \"./AxiosUtils\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\n\r\nexport default function ReadDfeData() {\r\n\r\n  const NFE_KEY = 'infprot_chnfe'\r\n  const MDFE_KEY = 'protmdfe_infprot_chmdfe' \r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n\r\n  const getDfe = (data) => {\r\n    if (!isEmpty(data) && Array.isArray(data)){\r\n      return data[0]\r\n    }\r\n  }\r\n\r\n  const mountResult = (data, field) => {\r\n    \r\n    try{\r\n      let result = []\r\n\r\n      console.log(\"MDFE\", data)\r\n      for (const dfe of data){\r\n        console.log(\"MDFE1\", dfe)\r\n        console.log(\"MDFE2\", dfe[field])\r\n        result.push(dfe[field])\r\n      }\r\n      \r\n      return result\r\n\r\n    } catch (error) {\r\n      return error\r\n      \r\n    } \r\n    \r\n  }\r\n\r\n\r\n  const readEventMdfe = async (event_id) => {\r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"id_evento\", \"char\", \"equal\", event_id))\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    httpRequestBody['id'] = event_id\r\n    \r\n    let res = await axiosRetryProxy.post(`${env.apiAddress}/eventdocs/read_event_mdfe`, httpRequestBody).then(res => {\r\n      return res.data\r\n    }).catch(err => {\r\n      console.log(err)\r\n      return []\r\n    })\r\n    return res\r\n  }\r\n\r\n  const readEventNfe = async (event_id) => {\r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"id_evento\", \"char\", \"equal\", event_id))\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    httpRequestBody['id'] = event_id\r\n    \r\n    let res = await axiosRetryProxy.post(`${env.apiAddress}/eventdocs/read_event_nfe`, httpRequestBody).then(res => {\r\n      return res.data\r\n    }).catch(err => {\r\n      console.log(err)\r\n      return []\r\n    })\r\n    return res\r\n  }\r\n\r\n  const readDfeDataRequest = async (event_id) => {\r\n    \r\n    try{\r\n\r\n      let mdfeData = await readEventMdfe(event_id)\r\n      let nfeData = await readEventNfe(event_id)\r\n\r\n      let mdfe = mountResult(mdfeData, \"fato_mdfe\")\r\n      let nfe = mountResult(nfeData, \"fato_nfetransito\")\r\n\r\n      \r\n      return [mdfe, nfe]\r\n\r\n    } catch (error) {\r\n      return error\r\n      \r\n    } \r\n    \r\n  }\r\n\r\n    return { readDfeDataRequest }\r\n  }\r\n\r\n\r\n","C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\components\\tables\\BlankRowTable.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Cte.js",[],"C:\\Users\\rodri\\OneDrive\\Documentos\\cicc-app\\front-end\\src\\common\\model\\Nfe.js",[],"C:\\aria\\cicc-app\\front-end\\src\\index.js",[],["1376","1377"],"C:\\aria\\cicc-app\\front-end\\src\\context\\DashboardContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\context\\NavigationContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\App.js",[],"C:\\aria\\cicc-app\\front-end\\src\\context\\WarningsContext.js",["1378"],"C:\\aria\\cicc-app\\front-end\\src\\context\\GroupsContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\context\\VehicleContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\context\\AuditorsContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\context\\MapsContext.js",["1379"],"C:\\aria\\cicc-app\\front-end\\src\\context\\LoginContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\context\\WarningsUpdateContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\context\\ViewsContext.js",[],"C:\\aria\\cicc-app\\front-end\\src\\layouts\\Admin.js",["1380"],"C:\\aria\\cicc-app\\front-end\\src\\layouts\\Login.js",["1381","1382"],"C:\\aria\\cicc-app\\front-end\\src\\layouts\\Error.js",["1383","1384","1385","1386"],"C:\\aria\\cicc-app\\front-end\\src\\layouts\\WarningConfigHistory.js",["1387"],"C:\\aria\\cicc-app\\front-end\\src\\common\\enviroment.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\ErrorBoundary.js",[],"C:\\aria\\cicc-app\\front-end\\src\\layouts\\NotificationHistory.js",["1388"],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\GroupsEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\UserIdEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\StatusEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\GroupTypeEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\collections.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\SessionUtils.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\http\\configure-http.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\AxiosUtils.js",["1389","1390"],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\SeverityEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\routes.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\http\\create-http-agents.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\Sidebar.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\Footer.js",["1391"],"C:\\aria\\cicc-app\\front-end\\src\\components\\Navbar.js",[],"C:\\aria\\cicc-app\\front-end\\src\\layouts\\Loading.js",["1392"],"C:\\aria\\cicc-app\\front-end\\src\\views\\ViewsCreator.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\validate.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationStatus.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\forms.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\rules\\NotificationRules.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Camera.js",["1393"],"C:\\aria\\cicc-app\\front-end\\src\\views\\PoliceCars.js",["1394","1395","1396"],"C:\\aria\\cicc-app\\front-end\\src\\views\\Auditors.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Maps.js",["1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407"],"import React, { useMemo, useState } from 'react'\r\nimport { GoogleMap, Marker } from '@react-google-maps/api'\r\nimport { useJsApiLoader } from '@react-google-maps/api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ListGroup, ListGroupItem,\r\n  Spinner, Alert,\r\n  InputGroupText, InputGroup,\r\n} from \"reactstrap\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport TagsInput from \"components/tags/TagsInput\";\r\n\r\nimport mapOptions from 'common/mapOptions.js'\r\nimport env from 'common/enviroment.js'\r\nimport USER_ID_ENUM from 'common/enumerators/UserIdEnum'\r\n\r\nimport Table from 'components/tables/Table'\r\nimport Tabs from 'components/Tabs';\r\n\r\nimport MapLegend from 'components/MapLegend'\r\n\r\nimport { MapsContext } from 'context/MapsContext'\r\nimport { WarningsContext } from 'context/WarningsContext';\r\nimport { VehicleContext } from 'context/VehicleContext';\r\nimport { AuditorsContext } from 'context/AuditorsContext';\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\n\r\nimport { isLoggedIn } from 'common/SessionUtils';\r\nimport { getCortexToken } from 'common/SessionUtils';\r\nimport { getUserRole } from 'common/SessionUtils';\r\n\r\nimport WarningModal from 'components/modals/WarningModal/WarningModal';\r\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\r\nimport { getUserLogin } from 'common/SessionUtils';\r\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\r\nimport { isLocked } from 'common/enumerators/LockEnum';\r\nimport { isTreated } from 'common/enumerators/NotificationStatus';\r\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\r\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL  } from \"common/model/Notification\";\r\nimport { hasUserLoggedData } from 'common/SessionUtils';\r\nimport { getUserRegistrationID } from 'common/SessionUtils';\r\nimport { getUserID } from 'common/SessionUtils';\r\nimport { getUserName } from 'common/SessionUtils';\r\nimport { Notification } from \"common/model/Notification\";\r\nimport { isEmpty } from 'common/utils/collections';\r\nimport { getNowDateTimeString } from 'common/utils/validate';\r\nimport LocationTrackingModal from 'components/modals/LocationTrackingModal/LocationTrackingModal';\r\nimport useToggle from 'common/hooks/useToogle';\r\nimport { useModalWithData } from 'common/hooks/useModalWithData';\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\n\r\n\r\n\r\nexport default function Maps(props) {\r\n\r\n  const body = {\r\n    'cortex_token': getCortexToken(),\r\n    'role': getUserRole()\r\n  }\r\n\r\n  const history = useHistory()\r\n\r\n  const { setplaca } = React.useContext(VehicleContext)\r\n  const { warnings, traffic, changeVisto, printIsMap, startSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n  const { getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const { activeCameras, pointsData, setPointsData, getCamerasData } = React.useContext(MapsContext);\r\n  const { warningsViewed , setWarningsViewed} = React.useContext(WarningsUpdateContext)\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n\r\n  //const [modalMaps, setModalMaps] = React.useState(false)\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n  const [index, setIndex] = useState(0)\r\n  //const toggleMapsModal = () => setModalMaps(!modalMaps)\r\n\r\n  const [modalPlaca, setModalPlaca] = React.useState(false)\r\n  const toggleModalPlaca = () => setModalPlaca(!modalPlaca)\r\n\r\n\r\n  const [warningModalData, setWarningModalData] = React.useState({})\r\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA)\r\n  const [activeModal, setActiveModal] = React.useState(-1)\r\n  const toggleModal = (i = -1) => {\r\n    setActiveModal(i)\r\n  }\r\n  const [reload, setReload] = React.useState(false)\r\n  const toggleReload = () => setReload(!reload)\r\n\r\n  const [fetchDataFlag, toggleFetchData] = useToggle(false)\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [selectedFilter, setSelectedFilter] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isSearchEnabled, setIsSearchEnabled] = useState(false);\r\n  const [searchInputColor, setSearchInputColor] = useState('');\r\n  const [data, setData] = useState([]);\r\n  \r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  const { isLoaded: googleMapLoaded, loadError : googleMapError } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: env.googleApiKey\r\n  })\r\n\r\n\r\n  const [typeCameraFilters, setTypeCameraFilters] = React.useState({\r\n    'DNIT': true,\r\n    'PRF': true,\r\n    'SEMOB': true,\r\n    'Estadual': true\r\n  })\r\n\r\n  const filterOptions = [\r\n    {value: 'passagem' , label:'Passagem'},\r\n    {value: 'local', label:'Local'},\r\n    {value: 'uf', label:'UF'},\r\n    {value: 'placa', label:'Placa'},\r\n    {value: 'veiculo', label:'Veículo'},\r\n    {value: 'modelo', label:'Modelo'},\r\n    {value: 'alerta', label:'Alerta'}\r\n  ];\r\n\r\n  const displayLegend = {\r\n    \"DNIT\": \"DNIT\",\r\n    \"EQUIPAMENTOS PRF\": \"PRF\",\r\n    \"Pontos Estado\": \"ESTADO\"\r\n    //\"SUGESTÕES\": \"SUGESTÕES\"\r\n  }\r\n\r\n  const colors = {\r\n    \"DNIT\": \"#0f9d58\",\r\n    \"EQUIPAMENTOS PRF\": \"#0288d1\",\r\n    \"Pontos Estado\": \"#ffd600\"\r\n    //\"SUGESTÕES\": \"#801e0f\"\r\n  }\r\n  const categories = Object.keys(colors)\r\n  const [activeMarkers, setActiveMarkers] = React.useState(new Array(categories.length))\r\n\r\n  const titleCase = (text) => {\r\n    return text.toLowerCase()\r\n      .split(' ')\r\n      .map((word) => {\r\n        return word[0].toUpperCase() + word.slice(1);\r\n      }).join(' ')\r\n  }\r\n  \r\n  const handleFilterChange = (value) => {\r\n    setSelectedFilter(value);\r\n    setIsSearchEnabled(true);\r\n    console.log(`Filtro selecionado: ${value}`);\r\n  };\r\n  \r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    setIsSearchEnabled(event.target.value.length > 0);\r\n  };\r\n  \r\n  const handlePlusButtonClick = () => {\r\n    setSearchInputColor(searchTerm? '' : 'red');\r\n    const filteredData = data.filter(item => {\r\n      if (!selectedFilter) return true;\r\n      return item.nome === selectedFilter;\r\n    });\r\n    \r\n    const searchedData = filteredData.filter(item =>{\r\n      if(!searchTerm)return true;\r\n      return item.nome.toLowerCase().includes(searchTerm.toLowerCase());\r\n    });\r\n    setData(searchedData);\r\n  };\r\n  \r\n\r\n\r\n  const ChangeKey = (nome) => {\r\n\r\n    let mudar = []\r\n\r\n    nome.split('').forEach((letra, index) => {\r\n      if (nome[index] === `${nome[index].toUpperCase()}`) {\r\n        mudar.push(nome[index])\r\n\r\n      }\r\n    })\r\n\r\n    mudar.forEach(function (letra) {\r\n      nome = nome.replace(`${letra}`, ` ${letra.toLowerCase()}`)\r\n    })\r\n\r\n    return titleCase(nome)\r\n\r\n  }\r\n\r\n  const pointClick = (index) => {\r\n    return () => {\r\n      let points = [...pointsData]\r\n\r\n      points[index] = {\r\n        ...points[index],\r\n        active: !points[index].active\r\n      }\r\n\r\n      setPointsData(points)\r\n    }\r\n  }\r\n\r\n  const markerClick = (index) => () => {\r\n    let markers = [...activeMarkers]\r\n\r\n    markers[index] = !markers[index]\r\n\r\n    setActiveMarkers(markers)\r\n  }\r\n\r\n  //verificar props do container\r\n  //Aparentemente tem um valor 'auto' para ajustar automaticamente o tamanho da altura para caber\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: 'auto'\r\n  };\r\n\r\n  const setEditionDataOLD = (warning, data) => {\r\n\r\n    const auditorData = getAuditorRegistry(getUserLogin(), USER_ID_ENUM.USER_LOGIN);\r\n\r\n    if (warning) {\r\n\r\n      if (warning['fiscal_action_auditors']) {\r\n        let auditors = {}\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_NAME)\r\n        }\r\n        data[\"fiscal_action_auditors\"] = auditors\r\n      }\r\n\r\n\r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_report_auditor\"], USER_ID_ENUM.USER_ID)\r\n      if (monitoringAuditor && Object.keys(monitoringAuditor).length > 0) {\r\n        data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n        data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n        data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n\r\n      } else {\r\n        data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n        if (auditorData) {\r\n          data[\"monitoring_user_registration_id\"] = auditorData.user_registration_id\r\n          data[\"monitoring_user_id\"] = auditorData.user_id\r\n          data[\"monitoring_user_name\"] = auditorData.user_name\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return data\r\n\r\n  }\r\n\r\n  const setEditionData = (warning, data) => {\r\n    \r\n\r\n    if (!warning)\r\n      return data\r\n\r\n    \r\n    let status = warning.fiscal_notification_status\r\n    data['fiscal_action_designation_report'] = isEmpty(warning['fiscal_action_designation_report']) ? \"\" :  warning['fiscal_action_designation_report']\r\n    //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS. \r\n    if (isTreated(warning) || isLocked(warning) ) {\r\n      \r\n      if (!isEmpty(warning.fiscal_action_auditors)) {\r\n        let homologationAuditor = getAuditorRegistry(warning[\"fiscal_action_homologation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n        data[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id']\r\n      }\r\n      \r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_designation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n      data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n      data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n      data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n      data[\"monitoring_user_login\"] = monitoringAuditor['user_login']\r\n\r\n      data[\"fiscal_action_designation_date\"] = getNowDateTimeString()\r\n      data[\"fiscal_action_designation_auditor\"] = monitoringAuditor['user_name']\r\n      \r\n      let auditors = {}\r\n      \r\n      //Tratamento para os casos de designação sem comando fiscal. \r\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO ) {\r\n        auditors[EM_MONITORAMENTO] = { 'user_name': EM_MONITORAMENTO_LABEL, 'user_login': EM_MONITORAMENTO_LABEL }\r\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA ) {\r\n        auditors[SEM_COMANDO_FISCAL] = { 'user_name': SEM_COMANDO_FISCAL_LABEL, 'user_login': SEM_COMANDO_FISCAL_LABEL }\r\n      } else if (warning['fiscal_action_auditors']) {\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN)\r\n        }\r\n      }\r\n      data[\"fiscal_action_auditors\"] = auditors\r\n\r\n    } else {\r\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA E O LOCK ESTÁ DESATIVADO, TODOS OS CAMPOS ESTÃO VAZIOS E O USUÁRIO LOGADO PASSARÁ A SER RESPONSÁVEL PELO MONITORAMENTO\r\n      data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n      if (hasUserLoggedData()) {\r\n        data[\"monitoring_user_registration_id\"] = getUserRegistrationID()\r\n        data[\"monitoring_user_id\"] = getUserID()\r\n        data[\"monitoring_user_name\"] = getUserName()\r\n        data[\"monitoring_user_login\"] = getUserLogin()\r\n      }\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  const openWarningModal = (warning) => {\r\n\r\n\r\n    let data = { ...DESIGNATION_FORM_DATA, fiscal_action_auditors: {} }\r\n    let notificationObj = new Notification(warning)\r\n    setFormData(setEditionData(warning, data))\r\n\r\n    setWarningModalData(notificationObj);\r\n\r\n    toggleModal(0);\r\n\r\n  }\r\n\r\n  const openMapModal = (plate, location) => {\r\n    let modalData = {\r\n      plate: plate,\r\n      location : location\r\n\r\n    }\r\n      setModalData(modalData)\r\n      toggleModalOn(MODAL_TYPE_ENUM.MAP, modalData)\r\n      toggleFetchData()\r\n  }\r\n\r\n  const Local = (props) => {\r\n\r\n    if (props && props.event_json) {\r\n\r\n      let placa = props.event_json['evento_infevento_nrplaca']\r\n      let local = props.event_json['evento_infevento_dsreflocal']\r\n\r\n      return (\r\n        <>\r\n          <div\r\n            className={props.location !== \"null\" && \"underlined_text\"}\r\n            onClick={() => { openMapModal(placa, local) }}\r\n            style={{ cursor: props.location !== \"null\" && \"pointer\", color: '#2322c8' }}\r\n          >\r\n            {props.location}\r\n          </div>\r\n        </>\r\n      )\r\n    } else {\r\n      return \"-\"\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n      printIsMap();\r\n      getCamerasData();\r\n      changeVisto();\r\n      if (wasReloaded) {\r\n        startSSE()\r\n\r\n        setWasReloaded(false)\r\n        setWasReloaded(false)\r\n      }\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n    testAndUnlockWarning(warningsViewed, setWarningsViewed)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    setIndex(0)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabIndex])\r\n\r\n  const FilterEvent = (data_row, field_to_filter) => {\r\n\r\n    if (data_row[field_to_filter].includes('_LPD')) {\r\n\r\n      if (typeCameraFilters.DNIT) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('BR')) {\r\n\r\n      if (typeCameraFilters.PRF) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('PB')) {\r\n      if (typeCameraFilters.Estadual) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (!typeCameraFilters.SEMOB) {\r\n\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n  const createMapModal = useMemo(() => <LocationTrackingModal show={isModalActive}  googleMapOnLoad={googleMapLoaded} googleMapOnError={googleMapError} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag} />, [modalData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            {googleMapError && <div>Não foi possível carregar o GoogleMap.</div>}\r\n            {(googleMapLoaded) ? <Card className=\"card-plain\">\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: \"relative\", overflow: \"hidden\", display: \"flex\" }}\r\n                  >\r\n                    <MapLegend categories={categories} colors={colors} activeCategories={activeMarkers} onClick={markerClick} display={displayLegend} />\r\n                    <GoogleMap\r\n                      mapContainerStyle={containerStyle}\r\n                      center={props.center}\r\n                      zoom={props.zoom}\r\n                      options={mapOptions}\r\n                    >\r\n                      {activeCameras.filter(point => {\r\n                        return !activeMarkers[categories.indexOf(point['category'])]\r\n                      }).map((point, index) => (\r\n                        //Marcação passando ícone\r\n                        <Marker\r\n                          className=\"map-icon\"\r\n                          key={`marker-${index}`}\r\n                          position={{ lat: point['nrlatitude'], lng: point['nrlongitude'] }}\r\n                          onClick={pointClick(index)}\r\n                          zIndex={pointsData[index].active ? categories.length + 1 : categories.length - categories.indexOf(point['category'])}\r\n                          options={{\r\n                            icon: {\r\n                              url: `https://ik.imagekit.io/exi1dv80wm/pin/${pointsData[index].active ? '00ff00' : colors[point['category']].slice(-6)}.png`,\r\n                              scaledSize: {\r\n                                height: 26,\r\n                                width: 21\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </GoogleMap>\r\n\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            : \"\"}\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n                        \r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Tabs names={['Tabela de alertas', 'Tabela de tráfego']} index={[tabIndex, setTabIndex]} />\r\n            <Card style={{ borderTopLeftRadius: '0px' }}>\r\n              <CardBody>\r\n                <InputGroup>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.Estadual}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'Estadual': event.target.checked })}\r\n                    />\r\n                    Estadual\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.PRF}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'PRF': event.target.checked })}\r\n                    />\r\n                    PRF\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.DNIT}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'DNIT': event.target.checked })}\r\n                    />\r\n                    DNIT\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.SEMOB}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'SEMOB': event.target.checked })}\r\n                    />\r\n                    SEMOB\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                <TagsInput\r\n                  onFilterChange={handleFilterChange}\r\n                  onSearchChange={handleSearchChange}\r\n                  onPlusButtonClick={handlePlusButtonClick}\r\n                  searchTerm={searchTerm}\r\n                  isSearchEnabled={isSearchEnabled}\r\n                  searchInputColor={searchInputColor}\r\n                  columns={{\r\n                    \"Alerta\": {\r\n                      field: \"nome\"\r\n                    },\r\n                    \"Passagem\":{\r\n                      field: \"evento_infevento_dhregpassagem\"\r\n                    },\r\n                    \"Local\":{\r\n                      field: \"evento_infevento_dsreflocal\"\r\n                    },\r\n                    \"UF\":{\r\n                      field:\"evento_infevento_sguf\"\r\n                    },\r\n                    \"Placa\":{\r\n                      field:\"evento_infevento_nrplaca\"\r\n                    },\r\n                    \"Veículo\":{\r\n                      field:\"evento_infevento_dstipoveiculo\"\r\n                    },\r\n                    \"Modelo\":{\r\n                      field:\"evento_infevento_nomarcamodelo\"\r\n                    }\r\n                  }}\r\n                />\r\n                <Card>\r\n                  <CardBody>\r\n                    {tabIndex === 0 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={warnings.filter(warning => FilterEvent(warning, 'evento_infevento_dsreflocal'))}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        pageSize={10}\r\n                        columns={{\r\n                          \"Alerta\": {\r\n                            Func: (props) =>\r\n                              <p                                \r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"nome\"\r\n                          },\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data).toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateObj[0]}<br />{dateObj[1]}</div>\r\n                            },\r\n                            args: \"evento_infevento_dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => {\r\n                              return (\r\n                                <Local location={props.data} event_json={props.row_data} />\r\n                              )\r\n                            },\r\n                            args: \"evento_infevento_dsreflocal\"\r\n                          },\r\n                          \"UF\": \"evento_infevento_sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) =>\r\n                              <p\r\n                                className='links-table'\r\n                                onClick={() => { setModalData(props.row_data); toggleModalPlaca() }}\r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"evento_infevento_nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"evento_infevento_dstipoveiculo\",\r\n                          \"Modelo\": \"evento_infevento_nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {tabIndex === 1 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={traffic.filter(event => FilterEvent(event, 'dsreflocal'))}\r\n                        pageSize={100}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        style={{ fontSize: '0.8rem' }}\r\n                        columns={{\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data)\r\n                              const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateHour[0]}<br />{dateHour[1]}</div>\r\n                            },\r\n                            args: \"dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => <Local location={props.data} event_json={props.row_data} />,\r\n                            args: \"dsreflocal\"\r\n                          },\r\n                          \"UF\": \"sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) => {\r\n                              const [modal, setModal] = React.useState(false);\r\n                              const [dataVehicle, setdataVehicle] = React.useState([])\r\n                              const [isErroInPost, setisErroInPost] = React.useState(false)\r\n\r\n                              const ToVehicleRoute = () => {\r\n                                setplaca(props.data)\r\n                              }\r\n\r\n                              const closeModalVehicle = () => {\r\n                                setModal(false)\r\n                              }\r\n\r\n                              function sleep(time) {\r\n                                return new Promise((resolve) => setTimeout(resolve, time));\r\n                              }\r\n\r\n                              const toggleModal = () => {\r\n                                setisErroInPost(false)\r\n                                axiosRetryProxy.post(`${env.apiAddress}/cortex/license/${props.data}`, body).then(res => {\r\n                                  let data_consulta = []\r\n                                  sleep(2000).then(() => {\r\n                                    // Do something after the sleep!\r\n                                    Object.entries(res.data).forEach(([key, value]) => {\r\n\r\n                                      if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\"\r\n                                        || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\"\r\n                                        || key === \"municipioPlaca\") {\r\n                                        data_consulta.push({\r\n                                          \"chave\": key ? ChangeKey(key) : '',\r\n                                          \"valor\": value ? value : ''\r\n                                        })\r\n                                      }\r\n                                    })\r\n                                    setdataVehicle(data_consulta)\r\n                                  });\r\n\r\n                                }).catch((err) => {\r\n                                  sleep(1000).then(() => {\r\n                                    setisErroInPost(true)\r\n                                  });\r\n\r\n                                }).finally(() => {\r\n                                  sleep(1000).then(() => {\r\n                                    setModal(true);\r\n                                  });\r\n\r\n                                })\r\n                              }\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    className=\"underlined_text\"\r\n                                    onClick={toggleModal}\r\n                                    style={{ textAlign: 'center', cursor: \"pointer\" }}\r\n                                  >\r\n                                    {props.data}\r\n                                  </div>\r\n\r\n                                  <Modal isOpen={modal} toggle={toggleModal}>\r\n                                    <ModalHeader toggle={closeModalVehicle}>{`Placa ${props.data}`}</ModalHeader>\r\n                                    <ModalBody>\r\n                                      <ListGroup>\r\n                                        {\r\n                                          (dataVehicle.length && Array.isArray(dataVehicle)) ?\r\n                                            dataVehicle.map((dados, index) => (\r\n                                              <ListGroupItem key={index} className=\"justify-content-between\">\r\n                                                <Row>\r\n                                                  <Col>\r\n                                                    <b>{dados.chave}</b>\r\n                                                  </Col>\r\n                                                  <Col>\r\n                                                    {dados.valor}\r\n                                                  </Col>\r\n                                                </Row>\r\n                                              </ListGroupItem>\r\n                                            ))\r\n                                            :\r\n                                            isErroInPost ?\r\n                                              <Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Alert color=\"danger\">\r\n                                                    Error !\r\n                                                  </Alert>\r\n                                                </Col>\r\n                                              </Row>\r\n                                              :\r\n                                              <Row Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Spinner color=\"info\" />\r\n                                                </Col>\r\n                                              </Row>\r\n                                        }\r\n                                      </ListGroup>\r\n                                      {Array.isArray(dataVehicle) && dataVehicle.length > 0 &&\r\n                                        <Row>\r\n                                          <hr></hr>\r\n                                          <Button color=\"primary\" className=\"btn-md\" onClick={ToVehicleRoute}>\r\n                                            Mais Informações\r\n                                          </Button>\r\n                                        </Row>\r\n                                      }\r\n                                    </ModalBody>\r\n                                  </Modal>\r\n                                </>\r\n                              )\r\n                            },\r\n                            args: \"nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"dstipoveiculo\",\r\n                          \"Modelo\": \"nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {activeModal === 0 &&\r\n                      <WarningModal\r\n                        show={true} data={warningModalData} formData={formData} editionMode={false}\r\n                        setFormData={setFormData} toggle={() => toggleModal(-1)} reloadMethod={toggleReload} spinner={spinner}\r\n                      />\r\n                    }\r\n                    {\r\n                      <Modal isOpen={modalPlaca} toggle={toggleModalPlaca}>\r\n                        <ModalHeader toggle={toggleModalPlaca}>{`Placa ${modalData['nrplaca']}}`}</ModalHeader>\r\n                        <ModalBody style={{ justifyContent: 'center', alignContent: 'center', display: 'flex' }}>\r\n                          {/*<img alt=\"Foto da placa\" src=\"https://i.ytimg.com/vi/lmVlZbmNgGw/hqdefault.jpg\" />*/}\r\n                        </ModalBody>\r\n                      </Modal>\r\n                    }\r\n                  </CardBody>\r\n                </Card>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      {modalType === MODAL_TYPE_ENUM.MAP && createMapModal}\r\n    </>\r\n  );\r\n}\r\n\r\nMaps.defaultProps = {\r\n  center: {\r\n    lat: -7.254653852199306,\r\n    lng: -36.69661154766497\r\n  },\r\n  zoom: 4\r\n}\r\n","C:\\aria\\cicc-app\\front-end\\src\\views\\Groups.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\mask.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Companys.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Status.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Vehicles.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\DfeIssuance.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\Traffic.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Notification\\Notifications.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\ModalConsts.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\MessageModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\Warnings.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\bell\\NotificationBell.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\bell\\PendingBell.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\MaskEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\errorTreatment.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\LockEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\mapOptions.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Notification.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficDfeTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\ModalTypeEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\RevisionModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\ConfirmationModal .js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\panels\\WarningConfigPanel.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\filters.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Warnings\\utils\\format-data.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\filters.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Notification\\utils\\format-data.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Notification\\utils\\filters.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\Table.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useAsync.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\TrafficNoDfeTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadNotificationPendingJobs.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\LocationTrackingModal\\LocationTrackingModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\tables\\WarningTable.js",["1408","1409"],"C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\Severity.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\MdfeWarningTable.js",["1410","1411"],"C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\tables\\NfeWarningTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\WarningConfig.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\rules\\WarningConfigRules.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useModalWithData.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Traffic\\utils\\filters.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\Tabs.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\ConfigTypeEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Event.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useNotification.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\TagsInput.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\EditionButtons.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningConfigModal\\WarningConfigModal.js",["1412","1413"],"C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useToogle.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\SimpleMapModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\NoficationActionButtons.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\NotificationTypeEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationPendingModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\SuspensionModal\\SuspensionModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningClosingModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\HomologationModal.js",["1414","1415","1416"],"C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\ModalEditionButtons.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadNearClosingWarningConfig.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\Pagination.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\VehicleModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NearClosingWarningModal\\NearClosingWarningModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\DfeLink.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\constants.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\NotificationModal.js",["1417"],"C:\\aria\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelector.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficLastLocations.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\TrafficTimestamp.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\Plate.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\DfeModal\\DfeModal.js",["1418"],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\WarningModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\MapLegend.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\WarningTagsInput.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\format-data.js",[],"C:\\aria\\cicc-app\\front-end\\src\\views\\Issuance\\utils\\filters.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\filterPresets.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\group\\GroupsInput.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\SelectableTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\hooks\\useAbortController.js",["1419"],"C:\\aria\\cicc-app\\front-end\\src\\components\\buttons\\PauseButton.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\utils\\getRandomImage.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Dfe.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\Warning.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\TrafficImageModal\\TrafficImageModal.js",["1420","1421"],"C:\\aria\\cicc-app\\front-end\\src\\components\\ViewFiltersOptions.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSelectorItem.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\User.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningModal\\utils\\format-data.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\DesignationPanel.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\EventPanel.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\FiscalActionPanel.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\ReportPanel.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\panels\\HomologationPanel.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tags\\Tag.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Mdfe.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\enumerators\\FiltersEnum.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\image.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\constants.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\format-data.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\NotificationModal\\utils\\rules.js",["1422","1423","1424","1425","1426","1427","1428"],"C:\\aria\\cicc-app\\front-end\\src\\components\\table-elements\\WarningDfe.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\DfeIssuanceModal\\DfeIssueanceModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadVehicleLocations.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadPoliceCarLocations.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\TableLoading.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\WarningDfeModal\\WarningDfeModal.js",["1429","1430","1431"],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\AuditorFindModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\group\\Group.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\toDMS.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\BlankRowTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\auditor\\AuditorSimpleInput.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\NfeTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\CteTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\components\\tables\\MdfeTable.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Image.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadDfeData.js",["1432","1433","1434","1435"],"C:\\aria\\cicc-app\\front-end\\src\\components\\modals\\GroupsModal.js",[],"C:\\aria\\cicc-app\\front-end\\src\\axios\\ReadMdfeData.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Cte.js",[],"C:\\aria\\cicc-app\\front-end\\src\\common\\model\\Nfe.js",[],{"ruleId":"1436","severity":1,"message":"1437","line":30,"column":24,"nodeType":"1438","messageId":"1439","endLine":30,"endColumn":39},{"ruleId":"1440","severity":1,"message":"1441","line":44,"column":6,"nodeType":"1442","endLine":44,"endColumn":8,"suggestions":"1443"},{"ruleId":"1436","severity":1,"message":"1444","line":22,"column":8,"nodeType":"1438","messageId":"1439","endLine":22,"endColumn":14},{"ruleId":"1436","severity":1,"message":"1445","line":72,"column":11,"nodeType":"1438","messageId":"1439","endLine":72,"endColumn":25},{"ruleId":"1436","severity":1,"message":"1446","line":73,"column":11,"nodeType":"1438","messageId":"1439","endLine":73,"endColumn":27},{"ruleId":"1436","severity":1,"message":"1447","line":2,"column":26,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":36},{"ruleId":"1436","severity":1,"message":"1448","line":2,"column":38,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":47},{"ruleId":"1436","severity":1,"message":"1449","line":2,"column":59,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":69},{"ruleId":"1436","severity":1,"message":"1450","line":2,"column":71,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":78},{"ruleId":"1436","severity":1,"message":"1451","line":26,"column":15,"nodeType":"1438","messageId":"1439","endLine":26,"endColumn":22},{"ruleId":"1436","severity":1,"message":"1451","line":25,"column":15,"nodeType":"1438","messageId":"1439","endLine":25,"endColumn":22},{"ruleId":"1452","severity":1,"message":"1453","line":235,"column":5,"nodeType":"1454","messageId":"1455","endLine":242,"endColumn":8},{"ruleId":"1456","severity":1,"message":"1457","line":239,"column":9,"nodeType":"1458","messageId":"1459","endLine":241,"endColumn":19},{"ruleId":"1440","severity":1,"message":"1460","line":78,"column":6,"nodeType":"1442","endLine":78,"endColumn":20,"suggestions":"1461"},{"ruleId":"1462","severity":1,"message":"1463","line":7,"column":7,"nodeType":"1464","endLine":7,"endColumn":46},{"ruleId":"1436","severity":1,"message":"1465","line":71,"column":10,"nodeType":"1438","messageId":"1439","endLine":71,"endColumn":17},{"ruleId":"1436","severity":1,"message":"1466","line":95,"column":10,"nodeType":"1438","messageId":"1439","endLine":95,"endColumn":23},{"ruleId":"1436","severity":1,"message":"1467","line":95,"column":25,"nodeType":"1438","messageId":"1439","endLine":95,"endColumn":41},{"ruleId":"1436","severity":1,"message":"1468","line":112,"column":9,"nodeType":"1438","messageId":"1439","endLine":112,"endColumn":24},{"ruleId":"1436","severity":1,"message":"1469","line":80,"column":19,"nodeType":"1438","messageId":"1439","endLine":80,"endColumn":29},{"ruleId":"1436","severity":1,"message":"1470","line":193,"column":9,"nodeType":"1438","messageId":"1439","endLine":193,"endColumn":26},{"ruleId":"1436","severity":1,"message":"1471","line":286,"column":9,"nodeType":"1438","messageId":"1439","endLine":286,"endColumn":25},{"ruleId":"1440","severity":1,"message":"1472","line":394,"column":224,"nodeType":"1442","endLine":394,"endColumn":235,"suggestions":"1473"},{"ruleId":"1436","severity":1,"message":"1474","line":24,"column":10,"nodeType":"1438","messageId":"1439","endLine":24,"endColumn":24},{"ruleId":"1436","severity":1,"message":"1475","line":25,"column":10,"nodeType":"1438","messageId":"1439","endLine":25,"endColumn":23},{"ruleId":"1436","severity":1,"message":"1476","line":24,"column":22,"nodeType":"1438","messageId":"1439","endLine":24,"endColumn":34},{"ruleId":"1436","severity":1,"message":"1477","line":248,"column":9,"nodeType":"1438","messageId":"1439","endLine":248,"endColumn":30},{"ruleId":"1436","severity":1,"message":"1478","line":69,"column":10,"nodeType":"1438","messageId":"1439","endLine":69,"endColumn":14},{"ruleId":"1479","severity":1,"message":"1480","line":525,"column":69,"nodeType":"1464","endLine":525,"endColumn":159},{"ruleId":"1436","severity":1,"message":"1481","line":8,"column":8,"nodeType":"1438","messageId":"1439","endLine":8,"endColumn":18},{"ruleId":"1436","severity":1,"message":"1482","line":9,"column":10,"nodeType":"1438","messageId":"1439","endLine":9,"endColumn":26},{"ruleId":"1436","severity":1,"message":"1483","line":10,"column":10,"nodeType":"1438","messageId":"1439","endLine":10,"endColumn":24},{"ruleId":"1479","severity":1,"message":"1480","line":618,"column":33,"nodeType":"1464","endLine":618,"endColumn":123},{"ruleId":"1440","severity":1,"message":"1484","line":35,"column":6,"nodeType":"1442","endLine":35,"endColumn":8,"suggestions":"1485"},{"ruleId":"1436","severity":1,"message":"1450","line":6,"column":5,"nodeType":"1438","messageId":"1439","endLine":6,"endColumn":12},{"ruleId":"1462","severity":1,"message":"1463","line":28,"column":17,"nodeType":"1464","endLine":31,"endColumn":19},{"ruleId":"1436","severity":1,"message":"1486","line":47,"column":19,"nodeType":"1438","messageId":"1439","endLine":47,"endColumn":29},{"ruleId":"1436","severity":1,"message":"1487","line":50,"column":24,"nodeType":"1438","messageId":"1439","endLine":50,"endColumn":39},{"ruleId":"1436","severity":1,"message":"1488","line":156,"column":12,"nodeType":"1438","messageId":"1439","endLine":156,"endColumn":24},{"ruleId":"1436","severity":1,"message":"1486","line":25,"column":19,"nodeType":"1438","messageId":"1439","endLine":25,"endColumn":29},{"ruleId":"1436","severity":1,"message":"1489","line":13,"column":10,"nodeType":"1438","messageId":"1439","endLine":13,"endColumn":35},{"ruleId":"1490","severity":1,"message":"1491","line":41,"column":27,"nodeType":"1492","messageId":"1493","endLine":41,"endColumn":28,"suggestions":"1494"},{"ruleId":"1490","severity":1,"message":"1491","line":41,"column":37,"nodeType":"1492","messageId":"1493","endLine":41,"endColumn":38,"suggestions":"1495"},{"ruleId":"1490","severity":1,"message":"1496","line":41,"column":47,"nodeType":"1492","messageId":"1493","endLine":41,"endColumn":48,"suggestions":"1497"},{"ruleId":"1490","severity":1,"message":"1491","line":44,"column":38,"nodeType":"1492","messageId":"1493","endLine":44,"endColumn":39,"suggestions":"1498"},{"ruleId":"1490","severity":1,"message":"1491","line":44,"column":50,"nodeType":"1492","messageId":"1493","endLine":44,"endColumn":51,"suggestions":"1499"},{"ruleId":"1490","severity":1,"message":"1496","line":44,"column":62,"nodeType":"1492","messageId":"1493","endLine":44,"endColumn":63,"suggestions":"1500"},{"ruleId":"1436","severity":1,"message":"1501","line":7,"column":37,"nodeType":"1438","messageId":"1439","endLine":7,"endColumn":63},{"ruleId":"1436","severity":1,"message":"1502","line":12,"column":9,"nodeType":"1438","messageId":"1439","endLine":12,"endColumn":16},{"ruleId":"1436","severity":1,"message":"1503","line":13,"column":9,"nodeType":"1438","messageId":"1439","endLine":13,"endColumn":17},{"ruleId":"1436","severity":1,"message":"1504","line":19,"column":9,"nodeType":"1438","messageId":"1439","endLine":19,"endColumn":15},{"ruleId":"1505","replacedBy":"1506"},{"ruleId":"1507","replacedBy":"1508"},{"ruleId":"1436","severity":1,"message":"1437","line":30,"column":24,"nodeType":"1438","messageId":"1439","endLine":30,"endColumn":39},{"ruleId":"1440","severity":1,"message":"1441","line":44,"column":6,"nodeType":"1442","endLine":44,"endColumn":8,"suggestions":"1509"},{"ruleId":"1436","severity":1,"message":"1444","line":22,"column":8,"nodeType":"1438","messageId":"1439","endLine":22,"endColumn":14},{"ruleId":"1436","severity":1,"message":"1445","line":72,"column":11,"nodeType":"1438","messageId":"1439","endLine":72,"endColumn":25},{"ruleId":"1436","severity":1,"message":"1446","line":73,"column":11,"nodeType":"1438","messageId":"1439","endLine":73,"endColumn":27},{"ruleId":"1436","severity":1,"message":"1447","line":2,"column":26,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":36},{"ruleId":"1436","severity":1,"message":"1448","line":2,"column":38,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":47},{"ruleId":"1436","severity":1,"message":"1449","line":2,"column":59,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":69},{"ruleId":"1436","severity":1,"message":"1450","line":2,"column":71,"nodeType":"1438","messageId":"1439","endLine":2,"endColumn":78},{"ruleId":"1436","severity":1,"message":"1451","line":25,"column":15,"nodeType":"1438","messageId":"1439","endLine":25,"endColumn":22},{"ruleId":"1436","severity":1,"message":"1451","line":26,"column":15,"nodeType":"1438","messageId":"1439","endLine":26,"endColumn":22},{"ruleId":"1452","severity":1,"message":"1453","line":235,"column":5,"nodeType":"1454","messageId":"1455","endLine":242,"endColumn":8},{"ruleId":"1456","severity":1,"message":"1457","line":239,"column":9,"nodeType":"1458","messageId":"1459","endLine":241,"endColumn":19},{"ruleId":"1440","severity":1,"message":"1460","line":78,"column":6,"nodeType":"1442","endLine":78,"endColumn":20,"suggestions":"1510"},{"ruleId":"1462","severity":1,"message":"1463","line":7,"column":7,"nodeType":"1464","endLine":7,"endColumn":46},{"ruleId":"1436","severity":1,"message":"1465","line":71,"column":10,"nodeType":"1438","messageId":"1439","endLine":71,"endColumn":17},{"ruleId":"1436","severity":1,"message":"1466","line":95,"column":10,"nodeType":"1438","messageId":"1439","endLine":95,"endColumn":23},{"ruleId":"1436","severity":1,"message":"1467","line":95,"column":25,"nodeType":"1438","messageId":"1439","endLine":95,"endColumn":41},{"ruleId":"1436","severity":1,"message":"1468","line":112,"column":9,"nodeType":"1438","messageId":"1439","endLine":112,"endColumn":24},{"ruleId":"1436","severity":1,"message":"1511","line":19,"column":10,"nodeType":"1438","messageId":"1439","endLine":19,"endColumn":18},{"ruleId":"1436","severity":1,"message":"1512","line":19,"column":20,"nodeType":"1438","messageId":"1439","endLine":19,"endColumn":34},{"ruleId":"1436","severity":1,"message":"1513","line":19,"column":36,"nodeType":"1438","messageId":"1439","endLine":19,"endColumn":48},{"ruleId":"1436","severity":1,"message":"1514","line":19,"column":50,"nodeType":"1438","messageId":"1439","endLine":19,"endColumn":62},{"ruleId":"1436","severity":1,"message":"1469","line":82,"column":19,"nodeType":"1438","messageId":"1439","endLine":82,"endColumn":29},{"ruleId":"1436","severity":1,"message":"1515","line":105,"column":10,"nodeType":"1438","messageId":"1439","endLine":105,"endColumn":22},{"ruleId":"1436","severity":1,"message":"1516","line":105,"column":24,"nodeType":"1438","messageId":"1439","endLine":105,"endColumn":39},{"ruleId":"1436","severity":1,"message":"1517","line":129,"column":9,"nodeType":"1438","messageId":"1439","endLine":129,"endColumn":22},{"ruleId":"1436","severity":1,"message":"1470","line":237,"column":9,"nodeType":"1438","messageId":"1439","endLine":237,"endColumn":26},{"ruleId":"1436","severity":1,"message":"1471","line":330,"column":9,"nodeType":"1438","messageId":"1439","endLine":330,"endColumn":25},{"ruleId":"1440","severity":1,"message":"1472","line":438,"column":224,"nodeType":"1442","endLine":438,"endColumn":235,"suggestions":"1518"},{"ruleId":"1436","severity":1,"message":"1476","line":24,"column":22,"nodeType":"1438","messageId":"1439","endLine":24,"endColumn":34},{"ruleId":"1436","severity":1,"message":"1477","line":248,"column":9,"nodeType":"1438","messageId":"1439","endLine":248,"endColumn":30},{"ruleId":"1436","severity":1,"message":"1474","line":24,"column":10,"nodeType":"1438","messageId":"1439","endLine":24,"endColumn":24},{"ruleId":"1436","severity":1,"message":"1475","line":25,"column":10,"nodeType":"1438","messageId":"1439","endLine":25,"endColumn":23},{"ruleId":"1436","severity":1,"message":"1478","line":69,"column":10,"nodeType":"1438","messageId":"1439","endLine":69,"endColumn":14},{"ruleId":"1479","severity":1,"message":"1480","line":525,"column":69,"nodeType":"1464","endLine":525,"endColumn":159},{"ruleId":"1436","severity":1,"message":"1481","line":8,"column":8,"nodeType":"1438","messageId":"1439","endLine":8,"endColumn":18},{"ruleId":"1436","severity":1,"message":"1482","line":9,"column":10,"nodeType":"1438","messageId":"1439","endLine":9,"endColumn":26},{"ruleId":"1436","severity":1,"message":"1483","line":10,"column":10,"nodeType":"1438","messageId":"1439","endLine":10,"endColumn":24},{"ruleId":"1479","severity":1,"message":"1480","line":618,"column":33,"nodeType":"1464","endLine":618,"endColumn":123},{"ruleId":"1436","severity":1,"message":"1486","line":25,"column":19,"nodeType":"1438","messageId":"1439","endLine":25,"endColumn":29},{"ruleId":"1440","severity":1,"message":"1484","line":35,"column":6,"nodeType":"1442","endLine":35,"endColumn":8,"suggestions":"1519"},{"ruleId":"1436","severity":1,"message":"1450","line":6,"column":5,"nodeType":"1438","messageId":"1439","endLine":6,"endColumn":12},{"ruleId":"1462","severity":1,"message":"1463","line":28,"column":17,"nodeType":"1464","endLine":31,"endColumn":19},{"ruleId":"1436","severity":1,"message":"1489","line":13,"column":10,"nodeType":"1438","messageId":"1439","endLine":13,"endColumn":35},{"ruleId":"1490","severity":1,"message":"1491","line":41,"column":27,"nodeType":"1492","messageId":"1493","endLine":41,"endColumn":28,"suggestions":"1520"},{"ruleId":"1490","severity":1,"message":"1491","line":41,"column":37,"nodeType":"1492","messageId":"1493","endLine":41,"endColumn":38,"suggestions":"1521"},{"ruleId":"1490","severity":1,"message":"1496","line":41,"column":47,"nodeType":"1492","messageId":"1493","endLine":41,"endColumn":48,"suggestions":"1522"},{"ruleId":"1490","severity":1,"message":"1491","line":44,"column":38,"nodeType":"1492","messageId":"1493","endLine":44,"endColumn":39,"suggestions":"1523"},{"ruleId":"1490","severity":1,"message":"1491","line":44,"column":50,"nodeType":"1492","messageId":"1493","endLine":44,"endColumn":51,"suggestions":"1524"},{"ruleId":"1490","severity":1,"message":"1496","line":44,"column":62,"nodeType":"1492","messageId":"1493","endLine":44,"endColumn":63,"suggestions":"1525"},{"ruleId":"1436","severity":1,"message":"1486","line":47,"column":19,"nodeType":"1438","messageId":"1439","endLine":47,"endColumn":29},{"ruleId":"1436","severity":1,"message":"1487","line":50,"column":24,"nodeType":"1438","messageId":"1439","endLine":50,"endColumn":39},{"ruleId":"1436","severity":1,"message":"1488","line":156,"column":12,"nodeType":"1438","messageId":"1439","endLine":156,"endColumn":24},{"ruleId":"1436","severity":1,"message":"1501","line":7,"column":37,"nodeType":"1438","messageId":"1439","endLine":7,"endColumn":63},{"ruleId":"1436","severity":1,"message":"1502","line":12,"column":9,"nodeType":"1438","messageId":"1439","endLine":12,"endColumn":16},{"ruleId":"1436","severity":1,"message":"1503","line":13,"column":9,"nodeType":"1438","messageId":"1439","endLine":13,"endColumn":17},{"ruleId":"1436","severity":1,"message":"1504","line":19,"column":9,"nodeType":"1438","messageId":"1439","endLine":19,"endColumn":15},"no-unused-vars","'setDeadServices' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'axiosRetryProxy'. Either include it or remove the dependency array.","ArrayExpression",["1526"],"'Footer' is defined but never used.","'getCamerasData' is assigned a value but never used.","'getDashboardData' is assigned a value but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'CardFooter' is defined but never used.","'Spinner' is defined but never used.","'content' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","React Hook React.useEffect has a missing dependency: 'showDeadServices'. Either include it or remove the dependency array.",["1527"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filters' is assigned a value but never used.","'groupsOptions' is assigned a value but never used.","'setGroupsOptions' is assigned a value but never used.","'httpRequestBody' is assigned a value but never used.","'setSpinner' is assigned a value but never used.","'setEditionDataOLD' is assigned a value but never used.","'openWarningModal' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'fetchDataFlag', 'googleMapError', 'googleMapLoaded', 'isModalActive', and 'toggleModalOff'. Either include them or remove the dependency array.",["1528"],"'CNPJ_RECIPIENT' is defined but never used.","'CPF_RECIPIENT' is defined but never used.","'RiCameraLine' is defined but never used.","'openTrafficImageModal' is assigned a value but never used.","'DESC' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'axiosRetry' is defined but never used.","'getTimeoutConfig' is defined but never used.","'getRetryConfig' is defined but never used.","React Hook useEffect has a missing dependency: 'abortAll'. Either include it or remove the dependency array.",["1529"],"'setCteData' is assigned a value but never used.","'setRelevantCtes' is assigned a value but never used.","'mountCteData' is defined but never used.","'FISCAL_ACTION_REPORT_DATE' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1530","1531"],["1532","1533"],"Unnecessary escape character: \\/.",["1534","1535"],["1536","1537"],["1538","1539"],["1540","1541"],"'createQueryHttpRequestBody' is defined but never used.","'NFE_KEY' is assigned a value but never used.","'MDFE_KEY' is assigned a value but never used.","'getDfe' is assigned a value but never used.","no-native-reassign",["1542"],"no-negated-in-lhs",["1543"],["1544"],["1545"],"'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'dropdownOpen' is assigned a value but never used.","'setDropdownOpen' is assigned a value but never used.","'filterOptions' is assigned a value but never used.",["1546"],["1547"],["1548","1549"],["1550","1551"],["1552","1553"],["1554","1555"],["1556","1557"],["1558","1559"],{"desc":"1560","fix":"1561"},{"desc":"1562","fix":"1563"},{"desc":"1564","fix":"1565"},{"desc":"1566","fix":"1567"},{"messageId":"1568","fix":"1569","desc":"1570"},{"messageId":"1571","fix":"1572","desc":"1573"},{"messageId":"1568","fix":"1574","desc":"1570"},{"messageId":"1571","fix":"1575","desc":"1573"},{"messageId":"1568","fix":"1576","desc":"1570"},{"messageId":"1571","fix":"1577","desc":"1573"},{"messageId":"1568","fix":"1578","desc":"1570"},{"messageId":"1571","fix":"1579","desc":"1573"},{"messageId":"1568","fix":"1580","desc":"1570"},{"messageId":"1571","fix":"1581","desc":"1573"},{"messageId":"1568","fix":"1582","desc":"1570"},{"messageId":"1571","fix":"1583","desc":"1573"},"no-global-assign","no-unsafe-negation",{"desc":"1560","fix":"1584"},{"desc":"1562","fix":"1585"},{"desc":"1564","fix":"1586"},{"desc":"1566","fix":"1587"},{"messageId":"1568","fix":"1588","desc":"1570"},{"messageId":"1571","fix":"1589","desc":"1573"},{"messageId":"1568","fix":"1590","desc":"1570"},{"messageId":"1571","fix":"1591","desc":"1573"},{"messageId":"1568","fix":"1592","desc":"1570"},{"messageId":"1571","fix":"1593","desc":"1573"},{"messageId":"1568","fix":"1594","desc":"1570"},{"messageId":"1571","fix":"1595","desc":"1573"},{"messageId":"1568","fix":"1596","desc":"1570"},{"messageId":"1571","fix":"1597","desc":"1573"},{"messageId":"1568","fix":"1598","desc":"1570"},{"messageId":"1571","fix":"1599","desc":"1573"},"Update the dependencies array to be: [axiosRetryProxy]",{"range":"1600","text":"1601"},"Update the dependencies array to be: [deadServices, showDeadServices]",{"range":"1602","text":"1603"},"Update the dependencies array to be: [fetchDataFlag, googleMapError, googleMapLoaded, isModalActive, modalData, toggleModalOff]",{"range":"1604","text":"1605"},"Update the dependencies array to be: [abortAll]",{"range":"1606","text":"1607"},"removeEscape",{"range":"1608","text":"1609"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1610","text":"1611"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1612","text":"1609"},{"range":"1613","text":"1611"},{"range":"1614","text":"1609"},{"range":"1615","text":"1611"},{"range":"1616","text":"1609"},{"range":"1617","text":"1611"},{"range":"1618","text":"1609"},{"range":"1619","text":"1611"},{"range":"1620","text":"1609"},{"range":"1621","text":"1611"},{"range":"1622","text":"1601"},{"range":"1623","text":"1603"},{"range":"1624","text":"1605"},{"range":"1625","text":"1607"},{"range":"1626","text":"1609"},{"range":"1627","text":"1611"},{"range":"1628","text":"1609"},{"range":"1629","text":"1611"},{"range":"1630","text":"1609"},{"range":"1631","text":"1611"},{"range":"1632","text":"1609"},{"range":"1633","text":"1611"},{"range":"1634","text":"1609"},{"range":"1635","text":"1611"},{"range":"1636","text":"1609"},{"range":"1637","text":"1611"},[1559,1561],"[axiosRetryProxy]",[1776,1790],"[deadServices, showDeadServices]",[12943,12954],"[fetchDataFlag, googleMapError, googleMapLoaded, isModalActive, modalData, toggleModalOff]",[966,968],"[abortAll]",[1969,1970],"",[1969,1969],"\\",[1979,1980],[1979,1979],[1989,1990],[1989,1989],[2131,2132],[2131,2131],[2143,2144],[2143,2143],[2155,2156],[2155,2155],[1559,1561],[1776,1790],[14507,14518],[966,968],[1969,1970],[1969,1969],[1979,1980],[1979,1979],[1989,1990],[1989,1989],[2131,2132],[2131,2131],[2143,2144],[2143,2143],[2155,2156],[2155,2155]]