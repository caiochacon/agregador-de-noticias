{"ast":null,"code":"'use strict';\n\nvar hasOwn = require('hasown');\n\nvar channel = require('side-channel')();\n\nvar $TypeError = require('es-errors/type');\n\nvar SLOT = {\n  assert: function (O, slot) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    channel.assert(O);\n\n    if (!SLOT.has(O, slot)) {\n      throw new $TypeError('`' + slot + '` is not present on `O`');\n    }\n  },\n  get: function (O, slot) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    var slots = channel.get(O);\n    return slots && slots['$' + slot];\n  },\n  has: function (O, slot) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    var slots = channel.get(O);\n    return !!slots && hasOwn(slots, '$' + slot);\n  },\n  set: function (O, slot, V) {\n    if (!O || typeof O !== 'object' && typeof O !== 'function') {\n      throw new $TypeError('`O` is not an object');\n    }\n\n    if (typeof slot !== 'string') {\n      throw new $TypeError('`slot` must be a string');\n    }\n\n    var slots = channel.get(O);\n\n    if (!slots) {\n      slots = {};\n      channel.set(O, slots);\n    }\n\n    slots['$' + slot] = V;\n  }\n};\n\nif (Object.freeze) {\n  Object.freeze(SLOT);\n}\n\nmodule.exports = SLOT;","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/node_modules/stop-iteration-iterator/node_modules/internal-slot/index.js"],"names":["hasOwn","require","channel","$TypeError","SLOT","assert","O","slot","has","get","slots","set","V","Object","freeze","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAAP,EAAd;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIG,IAAI,GAAG;AACVC,EAAAA,MAAM,EAAE,UAAUC,CAAV,EAAaC,IAAb,EAAmB;AAC1B,QAAI,CAACD,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;AAC7D,YAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;AACA;;AACD,QAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;AAC7B,YAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;AACA;;AACDD,IAAAA,OAAO,CAACG,MAAR,CAAeC,CAAf;;AACA,QAAI,CAACF,IAAI,CAACI,GAAL,CAASF,CAAT,EAAYC,IAAZ,CAAL,EAAwB;AACvB,YAAM,IAAIJ,UAAJ,CAAe,MAAMI,IAAN,GAAa,yBAA5B,CAAN;AACA;AACD,GAZS;AAaVE,EAAAA,GAAG,EAAE,UAAUH,CAAV,EAAaC,IAAb,EAAmB;AACvB,QAAI,CAACD,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;AAC7D,YAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;AACA;;AACD,QAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;AAC7B,YAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;AACA;;AACD,QAAIO,KAAK,GAAGR,OAAO,CAACO,GAAR,CAAYH,CAAZ,CAAZ;AACA,WAAOI,KAAK,IAAIA,KAAK,CAAC,MAAMH,IAAP,CAArB;AACA,GAtBS;AAuBVC,EAAAA,GAAG,EAAE,UAAUF,CAAV,EAAaC,IAAb,EAAmB;AACvB,QAAI,CAACD,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;AAC7D,YAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;AACA;;AACD,QAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;AAC7B,YAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;AACA;;AACD,QAAIO,KAAK,GAAGR,OAAO,CAACO,GAAR,CAAYH,CAAZ,CAAZ;AACA,WAAO,CAAC,CAACI,KAAF,IAAWV,MAAM,CAACU,KAAD,EAAQ,MAAMH,IAAd,CAAxB;AACA,GAhCS;AAiCVI,EAAAA,GAAG,EAAE,UAAUL,CAAV,EAAaC,IAAb,EAAmBK,CAAnB,EAAsB;AAC1B,QAAI,CAACN,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,UAAjD,EAA8D;AAC7D,YAAM,IAAIH,UAAJ,CAAe,sBAAf,CAAN;AACA;;AACD,QAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;AAC7B,YAAM,IAAIJ,UAAJ,CAAe,yBAAf,CAAN;AACA;;AACD,QAAIO,KAAK,GAAGR,OAAO,CAACO,GAAR,CAAYH,CAAZ,CAAZ;;AACA,QAAI,CAACI,KAAL,EAAY;AACXA,MAAAA,KAAK,GAAG,EAAR;AACAR,MAAAA,OAAO,CAACS,GAAR,CAAYL,CAAZ,EAAeI,KAAf;AACA;;AACDA,IAAAA,KAAK,CAAC,MAAMH,IAAP,CAAL,GAAoBK,CAApB;AACA;AA9CS,CAAX;;AAiDA,IAAIC,MAAM,CAACC,MAAX,EAAmB;AAClBD,EAAAA,MAAM,CAACC,MAAP,CAAcV,IAAd;AACA;;AAEDW,MAAM,CAACC,OAAP,GAAiBZ,IAAjB","sourcesContent":["'use strict';\n\nvar hasOwn = require('hasown');\nvar channel = require('side-channel')();\n\nvar $TypeError = require('es-errors/type');\n\nvar SLOT = {\n\tassert: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tchannel.assert(O);\n\t\tif (!SLOT.has(O, slot)) {\n\t\t\tthrow new $TypeError('`' + slot + '` is not present on `O`');\n\t\t}\n\t},\n\tget: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\treturn slots && slots['$' + slot];\n\t},\n\thas: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\treturn !!slots && hasOwn(slots, '$' + slot);\n\t},\n\tset: function (O, slot, V) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\tif (!slots) {\n\t\t\tslots = {};\n\t\t\tchannel.set(O, slots);\n\t\t}\n\t\tslots['$' + slot] = V;\n\t}\n};\n\nif (Object.freeze) {\n\tObject.freeze(SLOT);\n}\n\nmodule.exports = SLOT;\n"]},"metadata":{},"sourceType":"script"}