{"ast":null,"code":"/* eslint-disable */\nimport { getUserLogin } from \"../../common/SessionUtils\";\nimport NOTIFICATION_STATUS_ENUM, { getActionFiscalDoneStatusCodes, getDesignatedStatusCodes, getHomologatedStatusCodes } from \"../../common/enumerators/NotificationStatus\";\nexport const integerFilter = {\n  column_type: \"int\",\n  regex: /^[0-9]*$/,\n  alwaysValidate: true\n};\nexport const moneyFilter = {\n  column_type: \"float\",\n  regex: /^[0-9]*,?[0-9]*$/,\n  alwaysValidate: true,\n  mask: {\n    encode: value => \"R$ \".concat(parseFloat(value.replace(\",\", \".\")).toLocaleString('pt-br', {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2\n    })),\n    decode: value => parseFloat(value.replace(\"R$ \", \"\").replace(/\\./g, \"\").replace(\",\", \".\"))\n  },\n  supportsInterval: true\n};\nexport const cpfFilter = {\n  column_type: \"char\",\n  regex: /^[0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2}$/,\n  mask: {\n    encode: cpf => cpf.replace(/([0-9]{3})[\\.]?([0-9]{3})[\\.]?([0-9]{3})[-]?([0-9]{2})/, '$1.$2.$3-$4'),\n    decode: cpf => cpf.replace(/\\D/g, '')\n  },\n  size: [11, 14]\n};\nexport const cpfInput = {\n  placeholder: \"___.___.___-__\",\n  onChange: (state, setter) => e => {\n    let value = e.target.value; // Caso colar um cpf válido, só basta formatar\n\n    if (value.length === 11 && cpfFilter.regex.test(value)) setter(cpfFilter.mask.encode(value));else if (state && value.length < state.length) // Caso estiver apagando, não é necessário fazer a checagem de regex\n      setter(value);else {\n      if (value.length === 4 || value.length === 8) // Adicionando os . e - automaticamente\n        value = \"\".concat(value.slice(0, -1), \".\").concat(value.slice(-1));\n      if (value.length === 12) value = \"\".concat(value.slice(0, -1), \"-\").concat(value.slice(-1));\n      if (value === \"\" || /^\\d\\d?\\d?(?:\\.\\d\\d?\\d?)?(?:\\.\\d\\d?\\d?)?(?:-\\d\\d?)?$/.test(value)) // Finalmente testando o regex e atualizando\n        setter(value);\n    }\n  }\n};\nexport const cnpjFilter = {\n  column_type: \"char\",\n  regex: /^\\d{2}[\\.]?\\d{3}[\\.]?\\d{3}[\\/]?\\d{4}[-]?\\d{2}$/,\n  mask: {\n    encode: cnpj => cnpj.replace(/^(\\d{2})[\\.]?(\\d{3})[\\.]?(\\d{3})[\\/]?(\\d{4})[-]?(\\d{2})$/, '$1.$2.$3/$4-$5'),\n    decode: cnpj => cnpj.replace(/\\D/g, '')\n  },\n  size: [14, 18]\n};\nexport const cnpjInput = {\n  placeholder: \"__.___.___/____-__\",\n  onChange: (state, setter) => e => {\n    let value = e.target.value; // Caso colar um cpf válido, só basta formatar\n\n    if (value.length === 14 && cnpjFilter.regex.test(value)) setter(cnpjFilter.mask.encode(value));else if (state && value.length < state.length) // Caso estiver apagando, não é necessário fazer a checagem de regex\n      setter(value);else {\n      if (value.length === 3 || value.length === 7) // Adicionando os . e - automaticamente\n        value = \"\".concat(value.slice(0, -1), \".\").concat(value.slice(-1));\n      if (value.length === 11) value = \"\".concat(value.slice(0, -1), \"/\").concat(value.slice(-1));\n      if (value.length === 16) value = \"\".concat(value.slice(0, -1), \"-\").concat(value.slice(-1));\n      if (value === \"\" || /^\\d\\d?(?:\\.\\d\\d?\\d?)?(?:\\.\\d\\d?\\d?)?(?:\\/\\d\\d?\\d?\\d?)?(?:-\\d\\d?)?$/.test(value)) // Finalmente testando o regex e atualizando\n        setter(value);\n    }\n  }\n};\nexport const awarenessFilter = {\n  dropdown: {\n    \"CIÊNCIA PENDENTE\": () => {\n      return [{\n        column: 'fiscal_notification_awareness_auditor',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }, {\n        column: 'fiscal_notification_awareness_date',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"true\"\n      }];\n    },\n    \"CIÊNCIA DECLARADA\": () => {\n      return [{\n        column: 'fiscal_notification_awareness_auditor',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }, {\n        column: 'fiscal_notification_awareness_date',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }];\n    }\n  },\n  inputType: \"select\"\n};\nexport const dateFilter = {\n  column_type: \"char\",\n  mask: {\n    encode: date => new Date(date).toLocaleString(\"pt-BR\"),\n    decode: date => date.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}), (\\d{2}):(\\d{2}):(\\d{2})/, '$3-$2-$1T$4:$5:$6')\n  },\n  supportsInterval: true,\n  inputType: \"datetime-local\"\n};\nexport const ufFilter = {\n  column_type: \"char\",\n  dropdown: {\n    \"Acre (AC)\": \"AC\",\n    \"Alagoas (AL)\": \"AL\",\n    \"Amapá (AP)\": \"AP\",\n    \"Amazonas (AM)\": \"AM\",\n    \"Bahia (BA)\": \"BA\",\n    \"Ceará (CE)\": \"CE\",\n    \"Distrito Federal (DF)\": \"DF\",\n    \"Espírito Santo (ES)\": \"ES\",\n    \"Goiás (GO)\": \"GO\",\n    \"Maranhão (MA)\": \"MA\",\n    \"Mato Grosso (MT)\": \"MT\",\n    \"Mato Grosso do Sul (MS)\": \"MS\",\n    \"Minas Gerais (MG)\": \"MG\",\n    \"Pará (PA)\": \"PA\",\n    \"Paraíba (PB)\": \"PB\",\n    \"Paraná (PR)\": \"PR\",\n    \"Pernambuco (PE)\": \"PE\",\n    \"Piauí (PI)\": \"PI\",\n    \"Rio de Janeiro (RJ)\": \"RJ\",\n    \"Rio Grande do Norte (RN)\": \"RN\",\n    \"Rio Grande do Sul (RS)\": \"RS\",\n    \"Rondônia (RO)\": \"RO\",\n    \"Roraima (RR)\": \"RR\",\n    \"Santa Catarina (SC)\": \"SC\",\n    \"São Paulo (SP)\": \"SP\",\n    \"Sergipe (SE)\": \"SE\",\n    \"Tocantins (TO)\": \"TO\"\n  },\n  inputType: \"select\"\n};\nexport const priorityFilter = {\n  column_type: \"int\",\n  dropdown: {\n    \"Baixa\": 1,\n    'Média': 2,\n    \"Alta\": 3,\n    \"COE\": {\n      value: 4,\n      adminOnly: true\n    }\n  },\n  inputType: \"select\"\n};\nexport const ownWarningConfigFilter = {\n  dropdown: {\n    \"MINHAS CONFIGURAÇÕES DE ALERTAS\": () => {\n      return [{\n        column: 'criador',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: getUserLogin()\n      }];\n    }\n  }\n};\nexport const dfeFilter = {\n  dropdown: {\n    \"Sem DFe\": () => {\n      return [{\n        column: 'protmdfe_infprot_chmdfe',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"true\"\n      }, {\n        column: 'infprot_chnfe',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"true\"\n      }];\n    },\n    \"MDFe\": () => {\n      return [{\n        column: 'protmdfe_infprot_chmdfe',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }];\n    },\n    \"NFe\": () => {\n      return [{\n        column: 'infprot_chnfe',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }];\n    },\n    \"CTe\": () => {\n      return [{\n        column: 'protcte_infprot_chcte',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }];\n    }\n  },\n  inputType: \"select\"\n};\nexport const eventDfeFilter = {\n  dropdown: {\n    \"MDFe\": () => {\n      return [{\n        column: 'protmdfe_infprot_chmdfe',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }];\n    },\n    \"NFe\": () => {\n      return [{\n        column: 'infprot_chnfe',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }];\n    },\n    \"CTe\": () => {\n      return [{\n        column: 'evento_tipo_dfe',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: \"CT\"\n      }];\n    }\n  },\n  inputType: \"select\"\n};\nexport const warningStatusFilter = {\n  dropdown: {\n    \"ALERTA NÃO VISUALIZADO\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: NOTIFICATION_STATUS_ENUM.NAO_VISUALIZADA\n      }];\n    },\n    \"ALERTA VISUALIZADO\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: NOTIFICATION_STATUS_ENUM.VISUALIZADA\n      }];\n    },\n    \"DELAY DO SISTEMA\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: NOTIFICATION_STATUS_ENUM.DELAY\n      }];\n    },\n    \"EM MONITORAMENTO\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO\n      }];\n    },\n    \"AÇÃO FISCAL DESIGNADA\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"in\",\n        value: getDesignatedStatusCodes()\n      }];\n    },\n    \"AÇÃO FISCAL REALIZADA\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"in\",\n        value: getActionFiscalDoneStatusCodes()\n      }];\n    },\n    \"AÇÃO FISCAL HOMOLOGADA\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"in\",\n        value: getHomologatedStatusCodes()\n      }];\n    },\n    \"SEM COMANDO FISCAL\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: NOTIFICATION_STATUS_ENUM.SEM_COMANDO\n      }];\n    },\n    \"HOMOLOGADA NÃO DISPONIBILIDADE DE COMANDO FISCAL\": () => {\n      return [{\n        column: 'fiscal_notification_status',\n        column_type: \"char\",\n        filter_type: \"equal\",\n        value: NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA\n      }];\n    }\n  },\n  inputType: \"select\"\n};\nexport const configTypeFilter = {\n  column_type: \"int\",\n  dropdown: {\n    'Todos (Passagens com e sem DFE, Emissões de MDFE e NFE)': 0,\n    'Apenas Passagens sem DFE': 1,\n    'Apenas Passagens com DFE': 5,\n    'Apenas Passagens com DFE e Emissões de MDFE/NFE': 2,\n    'Apenas Emissões de MDFE': 4,\n    'Apenas Emissões de NFE': 3\n  },\n  inputType: \"select\"\n};\nexport const dfeTypeFilter = {\n  column_type: \"int\",\n  dropdown: {\n    \"NFe\": 2,\n    'MDFe': 3,\n    \"CTe\": () => {\n      return [{\n        column: 'protcte_infprot_chcte',\n        column_type: \"char\",\n        filter_type: \"null\",\n        value: \"false\"\n      }];\n    }\n  },\n  inputType: \"select\"\n};\nexport const hourInput = {\n  placeholder: \"__:__:__\",\n  onChange: (state, setter) => e => {\n    let value = e.target.value; // Caso estiver apagando, não é necessário fazer a checagem de regex\n\n    if (value.length < state.length) setter(value);else {\n      if (value.length === 3 || value.length === 6) // Adicionando os : automaticamente\n        value = \"\".concat(value.slice(0, -1), \":\").concat(value.slice(-1));\n      if (value === \"\" || /^(([0-1]\\d?)|(2[0-3]?))(?::([0-5]\\d?))?(?::([0-5]\\d?))?$/.test(value)) // Finalmente testando o regex e atualizando\n        setter(value);\n    }\n  }\n};\n/* eslint-enable */","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/components/tags/filterPresets.js"],"names":["getUserLogin","NOTIFICATION_STATUS_ENUM","getActionFiscalDoneStatusCodes","getDesignatedStatusCodes","getHomologatedStatusCodes","integerFilter","column_type","regex","alwaysValidate","moneyFilter","mask","encode","value","parseFloat","replace","toLocaleString","maximumFractionDigits","minimumFractionDigits","decode","supportsInterval","cpfFilter","cpf","size","cpfInput","placeholder","onChange","state","setter","e","target","length","test","slice","cnpjFilter","cnpj","cnpjInput","awarenessFilter","dropdown","column","filter_type","inputType","dateFilter","date","Date","ufFilter","priorityFilter","adminOnly","ownWarningConfigFilter","dfeFilter","eventDfeFilter","warningStatusFilter","NAO_VISUALIZADA","VISUALIZADA","DELAY","EM_MONITORAMENTO","SEM_COMANDO","SEM_COMANDO_HOMOLOGADA","configTypeFilter","dfeTypeFilter","hourInput"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport { getUserLogin } from \"../../common/SessionUtils\"\r\nimport NOTIFICATION_STATUS_ENUM, { getActionFiscalDoneStatusCodes, getDesignatedStatusCodes, getHomologatedStatusCodes } from \"../../common/enumerators/NotificationStatus\"\r\n\r\nexport const integerFilter = {\r\n  column_type: \"int\",\r\n  regex: /^[0-9]*$/,\r\n  alwaysValidate: true\r\n}\r\n\r\nexport const moneyFilter = {\r\n  column_type: \"float\",\r\n  regex: /^[0-9]*,?[0-9]*$/,\r\n  alwaysValidate: true,\r\n  mask: {\r\n    encode: (value) => (\r\n      `R\\$ ${parseFloat(value.replace(\",\", \".\")).toLocaleString('pt-br', {maximumFractionDigits: 2, minimumFractionDigits: 2})}`\r\n      \r\n    ),\r\n    decode: (value) => parseFloat(value.replace(\"R$ \", \"\").replace(/\\./g, \"\").replace(\",\", \".\"))\r\n  },\r\n  supportsInterval: true\r\n}\r\n\r\nexport const cpfFilter = {\r\n  column_type: \"char\",\r\n  regex: /^[0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2}$/,\r\n  mask: {\r\n    encode: (cpf) => cpf.replace(/([0-9]{3})[\\.]?([0-9]{3})[\\.]?([0-9]{3})[-]?([0-9]{2})/, '$1.$2.$3-$4'),\r\n    decode: (cpf) => cpf.replace(/\\D/g, '')\r\n  },\r\n  size: [11, 14]\r\n}\r\n\r\nexport const cpfInput = {\r\n  placeholder: \"___.___.___-__\",\r\n  onChange: (state, setter) => e => {\r\n    let value = e.target.value\r\n\r\n    // Caso colar um cpf válido, só basta formatar\r\n    if(value.length === 11 && cpfFilter.regex.test(value))\r\n      setter(cpfFilter.mask.encode(value))\r\n    else if(state && value.length < state.length) // Caso estiver apagando, não é necessário fazer a checagem de regex\r\n      setter(value)\r\n    else {\r\n      if(value.length === 4 || value.length === 8)  // Adicionando os . e - automaticamente\r\n        value = `${value.slice(0,-1)}.${value.slice(-1)}`\r\n      if(value.length === 12)\r\n        value = `${value.slice(0,-1)}-${value.slice(-1)}`\r\n      if(value === \"\" || /^\\d\\d?\\d?(?:\\.\\d\\d?\\d?)?(?:\\.\\d\\d?\\d?)?(?:-\\d\\d?)?$/.test(value))   // Finalmente testando o regex e atualizando\r\n        setter(value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const cnpjFilter = {\r\n  column_type: \"char\",\r\n  regex: /^\\d{2}[\\.]?\\d{3}[\\.]?\\d{3}[\\/]?\\d{4}[-]?\\d{2}$/,\r\n  mask: {\r\n    encode: (cnpj) => cnpj.replace(/^(\\d{2})[\\.]?(\\d{3})[\\.]?(\\d{3})[\\/]?(\\d{4})[-]?(\\d{2})$/, '$1.$2.$3/$4-$5'),\r\n    decode: (cnpj) => cnpj.replace(/\\D/g, '')\r\n  },\r\n  size: [14, 18]\r\n}\r\n\r\nexport const cnpjInput = {\r\n  placeholder: \"__.___.___/____-__\",\r\n  onChange: (state, setter) => e => {\r\n    let value = e.target.value\r\n     // Caso colar um cpf válido, só basta formatar\r\n    if(value.length === 14 && cnpjFilter.regex.test(value))\r\n      setter(cnpjFilter.mask.encode(value))\r\n    else if(state && value.length < state.length) // Caso estiver apagando, não é necessário fazer a checagem de regex\r\n      setter(value)\r\n    else {\r\n      if(value.length === 3 || value.length === 7)  // Adicionando os . e - automaticamente\r\n        value = `${value.slice(0,-1)}.${value.slice(-1)}`\r\n      if(value.length === 11)\r\n        value = `${value.slice(0,-1)}/${value.slice(-1)}`\r\n      if(value.length === 16)\r\n        value = `${value.slice(0,-1)}-${value.slice(-1)}`\r\n      if(value === \"\" || /^\\d\\d?(?:\\.\\d\\d?\\d?)?(?:\\.\\d\\d?\\d?)?(?:\\/\\d\\d?\\d?\\d?)?(?:-\\d\\d?)?$/.test(value))   // Finalmente testando o regex e atualizando\r\n        setter(value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const awarenessFilter = {\r\n  dropdown: {\r\n    \"CIÊNCIA PENDENTE\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_awareness_auditor',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      },\r\n      {\r\n        column: 'fiscal_notification_awareness_date',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"true\"\r\n      }]\r\n    },\r\n    \"CIÊNCIA DECLARADA\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_awareness_auditor',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      },\r\n      {\r\n        column: 'fiscal_notification_awareness_date',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      },\r\n      ]\r\n    },\r\n  },\r\n  inputType: \"select\"\r\n}\r\n\r\nexport const dateFilter = {\r\n  column_type: \"char\",\r\n  mask: {\r\n    encode: (date) => new Date(date).toLocaleString(\"pt-BR\"),\r\n    decode: (date) => date.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4}), (\\d{2}):(\\d{2}):(\\d{2})/, '$3-$2-$1T$4:$5:$6')\r\n  },\r\n  supportsInterval: true,\r\n  inputType: \"datetime-local\"\r\n}\r\n\r\nexport const ufFilter = {\r\n  column_type: \"char\",\r\n  dropdown: {\r\n    \"Acre (AC)\": \"AC\",\r\n    \"Alagoas (AL)\": \"AL\",\r\n    \"Amapá (AP)\": \"AP\",\r\n    \"Amazonas (AM)\": \"AM\",\r\n    \"Bahia (BA)\": \"BA\",\r\n    \"Ceará (CE)\": \"CE\",\r\n    \"Distrito Federal (DF)\": \"DF\",\r\n    \"Espírito Santo (ES)\": \"ES\",\r\n    \"Goiás (GO)\": \"GO\",\r\n    \"Maranhão (MA)\": \"MA\",\r\n    \"Mato Grosso (MT)\": \"MT\",\r\n    \"Mato Grosso do Sul (MS)\": \"MS\",\r\n    \"Minas Gerais (MG)\": \"MG\",\r\n    \"Pará (PA)\": \"PA\",\r\n    \"Paraíba (PB)\": \"PB\",\r\n    \"Paraná (PR)\": \"PR\",\r\n    \"Pernambuco (PE)\": \"PE\",\r\n    \"Piauí (PI)\": \"PI\",\r\n    \"Rio de Janeiro (RJ)\": \"RJ\",\r\n    \"Rio Grande do Norte (RN)\": \"RN\",\r\n    \"Rio Grande do Sul (RS)\": \"RS\",\r\n    \"Rondônia (RO)\": \"RO\",\r\n    \"Roraima (RR)\": \"RR\",\r\n    \"Santa Catarina (SC)\": \"SC\",\r\n    \"São Paulo (SP)\": \"SP\",\r\n    \"Sergipe (SE)\": \"SE\",\r\n    \"Tocantins (TO)\": \"TO\"\r\n  },\r\n  inputType: \"select\"\r\n}\r\n\r\nexport const priorityFilter = {\r\n  column_type: \"int\",\r\n  dropdown: { \"Baixa\": 1, 'Média': 2, \"Alta\": 3, \"COE\": { value: 4, adminOnly: true } },\r\n  inputType: \"select\"\r\n}\r\n\r\nexport const ownWarningConfigFilter = {\r\n  dropdown: {\r\n    \"MINHAS CONFIGURAÇÕES DE ALERTAS\": () => {\r\n      return [{\r\n        column: 'criador',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: getUserLogin()\r\n      }]\r\n    },\r\n  }\r\n}\r\n\r\nexport const dfeFilter =  {\r\n  dropdown: {\r\n    \"Sem DFe\": () => {\r\n      return [{\r\n        column: 'protmdfe_infprot_chmdfe',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"true\"\r\n      },\r\n      {\r\n        column: 'infprot_chnfe',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"true\"\r\n      }]\r\n    },\r\n    \"MDFe\": () => {\r\n      return [{\r\n        column: 'protmdfe_infprot_chmdfe',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      }]\r\n    },\r\n    \"NFe\": () => {\r\n      return [{\r\n        column: 'infprot_chnfe',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      }]\r\n    },\r\n    \"CTe\": () => {\r\n      return [{\r\n        column: 'protcte_infprot_chcte',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      }]\r\n    },\r\n  },\r\n  inputType: \"select\"  \r\n}\r\n\r\nexport const eventDfeFilter =  {\r\n  dropdown: {\r\n    \"MDFe\": () => {\r\n      return [{\r\n        column: 'protmdfe_infprot_chmdfe',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      }]\r\n    },\r\n    \"NFe\": () => {\r\n      return [{\r\n        column: 'infprot_chnfe',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      }]\r\n    },\r\n    \"CTe\": () => {\r\n      return [{\r\n        column: 'evento_tipo_dfe',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: \"CT\"\r\n      }]\r\n    },\r\n  },\r\n  inputType: \"select\"  \r\n}\r\n\r\nexport const warningStatusFilter = {\r\n  dropdown: {\r\n    \"ALERTA NÃO VISUALIZADO\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: NOTIFICATION_STATUS_ENUM.NAO_VISUALIZADA\r\n      }]\r\n    },\r\n    \"ALERTA VISUALIZADO\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: NOTIFICATION_STATUS_ENUM.VISUALIZADA\r\n      }]\r\n    },\r\n    \"DELAY DO SISTEMA\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: NOTIFICATION_STATUS_ENUM.DELAY\r\n      }]\r\n    },\r\n    \"EM MONITORAMENTO\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO\r\n      }]\r\n    },\r\n    \"AÇÃO FISCAL DESIGNADA\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"in\",\r\n        value: getDesignatedStatusCodes()\r\n      }]\r\n    },\r\n    \"AÇÃO FISCAL REALIZADA\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"in\",\r\n        value: getActionFiscalDoneStatusCodes()\r\n      }]\r\n    },\r\n      \"AÇÃO FISCAL HOMOLOGADA\": () => {\r\n        return [{\r\n          column: 'fiscal_notification_status',\r\n          column_type: \"char\",\r\n          filter_type: \"in\",\r\n          value: getHomologatedStatusCodes()\r\n        }]\r\n    },\r\n    \"SEM COMANDO FISCAL\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: NOTIFICATION_STATUS_ENUM.SEM_COMANDO\r\n      }]\r\n    },\r\n    \"HOMOLOGADA NÃO DISPONIBILIDADE DE COMANDO FISCAL\": () => {\r\n      return [{\r\n        column: 'fiscal_notification_status',\r\n        column_type: \"char\",\r\n        filter_type: \"equal\",\r\n        value: NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA\r\n      }]\r\n    },\r\n  },\r\n  inputType: \"select\"\r\n}\r\n\r\nexport const configTypeFilter = {\r\n  column_type: \"int\",\r\n  dropdown: {\r\n    'Todos (Passagens com e sem DFE, Emissões de MDFE e NFE)': 0,\r\n    'Apenas Passagens sem DFE': 1,\r\n    'Apenas Passagens com DFE': 5,\r\n    'Apenas Passagens com DFE e Emissões de MDFE/NFE': 2,\r\n    'Apenas Emissões de MDFE': 4,\r\n    'Apenas Emissões de NFE': 3\r\n  },\r\n  inputType: \"select\"\r\n}\r\n\r\nexport const dfeTypeFilter = {\r\n  column_type: \"int\",\r\n  dropdown: {\r\n    \"NFe\": 2,\r\n    'MDFe': 3,\r\n    \"CTe\": () => {\r\n      return [{\r\n        column: 'protcte_infprot_chcte',\r\n        column_type: \"char\",\r\n        filter_type: \"null\",\r\n        value: \"false\"\r\n      }]\r\n    },\r\n  },\r\n  inputType: \"select\"\r\n}\r\n\r\nexport const hourInput = {\r\n  placeholder: \"__:__:__\",\r\n  onChange: (state, setter) => e => {\r\n    let value = e.target.value\r\n    // Caso estiver apagando, não é necessário fazer a checagem de regex\r\n    if(value.length < state.length)\r\n      setter(value)\r\n    else {\r\n      if(value.length === 3 || value.length === 6)  // Adicionando os : automaticamente\r\n        value = `${value.slice(0,-1)}:${value.slice(-1)}`\r\n      if(value === \"\" || /^(([0-1]\\d?)|(2[0-3]?))(?::([0-5]\\d?))?(?::([0-5]\\d?))?$/.test(value))   // Finalmente testando o regex e atualizando\r\n        setter(value)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/* eslint-enable */"]},"metadata":{},"sourceType":"module"}