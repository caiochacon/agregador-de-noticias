{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\WarningConfigModal\\\\WarningConfigModal.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport { getUserLogin, isAdmin, isSubgerente } from \"common/SessionUtils\";\nimport React from \"react\";\nimport env from \"common/enviroment\";\nimport { Nav, NavItem, NavLink, Row, TabContent, TabPane, FormGroup, Label, Input, Modal, ModalBody, ModalHeader, Col, Form } from 'reactstrap';\nimport { EDITION, ERROR, EXCLUSION } from \"../ModalConsts\";\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\nimport { isMonitoramento } from \"common/SessionUtils\";\nimport ConfirmationModal from \"../ConfirmationModal \";\nimport MessageModal from \"../MessageModal\";\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { getNowDateTimeString } from \"common/utils/validate\";\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\nimport treatError from \"common/utils/errorTreatment\";\nimport { getConfigStatusLabel } from \"common/enumerators/StatusEnum\";\nimport { CONFIG_TYPE_CONDITIONS } from \"common/rules/WarningConfigRules\";\nimport GroupsInput from \"components/group/GroupsInput\";\nimport { compareGroups } from \"common/rules/WarningConfigRules\";\nimport { TAG_INPUT_OPTIONS } from \"views/Warnings/utils/filters\";\nimport { SEVERITY_CONDITIONS } from \"common/rules/WarningConfigRules\";\nimport ModalEditionButtons from \"components/buttons/ModalEditionButtons\";\nimport { validateData } from \"common/rules/WarningConfigRules\";\nimport { cleanTagsInput } from \"views/Warnings/utils/format-data\";\nimport { compareWithOldValues } from \"common/rules/WarningConfigRules\";\nimport { treatResponse } from \"common/utils/errorTreatment\";\nimport STATUS_ENUM from \"common/enumerators/StatusEnum\";\nimport { removeMask } from \"common/utils/mask\";\nimport { isExternalUser } from \"common/SessionUtils\";\nimport MASK_ENUM from \"common/enumerators/MaskEnum\";\nimport { allowDuplication } from \"common/rules/WarningConfigRules\";\nimport { hasEmptyValues } from \"common/rules/WarningConfigRules\";\nimport WarningTagsInput from \"components/tags/WarningTagsInput\";\nimport { maxClosingDate } from \"common/rules/WarningConfigRules\";\nimport useToggle from \"common/hooks/useToogle\";\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\nimport { wasSuccessRequest } from \"common/utils/errorTreatment\";\nimport { TYPE } from \"common/model/WarningConfig\";\nimport { CREATION_DATE } from \"common/model/WarningConfig\";\nimport { MONITORING_PARAMETERS_JSON } from \"common/model/WarningConfig\";\nimport { GROUP_IDS_SSE } from \"common/model/WarningConfig\";\nimport { NAME } from \"common/model/WarningConfig\";\nimport { DESCRIPTION } from \"common/model/WarningConfig\";\nimport { CLOSING_DATE } from \"common/model/WarningConfig\";\nimport { VISIBILITY_GROUP } from \"common/model/WarningConfig\";\nimport { SEVERITY } from \"common/model/WarningConfig\";\nimport { FISCAL_ACTION } from \"common/model/WarningConfig\";\nimport { DESC } from \"axios/AxiosUtils\";\nimport { STATUS } from \"common/model/WarningConfig\";\nimport { CREATOR } from \"common/model/WarningConfig\";\nimport { MODIFICATION_DATE } from \"common/model/WarningConfig\";\nimport { MODIFICATION_USER } from \"common/model/WarningConfig\";\nimport { PAUSE_TIMESTAMP } from \"common/model/WarningConfig\";\nimport { CPF_RECIPIENT } from \"common/model/WarningConfig\";\nimport { CPF_MDFE_ISSUER } from \"common/model/WarningConfig\";\nimport { CPF_NFE_ISSUER } from \"common/model/WarningConfig\";\nimport { CPF_DRIVER } from \"common/model/WarningConfig\";\nimport { CNPJ_RECIPIENT } from \"common/model/WarningConfig\";\nimport { CNPJ_MDFE_ISSUER } from \"common/model/WarningConfig\";\nimport { CNPJ_NFE_ISSUER } from \"common/model/WarningConfig\";\nimport { PLATE } from \"common/model/WarningConfig\";\nimport { MDFE_LOWER_VALUE } from \"common/model/WarningConfig\";\nimport { NFE_LOWER_VALUE } from \"common/model/WarningConfig\";\nimport { AGREGATED_LOWER_VALUE } from \"common/model/WarningConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BLANK_FORM_DATA = {\n  \"fiscal_action_auditors\": {},\n  \"monitoring_user_name\": '',\n  \"monitoring_user_login\": '',\n  \"monitoring_user_id\": '',\n  \"monitoring_user_registration_id\": '',\n  \"fiscal_action_designation_report\": ''\n};\nexport default function WarningConfigModal(_ref) {\n  _s();\n\n  let {\n    show,\n    toggle,\n    data,\n    tags,\n    refresh,\n    modalReadonlyMode,\n    setModalReadonlyMode,\n    groupsConditions,\n    groupsValues\n  } = _ref;\n  const [tabIndex, setTabIndex] = React.useState(1);\n  const [invalid, setInvalid] = React.useState(false);\n  const [spinner_, setSpinner] = React.useState(false);\n  const [deleteStatus, toggleDeleteStatus] = useToggle(false);\n  const [formData, setFormData] = React.useState(() => data);\n  const [oldFormData] = React.useState(() => JSON.parse(JSON.stringify(data)));\n  const [formTags, setFormTags] = React.useState(tags);\n  const [oldFormTags] = React.useState(() => JSON.parse(JSON.stringify(tags)));\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  const {\n    modalData,\n    setModalData,\n    modalActionMethods,\n    setModalActionMethods,\n    toggleModalOn,\n    toggleModalOff,\n    isModalActive,\n    modalType\n  } = useModalWithData();\n\n  const isDisabled = warningConfigCreator => {\n    //Quando o modal é acionado pelo double click, a variável input criador virá undefined. \n    //Assim, sendo necessário recuperar a informação a partir do formData\n    if (isEmpty(warningConfigCreator)) {\n      warningConfigCreator = formData['criador'];\n    }\n\n    if (warningConfigCreator === getUserLogin() || isAdmin()) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const combinedToggleOff = () => {\n    if (deleteStatus) {\n      toggle();\n      toggleModalOff();\n    } else {\n      toggleModalOff();\n    }\n  };\n\n  const openDeleteModal = id => {\n    if (id !== undefined) {\n      setModalData({\n        entity: \"a Configuração de Alerta\",\n        operation: EXCLUSION,\n        id: id\n      });\n      setModalActionMethods([undefined, updateWarning, deleteWarning]);\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\n    }\n  };\n\n  const openConfirmationModal = async () => {\n    let invalidMessage = validateData(formData);\n    let cleanedTagsInput = cleanTagsInput(formTags);\n\n    if (hasEmptyValues(formData, cleanedTagsInput)) {\n      setInvalid(true);\n      setModalData({\n        operation: EDITION,\n        messageType: ERROR,\n        message: \"Há campos obrigatórios com preenchimento pendente!\"\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    } else if (!isEmpty(invalidMessage)) {\n      let errorMessage = \"Há campos obrigatórios com dados inválidos:\\n\";\n      errorMessage += invalidMessage.join(\"\");\n      setModalData({\n        message: errorMessage,\n        messageType: ERROR\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    } else if (compareWithOldValues(formData, oldFormData, formTags, oldFormTags)) {\n      setInvalid(true);\n      setModalData({\n        entity: \"da Configuração de Alerta\",\n        operation: EDITION,\n        messageType: ERROR,\n        message: \"Não há alterações a serem salvas para esta configuração de Alerta!\"\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    } else {\n      const configs = await checkDuplicityWarningConfigs(STATUS_ENUM.ATUALIZADO);\n      let configNames = [];\n\n      if (configs && configs.length > 0) {\n        for (let config of configs) {\n          configNames.push(config.nome);\n        }\n\n        let disclaimer = \"Os seguintes alertas j\\xE1 cadastrados possuem as mesmas condi\\xE7\\xF5es de monitoramento: \".concat(configNames.join(', '), \"! \\n\\n\");\n        setInvalid(false);\n\n        if (allowDuplication()) {\n          disclaimer += \"Confirma a alteração da Configuração de Alerta?\";\n          setModalData({\n            message: disclaimer,\n            operation: EDITION\n          });\n          setModalActionMethods([undefined, updateWarning, deleteWarning]);\n          toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\n        } else {\n          setModalData({\n            entity: \"da Configuração de Alerta\",\n            operation: EDITION,\n            messageType: ERROR,\n            message: disclaimer\n          });\n          toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n        }\n      } else {\n        setInvalid(false);\n        setModalData({\n          entity: \"a Configuração de Alerta\",\n          operation: EDITION\n        });\n        setModalActionMethods([undefined, updateWarning, deleteWarning]);\n        toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\n      }\n    }\n  };\n\n  const createEditionHttpRequestBody = configStatus => {\n    let httpRequestBody = createBaseHttpRequestBody({\n      [NAME]: escapeSpecialCharacters(formData[NAME]),\n      [DESCRIPTION]: escapeSpecialCharacters(formData[NAME]),\n      [FISCAL_ACTION]: escapeSpecialCharacters(formData[FISCAL_ACTION]),\n      [STATUS]: configStatus,\n      [CREATOR]: getUserLogin(),\n      [MODIFICATION_DATE]: getNowDateTimeString(),\n      [MODIFICATION_USER]: getUserLogin(),\n      [CLOSING_DATE]: \"\".concat(formData[CLOSING_DATE][0], \"T\").concat(formData[CLOSING_DATE][1]),\n      [SEVERITY]: formData[SEVERITY],\n      [TYPE]: Number(formData[TYPE]),\n      [PAUSE_TIMESTAMP]: formData[PAUSE_TIMESTAMP] ? formData[PAUSE_TIMESTAMP] : getNowDateTimeString(),\n      [GROUP_IDS_SSE]: formData[VISIBILITY_GROUP]\n    });\n\n    if (isExternalUser()) {\n      httpRequestBody[TYPE] = 0;\n    }\n\n    if (configStatus === STATUS_ENUM.CRIADO) {\n      httpRequestBody[CREATION_DATE] = getNowDateTimeString();\n    }\n\n    let cleanedTagsInput = cleanTagsInput(formTags);\n    httpRequestBody[MONITORING_PARAMETERS_JSON] = {\n      [CPF_RECIPIENT]: cleanedTagsInput[CPF_RECIPIENT] ? removeMask(cleanedTagsInput[CPF_RECIPIENT], MASK_ENUM.CPF) : null,\n      [CPF_MDFE_ISSUER]: cleanedTagsInput[CPF_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_MDFE_ISSUER], MASK_ENUM.CPF) : null,\n      [CPF_NFE_ISSUER]: cleanedTagsInput[CPF_NFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_NFE_ISSUER], MASK_ENUM.CPF) : null,\n      [CPF_DRIVER]: cleanedTagsInput[CPF_DRIVER] ? removeMask(cleanedTagsInput[CPF_DRIVER], MASK_ENUM.CPF) : null,\n      [CNPJ_RECIPIENT]: cleanedTagsInput[CNPJ_RECIPIENT] ? removeMask(cleanedTagsInput[CNPJ_RECIPIENT], MASK_ENUM.CNPJ) : null,\n      [CNPJ_MDFE_ISSUER]: cleanedTagsInput[CNPJ_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_MDFE_ISSUER], MASK_ENUM.CNPJ) : null,\n      [CNPJ_NFE_ISSUER]: cleanedTagsInput[CNPJ_NFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_NFE_ISSUER], MASK_ENUM.CNPJ) : null,\n      [PLATE]: cleanedTagsInput[PLATE] ? removeMask(cleanedTagsInput[PLATE], MASK_ENUM.PLATE) : null,\n      [MDFE_LOWER_VALUE]: cleanedTagsInput[MDFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[MDFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\n      [NFE_LOWER_VALUE]: cleanedTagsInput[NFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[NFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\n      [AGREGATED_LOWER_VALUE]: cleanedTagsInput[AGREGATED_LOWER_VALUE] ? removeMask(cleanedTagsInput[AGREGATED_LOWER_VALUE], MASK_ENUM.MONEY) : null\n    };\n    return httpRequestBody;\n  };\n\n  const checkDuplicityWarningConfigs = async status => {\n    const httpRequestBody = createEditionHttpRequestBody(status);\n    httpRequestBody[ID_CONFIG] = formData[ID_CONFIG];\n\n    try {\n      const res = await axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/warningconfigs/check_duplicity\"), httpRequestBody);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    ;\n  };\n\n  const deleteWarning = id => {\n    const entity = \"da Configuração de Alerta\";\n    let httpRequestBody = createBaseHttpRequestBody({\n      [STATUS]: STATUS_ENUM.REMOVIDO,\n      [MODIFICATION_DATE]: getNowDateTimeString(),\n      [MODIFICATION_USER]: getUserLogin()\n    });\n    httpRequestBody[GROUP_IDS_SSE] = formData[VISIBILITY_GROUP];\n    setSpinner(true);\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/warningconfigs/update/\").concat(id), httpRequestBody).then(res => {\n      treatResponse(entity, EXCLUSION, ID_CONFIG, res, setModalData, refresh);\n\n      if (wasSuccessRequest(res, ID_CONFIG)) {\n        toggleDeleteStatus();\n      }\n    }).catch(err => {\n      setModalData(treatError(err, entity, EXCLUSION));\n    }).finally(() => {\n      setSpinner(false);\n    });\n  };\n\n  const updateWarning = () => {\n    const entity = \"da Configuração de Alerta\";\n    setSpinner(true);\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    const httpRequestBody = createEditionHttpRequestBody(STATUS_ENUM.ATUALIZADO);\n    axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/warningconfigs/update/\").concat(formData[ID_CONFIG]), httpRequestBody).then(res => {\n      treatResponse(entity, EDITION, ID_CONFIG, res, setModalData, refresh);\n    }).catch(err => {\n      setModalData(treatError(err, entity, EDITION));\n    }).finally(() => {\n      setSpinner(false);\n      setModalReadonlyMode(true);\n    });\n  };\n\n  const redirectHistory = () => {\n    window.open('/warningconfig_history', '_blank');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: show,\n      toggle: () => {\n        toggle();\n      },\n      style: {\n        maxWidth: '70%'\n      },\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          toggle();\n        },\n        children: \"Alerta Cadastrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        style: {\n          justifyContent: 'center',\n          alignContent: 'center',\n          padding: '0.5rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              margin: \"5px 0px 10px 0px\"\n            },\n            onSubmit: e => {\n              e.preventDefault();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Nav, {\n              tabs: true,\n              style: {\n                background: \"#f2f2f2\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: tabIndex === 1 && \"active\",\n                  onClick: () => {\n                    setTabIndex(1);\n                  },\n                  children: \"Descri\\xE7\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: tabIndex === 2 && \"active\",\n                  onClick: () => {\n                    setTabIndex(2);\n                  },\n                  children: \"Configura\\xE7\\xF5es\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: tabIndex === 3 && \"active\",\n                  onClick: () => {\n                    setTabIndex(3);\n                  },\n                  children: \"A\\xE7\\xE3o Fiscal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: tabIndex === 4 && \"active\",\n                  onClick: () => {\n                    setTabIndex(4);\n                  } // aq \n                  ,\n                  children: \"Hist\\xF3rico\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n              activeTab: \"\".concat(tabIndex),\n              style: {\n                padding: \"15px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                tabId: \"1\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 4,\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"exampleEmail\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"N\\xBA Alerta\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 364,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      value: formData[ID_CONFIG],\n                      readOnly: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 6,\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"input\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 42\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      value: getConfigStatusLabel(formData),\n                      readOnly: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"exampleEmail\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Alerta\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 374,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      value: formData[NAME],\n                      readOnly: modalReadonlyMode,\n                      maxLength: \"50\",\n                      invalid: invalid && (formData[NAME] === \"\" || formData[NAME] === oldFormData[NAME]),\n                      onChange: e => setFormData({ ...formData,\n                        [NAME]: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleEmail\",\n                    sm: 6,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Descri\\xE7\\xE3o do Alerta\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 54\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"textarea\",\n                      readOnly: modalReadonlyMode,\n                      rows: \"4\",\n                      maxLength: \"1024\",\n                      value: formData[DESCRIPTION],\n                      invalid: invalid && (formData[DESCRIPTION] === \"\" || formData[DESCRIPTION] === oldFormData[DESCRIPTION]),\n                      onChange: e => setFormData({ ...formData,\n                        [DESCRIPTION]: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tabId: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"input\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Data de Fechamento\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 42\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"date\",\n                      value: formData[CLOSING_DATE][0],\n                      min: getNowDateTimeString(),\n                      max: maxClosingDate(),\n                      step: \"1\",\n                      readOnly: modalReadonlyMode,\n                      invalid: invalid && (formData[CLOSING_DATE][0] === \"\" || formData[CLOSING_DATE][0] === oldFormData[CLOSING_DATE][0]),\n                      onChange: e => {\n                        setFormData({ ...formData,\n                          [CLOSING_DATE]: [e.target.value, formData[CLOSING_DATE][1]]\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"input\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Hor\\xE1rio de Fechamento\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 415,\n                        columnNumber: 42\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      value: formData[CLOSING_DATE][1],\n                      placeholder: \"__:__:__\",\n                      min: getNowDateTimeString(),\n                      step: \"1\",\n                      readOnly: modalReadonlyMode,\n                      invalid: invalid && (formData[CLOSING_DATE][1] === \"\" || formData[CLOSING_DATE][1] === oldFormData[CLOSING_DATE][1]),\n                      onChange: e => {\n                        let value = e.target.value; // Caso estiver apagando, não é necessário fazer a checagem de regex\n\n                        if (value.length < formData[CLOSING_DATE][1].length) setFormData({ ...formData,\n                          [CLOSING_DATE]: [formData[CLOSING_DATE][0], value]\n                        });else {\n                          if (value.length === 3 || value.length === 6) // Adicionando os : automaticamente\n                            value = \"\".concat(value.slice(0, -1), \":\").concat(value.slice(-1));\n                          if (value === \"\" || /^(([0-1]\\d?)|(2[0-3]?))(?::([0-5]\\d?))?(?::([0-5]\\d?))?$/.test(value)) // Finalmente testando o regex e atualizando\n                            setFormData({ ...formData,\n                              [CLOSING_DATE]: [formData[CLOSING_DATE][0], value]\n                            });\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), (isAdmin() || isSubgerente() || isMonitoramento()) && /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      for: \"input\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Tipo de Configura\\xE7\\xE3o\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 42\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"select\",\n                      value: formData[TYPE],\n                      readOnly: modalReadonlyMode,\n                      disabled: modalReadonlyMode,\n                      invalid: invalid && (formData[TYPE] === \"\" || formData[TYPE] === oldFormData[TYPE]),\n                      onChange: e => setFormData({ ...formData,\n                        [TYPE]: e.target.value\n                      }),\n                      children: Object.entries(CONFIG_TYPE_CONDITIONS).map(key_value => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: key_value[1],\n                          children: key_value[0]\n                        }, key_value[1], false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 29\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 74\n                }, this), /*#__PURE__*/_jsxDEV(GroupsInput, {\n                  readOnly: modalReadonlyMode,\n                  disabled: modalReadonlyMode,\n                  invalid: invalid && (isEmpty(formData[VISIBILITY_GROUP]) || compareGroups(formData, oldFormData)),\n                  data: formData,\n                  fieldName: VISIBILITY_GROUP,\n                  setData: setFormData,\n                  conditions: groupsConditions,\n                  groups: groupsValues,\n                  first: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"input\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Condi\\xE7\\xF5es\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(WarningTagsInput, {\n                    tags: formTags,\n                    invalid: invalid,\n                    setTags: setFormTags,\n                    readOnly: modalReadonlyMode,\n                    disabled: modalReadonlyMode,\n                    columns: TAG_INPUT_OPTIONS,\n                    size: \"lg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"input\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Prioridade\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 40\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"select\",\n                    readOnly: modalReadonlyMode,\n                    disabled: modalReadonlyMode,\n                    invalid: invalid && (formData[SEVERITY] === \"\" || formData[SEVERITY] === oldFormData[SEVERITY]),\n                    value: formData[SEVERITY],\n                    onChange: e => {\n                      setFormData({ ...formData,\n                        [SEVERITY]: e.target.value\n                      });\n                    },\n                    children: Object.entries(SEVERITY_CONDITIONS).map(key_value => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: key_value[1],\n                        children: key_value[0]\n                      }, key_value[1], false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 497,\n                        columnNumber: 27\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tabId: \"3\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"exampleEmail\",\n                    sm: 6,\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"A\\xE7\\xE3o Fiscal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 54\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"textarea\",\n                      value: formData[FISCAL_ACTION],\n                      readOnly: modalReadonlyMode,\n                      rows: \"4\",\n                      maxLength: \"2048\",\n                      style: {\n                        minHeight: \"21em\",\n                        padding: \"6px 7px 6px 12px\"\n                      },\n                      invalid: invalid && (formData[FISCAL_ACTION] === \"\" || formData[FISCAL_ACTION] === oldFormData[FISCAL_ACTION]),\n                      onChange: e => {\n                        setFormData({ ...formData,\n                          [FISCAL_ACTION]: e.target.value\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tabId: \"4\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  style: {\n                    marginTop: '5px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      style: {\n                        marginBottom: \"5px\"\n                      },\n                      children: [\"Hist\\xF3rico (\", /*#__PURE__*/_jsxDEV(\"a\", {\n                        style: {\n                          color: \"#51cbce\",\n                          cursor: \"pointer\"\n                        },\n                        onClick: () => {\n                          redirectHistory();\n                        },\n                        children: \"Vers\\xE3o Completa\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 525,\n                        columnNumber: 69\n                      }, this), \"):\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"textarea\",\n                      value: formData.history,\n                      readOnly: true,\n                      maxLength: \"2048\",\n                      style: {\n                        minHeight: \"21em\",\n                        padding: \"6px 7px 6px 12px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              row: true,\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(ModalEditionButtons, {\n                  id: formData.id_config,\n                  data: formData,\n                  creator: formData.criador,\n                  modalReadonlyMode: modalReadonlyMode,\n                  setModalReadonlyMode: setModalReadonlyMode,\n                  isDisabled: isDisabled,\n                  editionAction: setModalReadonlyMode,\n                  deleteAction: openDeleteModal,\n                  saveAction: openConfirmationModal,\n                  cancelAction: toggle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 1\n    }, this), modalType === MODAL_TYPE_ENUM.CONFIRMATION && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData,\n      actionMethods: modalActionMethods\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 52\n    }, this), modalType === MODAL_TYPE_ENUM.MESSAGE && /*#__PURE__*/_jsxDEV(MessageModal, {\n      show: isModalActive,\n      toggle: combinedToggleOff,\n      data: modalData,\n      spinner: spinner_\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WarningConfigModal, \"IU0zxWgdNvqnYZcsddMHcmjQ/9k=\", false, function () {\n  return [useToggle, useModalWithData];\n});\n\n_c = WarningConfigModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WarningConfigModal\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/modals/WarningConfigModal/WarningConfigModal.js"],"names":["axios","axiosRetry","getTimeoutConfig","getRetryConfig","createBaseHttpRequestBody","getUserLogin","isAdmin","isSubgerente","React","env","Nav","NavItem","NavLink","Row","TabContent","TabPane","FormGroup","Label","Input","Modal","ModalBody","ModalHeader","Col","Form","EDITION","ERROR","EXCLUSION","MODAL_TYPE_ENUM","isMonitoramento","ConfirmationModal","MessageModal","useModalWithData","isEmpty","getNowDateTimeString","escapeSpecialCharacters","treatError","getConfigStatusLabel","CONFIG_TYPE_CONDITIONS","GroupsInput","compareGroups","TAG_INPUT_OPTIONS","SEVERITY_CONDITIONS","ModalEditionButtons","validateData","cleanTagsInput","compareWithOldValues","treatResponse","STATUS_ENUM","removeMask","isExternalUser","MASK_ENUM","allowDuplication","hasEmptyValues","WarningTagsInput","maxClosingDate","useToggle","ID_CONFIG","wasSuccessRequest","TYPE","CREATION_DATE","MONITORING_PARAMETERS_JSON","GROUP_IDS_SSE","NAME","DESCRIPTION","CLOSING_DATE","VISIBILITY_GROUP","SEVERITY","FISCAL_ACTION","DESC","STATUS","CREATOR","MODIFICATION_DATE","MODIFICATION_USER","PAUSE_TIMESTAMP","CPF_RECIPIENT","CPF_MDFE_ISSUER","CPF_NFE_ISSUER","CPF_DRIVER","CNPJ_RECIPIENT","CNPJ_MDFE_ISSUER","CNPJ_NFE_ISSUER","PLATE","MDFE_LOWER_VALUE","NFE_LOWER_VALUE","AGREGATED_LOWER_VALUE","BLANK_FORM_DATA","WarningConfigModal","show","toggle","data","tags","refresh","modalReadonlyMode","setModalReadonlyMode","groupsConditions","groupsValues","tabIndex","setTabIndex","useState","invalid","setInvalid","spinner_","setSpinner","deleteStatus","toggleDeleteStatus","formData","setFormData","oldFormData","JSON","parse","stringify","formTags","setFormTags","oldFormTags","axiosRetryProxy","create","modalData","setModalData","modalActionMethods","setModalActionMethods","toggleModalOn","toggleModalOff","isModalActive","modalType","isDisabled","warningConfigCreator","combinedToggleOff","openDeleteModal","id","undefined","entity","operation","updateWarning","deleteWarning","CONFIRMATION","openConfirmationModal","invalidMessage","cleanedTagsInput","messageType","message","MESSAGE","errorMessage","join","configs","checkDuplicityWarningConfigs","ATUALIZADO","configNames","length","config","push","nome","disclaimer","createEditionHttpRequestBody","configStatus","httpRequestBody","Number","CRIADO","CPF","CNPJ","MONEY","status","res","post","apiAddress","error","console","log","REMOVIDO","patch","then","catch","err","finally","redirectHistory","window","open","maxWidth","justifyContent","alignContent","padding","margin","e","preventDefault","background","cursor","target","value","slice","test","Object","entries","map","key_value","minHeight","marginTop","marginBottom","color","history","id_config","criador"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { getUserLogin, isAdmin, isSubgerente } from \"common/SessionUtils\";\r\n\r\nimport React from \"react\";\r\n\r\nimport env from \"common/enviroment\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Col,\r\n  Form\r\n} from 'reactstrap';\r\nimport { EDITION, ERROR, EXCLUSION } from \"../ModalConsts\";\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\nimport { isMonitoramento } from \"common/SessionUtils\";\r\nimport ConfirmationModal from \"../ConfirmationModal \";\r\nimport MessageModal from \"../MessageModal\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\r\nimport treatError from \"common/utils/errorTreatment\";\r\nimport { getConfigStatusLabel } from \"common/enumerators/StatusEnum\";\r\nimport { CONFIG_TYPE_CONDITIONS } from \"common/rules/WarningConfigRules\";\r\nimport GroupsInput from \"components/group/GroupsInput\";\r\nimport { compareGroups } from \"common/rules/WarningConfigRules\";\r\nimport { TAG_INPUT_OPTIONS } from \"views/Warnings/utils/filters\";\r\nimport { SEVERITY_CONDITIONS } from \"common/rules/WarningConfigRules\";\r\nimport ModalEditionButtons from \"components/buttons/ModalEditionButtons\";\r\nimport { validateData } from \"common/rules/WarningConfigRules\";\r\nimport { cleanTagsInput } from \"views/Warnings/utils/format-data\";\r\nimport { compareWithOldValues } from \"common/rules/WarningConfigRules\";\r\nimport { treatResponse } from \"common/utils/errorTreatment\";\r\nimport STATUS_ENUM from \"common/enumerators/StatusEnum\";\r\nimport { removeMask } from \"common/utils/mask\";\r\nimport { isExternalUser } from \"common/SessionUtils\";\r\nimport MASK_ENUM from \"common/enumerators/MaskEnum\";\r\nimport { allowDuplication } from \"common/rules/WarningConfigRules\";\r\nimport { hasEmptyValues } from \"common/rules/WarningConfigRules\";\r\nimport WarningTagsInput from \"components/tags/WarningTagsInput\";\r\nimport { maxClosingDate } from \"common/rules/WarningConfigRules\";\r\nimport useToggle from \"common/hooks/useToogle\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\nimport { wasSuccessRequest } from \"common/utils/errorTreatment\";\r\nimport { TYPE } from \"common/model/WarningConfig\";\r\nimport { CREATION_DATE } from \"common/model/WarningConfig\";\r\nimport { MONITORING_PARAMETERS_JSON } from \"common/model/WarningConfig\";\r\nimport { GROUP_IDS_SSE } from \"common/model/WarningConfig\";\r\nimport { NAME } from \"common/model/WarningConfig\";\r\nimport { DESCRIPTION } from \"common/model/WarningConfig\";\r\nimport { CLOSING_DATE } from \"common/model/WarningConfig\";\r\nimport { VISIBILITY_GROUP } from \"common/model/WarningConfig\";\r\nimport { SEVERITY } from \"common/model/WarningConfig\";\r\nimport { FISCAL_ACTION } from \"common/model/WarningConfig\";\r\nimport { DESC } from \"axios/AxiosUtils\";\r\nimport { STATUS } from \"common/model/WarningConfig\";\r\nimport { CREATOR } from \"common/model/WarningConfig\";\r\nimport { MODIFICATION_DATE } from \"common/model/WarningConfig\";\r\nimport { MODIFICATION_USER } from \"common/model/WarningConfig\";\r\nimport { PAUSE_TIMESTAMP } from \"common/model/WarningConfig\";\r\nimport { CPF_RECIPIENT } from \"common/model/WarningConfig\";\r\nimport { CPF_MDFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { CPF_NFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { CPF_DRIVER } from \"common/model/WarningConfig\";\r\nimport { CNPJ_RECIPIENT } from \"common/model/WarningConfig\";\r\nimport { CNPJ_MDFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { CNPJ_NFE_ISSUER } from \"common/model/WarningConfig\";\r\nimport { PLATE } from \"common/model/WarningConfig\";\r\nimport { MDFE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { NFE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { AGREGATED_LOWER_VALUE } from \"common/model/WarningConfig\";\r\n\r\n\r\nexport const BLANK_FORM_DATA = {\r\n  \"fiscal_action_auditors\": {},\r\n  \"monitoring_user_name\": '',\r\n  \"monitoring_user_login\": '',\r\n  \"monitoring_user_id\": '',\r\n  \"monitoring_user_registration_id\": '',\r\n  \"fiscal_action_designation_report\": ''\r\n\r\n}\r\n\r\n\r\nexport default function WarningConfigModal({ show, toggle, data, tags, refresh, modalReadonlyMode, setModalReadonlyMode, groupsConditions, groupsValues }) {\r\n\r\n  const [tabIndex, setTabIndex] = React.useState(1)\r\n  const [invalid, setInvalid] = React.useState(false);\r\n  const [spinner_, setSpinner] = React.useState(false)\r\n  const [deleteStatus, toggleDeleteStatus] = useToggle(false)\r\n\r\n  const [formData, setFormData] = React.useState(() => (data))\r\n  const [oldFormData] = React.useState(() => (JSON.parse(JSON.stringify(data))))\r\n\r\n  const [formTags, setFormTags] = React.useState(tags)\r\n  const [oldFormTags] = React.useState(() => (JSON.parse(JSON.stringify(tags))))\r\n  \r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n  const { modalData, setModalData, modalActionMethods, setModalActionMethods, toggleModalOn, toggleModalOff, isModalActive, modalType } = useModalWithData()\r\n\r\n\r\n  const isDisabled = (warningConfigCreator) => {\r\n\r\n    //Quando o modal é acionado pelo double click, a variável input criador virá undefined. \r\n    //Assim, sendo necessário recuperar a informação a partir do formData\r\n    if (isEmpty(warningConfigCreator)) {\r\n      warningConfigCreator = formData['criador']\r\n    }\r\n\r\n    if ((warningConfigCreator === getUserLogin()) || isAdmin()) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const combinedToggleOff = () => {\r\n    if (deleteStatus) {\r\n      toggle()\r\n      toggleModalOff()\r\n    } else {\r\n      toggleModalOff()\r\n    }\r\n  }\r\n  \r\n\r\n  const openDeleteModal = (id) => {\r\n    if (id !== undefined) {\r\n      setModalData({ entity: \"a Configuração de Alerta\", operation: EXCLUSION, id: id });\r\n      setModalActionMethods([undefined, updateWarning, deleteWarning]);\r\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n    }\r\n  }\r\n\r\n  const openConfirmationModal = async () => {\r\n    \r\n    let invalidMessage = validateData(formData)\r\n    let cleanedTagsInput = cleanTagsInput(formTags)\r\n    \r\n    if (hasEmptyValues(formData, cleanedTagsInput)) {\r\n      setInvalid(true)\r\n      setModalData({ operation: EDITION, messageType: ERROR, message: \"Há campos obrigatórios com preenchimento pendente!\" });\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    } else if (!isEmpty(invalidMessage)) {\r\n      let errorMessage = \"Há campos obrigatórios com dados inválidos:\\n\"\r\n      errorMessage += invalidMessage.join(\"\")\r\n      setModalData({ message: errorMessage, messageType: ERROR })\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    } else if (compareWithOldValues(formData, oldFormData, formTags, oldFormTags)) {\r\n      setInvalid(true)\r\n      setModalData({ entity: \"da Configuração de Alerta\", operation: EDITION, messageType: ERROR, message: \"Não há alterações a serem salvas para esta configuração de Alerta!\" });\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    } else {\r\n      const configs = await checkDuplicityWarningConfigs(STATUS_ENUM.ATUALIZADO);\r\n      let configNames = []\r\n      if (configs && configs.length > 0) {\r\n\r\n        for (let config of configs) {\r\n          configNames.push(config.nome)\r\n        }\r\n\r\n        let disclaimer = `Os seguintes alertas já cadastrados possuem as mesmas condições de monitoramento: ${configNames.join(', ')}! \\n\\n`\r\n\r\n        setInvalid(false);\r\n        if (allowDuplication()) {\r\n          disclaimer += \"Confirma a alteração da Configuração de Alerta?\"\r\n          setModalData({ message: disclaimer, operation: EDITION });\r\n          setModalActionMethods([undefined, updateWarning, deleteWarning]);\r\n          toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\r\n        } else {\r\n          setModalData({ entity: \"da Configuração de Alerta\", operation: EDITION, messageType: ERROR, message: disclaimer });\r\n          toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n        }\r\n      } else {\r\n        setInvalid(false);\r\n        setModalData({ entity: \"a Configuração de Alerta\", operation: EDITION });\r\n        setModalActionMethods([undefined, updateWarning, deleteWarning]);\r\n        toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n      }\r\n    }\r\n  }\r\n\r\n  const createEditionHttpRequestBody = (configStatus) => {\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [NAME]: escapeSpecialCharacters(formData[NAME]),\r\n      [DESCRIPTION]: escapeSpecialCharacters(formData[NAME]), [FISCAL_ACTION]: escapeSpecialCharacters(formData[FISCAL_ACTION]),\r\n      [STATUS]: configStatus, [CREATOR]: getUserLogin(),\r\n      [MODIFICATION_DATE]: getNowDateTimeString(), [MODIFICATION_USER]: getUserLogin(),\r\n      [CLOSING_DATE]: `${formData[CLOSING_DATE][0]}T${formData[CLOSING_DATE][1]}`, \r\n      [SEVERITY]: formData[SEVERITY],\r\n      [TYPE]: Number(formData[TYPE]),\r\n      [PAUSE_TIMESTAMP]: (formData[PAUSE_TIMESTAMP]) ? formData[PAUSE_TIMESTAMP] : getNowDateTimeString(),\r\n      [GROUP_IDS_SSE]: formData[VISIBILITY_GROUP]\r\n\r\n    })\r\n\r\n    if (isExternalUser()) {\r\n      httpRequestBody[TYPE] = 0\r\n    }\r\n\r\n    if (configStatus === STATUS_ENUM.CRIADO) {\r\n      httpRequestBody[CREATION_DATE] = getNowDateTimeString()\r\n    }\r\n\r\n    let cleanedTagsInput = cleanTagsInput(formTags)\r\n\r\n\r\n    httpRequestBody[MONITORING_PARAMETERS_JSON] = {\r\n      [CPF_RECIPIENT]: cleanedTagsInput[CPF_RECIPIENT] ? removeMask(cleanedTagsInput[CPF_RECIPIENT], MASK_ENUM.CPF) : null,\r\n      [CPF_MDFE_ISSUER]: cleanedTagsInput[CPF_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_MDFE_ISSUER], MASK_ENUM.CPF) : null,\r\n      [CPF_NFE_ISSUER]: cleanedTagsInput[CPF_NFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_NFE_ISSUER], MASK_ENUM.CPF) : null,\r\n      [CPF_DRIVER]: cleanedTagsInput[CPF_DRIVER] ? removeMask(cleanedTagsInput[CPF_DRIVER], MASK_ENUM.CPF) : null,\r\n      [CNPJ_RECIPIENT]: cleanedTagsInput[CNPJ_RECIPIENT] ? removeMask(cleanedTagsInput[CNPJ_RECIPIENT], MASK_ENUM.CNPJ) : null,\r\n      [CNPJ_MDFE_ISSUER]: cleanedTagsInput[CNPJ_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_MDFE_ISSUER], MASK_ENUM.CNPJ) : null,\r\n      [CNPJ_NFE_ISSUER]: cleanedTagsInput[CNPJ_NFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_NFE_ISSUER], MASK_ENUM.CNPJ) : null,\r\n      [PLATE]: cleanedTagsInput[PLATE] ? removeMask(cleanedTagsInput[PLATE], MASK_ENUM.PLATE) : null,\r\n      [MDFE_LOWER_VALUE]: cleanedTagsInput[MDFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[MDFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\r\n      [NFE_LOWER_VALUE]: cleanedTagsInput[NFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[NFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\r\n      [AGREGATED_LOWER_VALUE]: cleanedTagsInput[AGREGATED_LOWER_VALUE] ? removeMask(cleanedTagsInput[AGREGATED_LOWER_VALUE], MASK_ENUM.MONEY) : null\r\n    }\r\n    return httpRequestBody\r\n  }\r\n\r\n  const checkDuplicityWarningConfigs = async (status) => {\r\n\r\n    const httpRequestBody = createEditionHttpRequestBody(status)\r\n    httpRequestBody[ID_CONFIG] = formData[ID_CONFIG]\r\n\r\n    try {\r\n\r\n      const res = await axiosRetryProxy.post(`${env.apiAddress}/warningconfigs/check_duplicity`, httpRequestBody)\r\n      return res.data\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    };\r\n  };\r\n\r\n\r\n  const deleteWarning = (id) => {\r\n\r\n    const entity = \"da Configuração de Alerta\"\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [STATUS]: STATUS_ENUM.REMOVIDO,\r\n      [MODIFICATION_DATE]: getNowDateTimeString(), [MODIFICATION_USER]: getUserLogin(),\r\n    })\r\n    httpRequestBody[GROUP_IDS_SSE] = formData[VISIBILITY_GROUP]\r\n\r\n    setSpinner(true)\r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    axiosRetryProxy.patch(`${env.apiAddress}/warningconfigs/update/${id}`, httpRequestBody)\r\n      .then(res => {\r\n        \r\n        treatResponse(entity, EXCLUSION, ID_CONFIG, res, setModalData, refresh)\r\n\r\n        if (wasSuccessRequest(res, ID_CONFIG)){\r\n          toggleDeleteStatus()\r\n        }\r\n\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, EXCLUSION));\r\n      }).finally(() => {\r\n        setSpinner(false)\r\n      })\r\n  }\r\n\r\n\r\n  const updateWarning = () => {\r\n\r\n    const entity = \"da Configuração de Alerta\"\r\n\r\n    setSpinner(true)\r\n    \r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    const httpRequestBody = createEditionHttpRequestBody(STATUS_ENUM.ATUALIZADO)\r\n\r\n    axiosRetryProxy.patch(`${env.apiAddress}/warningconfigs/update/${formData[ID_CONFIG]}`, httpRequestBody)\r\n      .then(res => {\r\n        treatResponse(entity, EDITION, ID_CONFIG, res, setModalData, refresh)\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, EDITION));\r\n      }).finally(() => {\r\n        setSpinner(false)        \r\n        setModalReadonlyMode(true)\r\n        \r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n  const redirectHistory = () => {\r\n    window.open('/warningconfig_history', '_blank');\r\n  };\r\n\r\n  return <>\r\n\r\n<Modal\r\n          isOpen={show} toggle={() => { toggle() }}\r\n          style={{ maxWidth: '70%' }}\r\n          size=\"lg\"\r\n        >\r\n          <ModalHeader toggle={() => {  toggle()}}>Alerta Cadastrado</ModalHeader>\r\n          <ModalBody style={{ justifyContent: 'center', alignContent: 'center', padding: '0.5rem' }}>\r\n            <><Form style={{ margin: \"5px 0px 10px 0px\" }} onSubmit={e => { e.preventDefault(); }}>\r\n              <Nav tabs style={{ background: \"#f2f2f2\" }}>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 1 && \"active\"}\r\n                    onClick={() => { setTabIndex(1) }}\r\n                  >\r\n                    Descrição\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 2 && \"active\"}\r\n                    onClick={() => { setTabIndex(2) }}\r\n                  >\r\n                    Configurações\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 3 && \"active\"}\r\n                    onClick={() => { setTabIndex(3) }}\r\n                  >\r\n                    Ação Fiscal\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem style={{ cursor: \"pointer\" }}>\r\n                  <NavLink\r\n                    className={tabIndex === 4 && \"active\"}\r\n                    onClick={() => { setTabIndex(4); }} // aq \r\n                  >\r\n                    Histórico\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={`${tabIndex}`} style={{ padding: \"15px\" }}>\r\n                <TabPane tabId=\"1\">\r\n                  <FormGroup row>\r\n                    <Col sm={4}>\r\n                      <Label for=\"exampleEmail\"><b>Nº Alerta</b></Label>\r\n                      <Input value={formData[ID_CONFIG]} readOnly={true} />\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                      <Label for=\"input\"><b>Status</b></Label>\r\n                      <Input value={getConfigStatusLabel(formData)} readOnly={true} />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Col sm={12}>\r\n                      <Label for=\"exampleEmail\"><b>Alerta</b></Label>\r\n                      <Input\r\n                        value={formData[NAME]}\r\n                        readOnly={modalReadonlyMode}\r\n                        maxLength=\"50\"\r\n                        invalid={invalid && (formData[NAME] === \"\" || formData[NAME] === oldFormData[NAME])}\r\n                        onChange={e => setFormData({ ...formData, [NAME]: e.target.value })}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Label for=\"exampleEmail\" sm={6}><b>Descrição do Alerta</b></Label>\r\n                    <Col sm={12}>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        readOnly={modalReadonlyMode}\r\n                        rows=\"4\"\r\n                        maxLength=\"1024\"\r\n                        value={formData[DESCRIPTION]}\r\n                        invalid={invalid && (formData[DESCRIPTION] === \"\" || formData[DESCRIPTION] === oldFormData[DESCRIPTION])}\r\n                        onChange={e => setFormData({ ...formData, [DESCRIPTION]: e.target.value })}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <FormGroup row>\r\n                    <Col>\r\n                      <Label for=\"input\"><b>Data de Fechamento</b></Label>\r\n                      <Input\r\n                        type='date'\r\n                        value={formData[CLOSING_DATE][0]}\r\n                        min={getNowDateTimeString()}\r\n                        max={maxClosingDate()}\r\n                        step=\"1\"\r\n                        readOnly={modalReadonlyMode}\r\n                        invalid={invalid && (formData[CLOSING_DATE][0] === \"\" || formData[CLOSING_DATE][0] === oldFormData[CLOSING_DATE][0])}\r\n                        onChange={e => { setFormData({ ...formData, [CLOSING_DATE]: [e.target.value, formData[CLOSING_DATE][1]] }) }}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Label for=\"input\"><b>Horário de Fechamento</b></Label>\r\n                      <Input\r\n                        value={formData[CLOSING_DATE][1]}\r\n                        placeholder='__:__:__'\r\n                        min={getNowDateTimeString()}\r\n                        step=\"1\"\r\n                        readOnly={modalReadonlyMode}\r\n                        invalid={invalid && (formData[CLOSING_DATE][1] === \"\" || formData[CLOSING_DATE][1] === oldFormData[CLOSING_DATE][1])}\r\n                        onChange={e => {\r\n                          let value = e.target.value\r\n                          // Caso estiver apagando, não é necessário fazer a checagem de regex\r\n                          if (value.length < formData[CLOSING_DATE][1].length)\r\n                            setFormData({ ...formData, [CLOSING_DATE]: [formData[CLOSING_DATE][0], value] })\r\n                          else {\r\n                            if (value.length === 3 || value.length === 6)  // Adicionando os : automaticamente\r\n                              value = `${value.slice(0, -1)}:${value.slice(-1)}`\r\n                            if (value === \"\" || /^(([0-1]\\d?)|(2[0-3]?))(?::([0-5]\\d?))?(?::([0-5]\\d?))?$/.test(value))   // Finalmente testando o regex e atualizando\r\n                              setFormData({ ...formData, [CLOSING_DATE]: [formData[CLOSING_DATE][0], value] })\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n\r\n                  {(isAdmin() || isSubgerente() || isMonitoramento()) && <FormGroup row>\r\n                    <Col sm={12}>\r\n                      <Label for=\"input\"><b>Tipo de Configuração</b></Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        value={formData[TYPE]}\r\n                        readOnly={modalReadonlyMode}\r\n                        disabled={modalReadonlyMode}\r\n                        invalid={invalid && (formData[TYPE] === \"\" || formData[TYPE] === oldFormData[TYPE])}\r\n                        onChange={e => setFormData({ ...formData, [TYPE]: e.target.value })}\r\n                      >\r\n\r\n                        {Object.entries(CONFIG_TYPE_CONDITIONS).map((key_value) => {\r\n                          return (\r\n                            <option key={key_value[1]} value={key_value[1]}>{key_value[0]}</option>\r\n                          )\r\n                        })\r\n                        }\r\n                      </Input>\r\n                    </Col>\r\n                  </FormGroup>}\r\n\r\n                  <GroupsInput\r\n                    readOnly={modalReadonlyMode}\r\n                    disabled={modalReadonlyMode}\r\n                    invalid={invalid && (isEmpty(formData[VISIBILITY_GROUP]) || compareGroups(formData, oldFormData))}\r\n                    data={formData}\r\n                    fieldName={VISIBILITY_GROUP}\r\n                    setData={setFormData}\r\n                    conditions={groupsConditions}\r\n                    groups={groupsValues}\r\n                    first\r\n                  />\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"input\"><b>Condições</b></Label>\r\n                    <WarningTagsInput\r\n                      tags={formTags}\r\n                      invalid={invalid}\r\n                      setTags={setFormTags}\r\n                      readOnly={modalReadonlyMode} disabled={modalReadonlyMode}\r\n                      columns={TAG_INPUT_OPTIONS}\r\n                      size={\"lg\"}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"input\"><b>Prioridade</b></Label>\r\n\r\n                    <Input\r\n                      type=\"select\" readOnly={modalReadonlyMode} disabled={modalReadonlyMode}\r\n                      invalid={invalid && (formData[SEVERITY] === \"\" || formData[SEVERITY] === oldFormData[SEVERITY])}\r\n                      value={formData[SEVERITY]}\r\n                      onChange={e => { setFormData({ ...formData, [SEVERITY]: e.target.value }) }}\r\n                    >\r\n                      {Object.entries(SEVERITY_CONDITIONS).map((key_value) => {\r\n                        return (\r\n                          <option value={key_value[1]} key={key_value[1]}>{key_value[0]}</option>\r\n                        )\r\n                      })\r\n                      }\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <br />\r\n                </TabPane>\r\n                <TabPane tabId=\"3\">\r\n                  <FormGroup row>\r\n                    <Label for=\"exampleEmail\" sm={6}><b>Ação Fiscal</b></Label>\r\n                    <Col sm={12}>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        value={formData[FISCAL_ACTION]}\r\n                        readOnly={modalReadonlyMode}\r\n                        rows=\"4\"\r\n                        maxLength=\"2048\"\r\n                        style={{ minHeight: \"21em\", padding: \"6px 7px 6px 12px\" }}\r\n                        invalid={invalid && (formData[FISCAL_ACTION] === \"\" || formData[FISCAL_ACTION] === oldFormData[FISCAL_ACTION])}\r\n                        onChange={e => { setFormData({ ...formData, [FISCAL_ACTION]: e.target.value }) }}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </TabPane>\r\n                <TabPane tabId=\"4\">\r\n                  <Row style={{ marginTop: '5px' }}>\r\n                    <Col>\r\n                      <b style={{ marginBottom: \"5px\" }}>Histórico (<a style={{ color: \"#51cbce\", cursor: \"pointer\" }} onClick={() => { redirectHistory(); }}>Versão Completa</a>):</b>\r\n                      <Input\r\n                        type='textarea'\r\n                        value={formData.history}\r\n                        readOnly={true}\r\n                        maxLength=\"2048\"\r\n                        style={{ minHeight: \"21em\", padding: \"6px 7px 6px 12px\" }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </TabContent>\r\n              <FormGroup row>\r\n                <Col sm={12}>\r\n                  <ModalEditionButtons\r\n                    id={formData.id_config} data={formData} creator={formData.criador}\r\n                    modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} isDisabled={isDisabled}\r\n                    editionAction={setModalReadonlyMode} deleteAction={openDeleteModal}\r\n                    saveAction={openConfirmationModal} cancelAction={toggle}\r\n\r\n                  />\r\n\r\n                </Col>\r\n              </FormGroup>\r\n            </Form></>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n\r\n    {modalType === MODAL_TYPE_ENUM.CONFIRMATION && <ConfirmationModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethods={modalActionMethods} />}\r\n    {modalType === MODAL_TYPE_ENUM.MESSAGE && <MessageModal show={isModalActive} toggle={combinedToggleOff} data={modalData} spinner={spinner_} />}\r\n\r\n  </>\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}