{"ast":null,"code":"import axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport env from 'common/enviroment';\nimport { createBaseHttpRequestBody } from \"./AxiosUtils\";\nexport default function ReadMdfeData() {\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n\n  const readMdfeDataRequest = async mdfe_key => {\n    let httpRequestBody = createBaseHttpRequestBody();\n    httpRequestBody[\"mdfe_key\"] = mdfe_key;\n\n    try {\n      let response = await axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/mdfes/read\"), httpRequestBody);\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      return err;\n    }\n  };\n\n  return {\n    readMdfeDataRequest\n  };\n}\n_c = ReadMdfeData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadMdfeData\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/axios/ReadMdfeData.js"],"names":["axios","axiosRetry","getTimeoutConfig","getRetryConfig","env","createBaseHttpRequestBody","ReadMdfeData","axiosRetryProxy","create","readMdfeDataRequest","mdfe_key","httpRequestBody","response","post","apiAddress","data","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,SAASC,yBAAT,QAA0C,cAA1C;AAEA,eAAe,SAASC,YAAT,GAAwB;AAErC,QAAMC,eAAe,GAAGP,KAAK,CAACQ,MAAN,CAAaN,gBAAgB,EAA7B,CAAxB;AACAD,EAAAA,UAAU,CAACM,eAAD,EAAkBJ,cAAc,EAAhC,CAAV;;AAGA,QAAMM,mBAAmB,GAAG,MAAOC,QAAP,IAAoB;AAE9C,QAAIC,eAAe,GAAGN,yBAAyB,EAA/C;AACAM,IAAAA,eAAe,CAAC,UAAD,CAAf,GAA8BD,QAA9B;;AAEA,QAAI;AACF,UAAIE,QAAQ,GAAG,MAAML,eAAe,CAACM,IAAhB,WAAwBT,GAAG,CAACU,UAA5B,kBAAqDH,eAArD,CAArB;AACA,aAAOC,QAAQ,CAACG,IAAhB;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAP;AACD;AAEF,GAbD;;AAeE,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACD;KAtBqBH,Y","sourcesContent":["import axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport env from 'common/enviroment';\r\n\r\nimport { createBaseHttpRequestBody } from \"./AxiosUtils\";\r\n\r\nexport default function ReadMdfeData() {\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n\r\n  const readMdfeDataRequest = async (mdfe_key) => {\r\n    \r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    httpRequestBody[\"mdfe_key\"] = mdfe_key\r\n    \r\n    try {\r\n      let response = await axiosRetryProxy.post(`${env.apiAddress}/mdfes/read`, httpRequestBody)\r\n      return response.data\r\n    } catch (err) {\r\n      console.log(err)\r\n      return err\r\n    }\r\n    \r\n  }\r\n\r\n    return { readMdfeDataRequest }\r\n  }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}