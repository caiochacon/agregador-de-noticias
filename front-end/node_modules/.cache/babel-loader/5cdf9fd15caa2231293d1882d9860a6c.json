{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\ConfirmationModal .js\";\nimport React from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, Col, Row } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENTITY_TOKEN = \"#ENTITY_TOKEN#\";\nconst OPERATION_TOKEN = \"#OPERATION_TOKEN#\";\nconst BASE_MESSAGE = \"Confirma a #OPERATION_TOKEN# dest#ENTITY_TOKEN#?\";\nconst OPERATIONS = [\"criação\", \"alteração\", \"exclusão\"];\nexport default function ConfirmationModal(_ref) {\n  let {\n    show,\n    toggle,\n    data,\n    actionMethods\n  } = _ref;\n\n  const mountMessage = () => {\n    if (data.message && data.message !== \"\") {\n      return data.message;\n    }\n\n    if (!OPERATIONS[data.operation]) {\n      return data.entity;\n    }\n\n    let msg = BASE_MESSAGE;\n    msg = msg.replace(ENTITY_TOKEN, data.entity);\n    msg = msg.replace(OPERATION_TOKEN, OPERATIONS[data.operation]);\n    return msg;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: show,\n    toggle: toggle,\n    style: {\n      'maxWidth': '16%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      style: {\n        'padding': '0px 4px 0px 0px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      style: {\n        'textAlign': 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            whiteSpace: 'pre-line'\n          },\n          children: mountMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), !actionMethods.every(item => item === undefined || item === null) && /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => {\n              data.view ? actionMethods[data.operation](data.id, data.warning) : actionMethods[data.operation](data.id);\n            },\n            children: \"Sim \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            onClick: toggle,\n            children: \"N\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n_c = ConfirmationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationModal\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/components/modals/ConfirmationModal .js"],"names":["React","Button","Modal","ModalBody","ModalHeader","Col","Row","ENTITY_TOKEN","OPERATION_TOKEN","BASE_MESSAGE","OPERATIONS","ConfirmationModal","show","toggle","data","actionMethods","mountMessage","message","operation","entity","msg","replace","whiteSpace","every","item","undefined","view","id","warning"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Col,\r\n  Row\r\n} from 'reactstrap';\r\n\r\n\r\nconst ENTITY_TOKEN = \"#ENTITY_TOKEN#\"\r\nconst OPERATION_TOKEN = \"#OPERATION_TOKEN#\"\r\n\r\nconst BASE_MESSAGE = \"Confirma a #OPERATION_TOKEN# dest#ENTITY_TOKEN#?\"\r\n\r\nconst OPERATIONS = [\"criação\", \"alteração\", \"exclusão\"]\r\n\r\nexport default function ConfirmationModal({ show, toggle, data, actionMethods }) {\r\n\r\n  const mountMessage = () => {\r\n    if (data.message && data.message !== \"\") {\r\n      return data.message\r\n    }\r\n    if (!OPERATIONS[data.operation]) {\r\n      return  data.entity;\r\n    }\r\n      let msg = BASE_MESSAGE\r\n      msg = msg.replace(ENTITY_TOKEN, data.entity)\r\n      msg = msg.replace(OPERATION_TOKEN, OPERATIONS[data.operation])\r\n\r\n      return msg;\r\n  }\r\n\r\n\r\n  return <Modal isOpen={show} toggle={toggle} style={{ 'maxWidth': '16%' }}>\r\n            <ModalHeader toggle={toggle} style={{ 'padding': '0px 4px 0px 0px' }}></ModalHeader>\r\n            <ModalBody style={{ 'textAlign': 'center' }}>\r\n              <Row>\r\n                <Col style={{ whiteSpace: 'pre-line' }}>\r\n                  {mountMessage()}\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <br></br>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <br></br>\r\n                </Col>\r\n              </Row>\r\n             { !actionMethods.every( item => item === undefined || item === null) &&(<Row>\r\n                <Col>\r\n                  <Button color='primary' onClick={() => {data.view ? actionMethods[data.operation](data.id, data.warning) : actionMethods[data.operation](data.id);}} >Sim </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button color='danger' onClick={toggle} >Não</Button>\r\n                </Col>\r\n              </Row>)}\r\n            </ModalBody>\r\n          </Modal>;\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}