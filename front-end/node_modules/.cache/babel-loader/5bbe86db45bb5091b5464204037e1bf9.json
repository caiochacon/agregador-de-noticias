{"ast":null,"code":"function toDegreesMinutesAndSeconds(coordinate) {\n  var absolute = Math.abs(coordinate);\n  var degrees = Math.floor(absolute);\n  var minutesNotTruncated = (absolute - degrees) * 60;\n  var minutes = Math.floor(minutesNotTruncated);\n  var seconds = Math.floor((minutesNotTruncated - minutes) * 60);\n  return degrees + \"° \" + minutes + \" \" + seconds + \"\\\"\";\n}\n\nexport default function convertDMS(lat, lng) {\n  const isNotNumber = n => isNaN(parseFloat(n)) && !isNaN(n - 0);\n\n  if (isNotNumber(lat) || isNotNumber(lng)) return \"...\";\n  var latitude = toDegreesMinutesAndSeconds(lat);\n  var latitudeCardinal = lat >= 0 ? \"Norte\" : \"Sul\";\n  var longitude = toDegreesMinutesAndSeconds(lng);\n  var longitudeCardinal = lng >= 0 ? \"Leste\" : \"Oeste\";\n  return [\"\".concat(latitude, \" \").concat(latitudeCardinal), \"\".concat(longitude, \" \").concat(longitudeCardinal)];\n}","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/toDMS.js"],"names":["toDegreesMinutesAndSeconds","coordinate","absolute","Math","abs","degrees","floor","minutesNotTruncated","minutes","seconds","convertDMS","lat","lng","isNotNumber","n","isNaN","parseFloat","latitude","latitudeCardinal","longitude","longitudeCardinal"],"mappings":"AAAA,SAASA,0BAAT,CAAoCC,UAApC,EAAgD;AAC5C,MAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,UAAT,CAAf;AACA,MAAII,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWJ,QAAX,CAAd;AACA,MAAIK,mBAAmB,GAAG,CAACL,QAAQ,GAAGG,OAAZ,IAAuB,EAAjD;AACA,MAAIG,OAAO,GAAGL,IAAI,CAACG,KAAL,CAAWC,mBAAX,CAAd;AACA,MAAIE,OAAO,GAAGN,IAAI,CAACG,KAAL,CAAW,CAACC,mBAAmB,GAAGC,OAAvB,IAAkC,EAA7C,CAAd;AAEA,SAAOH,OAAO,GAAG,IAAV,GAAiBG,OAAjB,GAA2B,GAA3B,GAAiCC,OAAjC,GAA2C,IAAlD;AACH;;AAED,eAAe,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AACzC,QAAMC,WAAW,GAAIC,CAAD,IAAOC,KAAK,CAACC,UAAU,CAACF,CAAD,CAAX,CAAL,IAAwB,CAACC,KAAK,CAACD,CAAC,GAAG,CAAL,CAAzD;;AAEA,MAAGD,WAAW,CAACF,GAAD,CAAX,IAAoBE,WAAW,CAACD,GAAD,CAAlC,EACI,OAAO,KAAP;AAEJ,MAAIK,QAAQ,GAAGjB,0BAA0B,CAACW,GAAD,CAAzC;AACA,MAAIO,gBAAgB,GAAGP,GAAG,IAAI,CAAP,GAAW,OAAX,GAAqB,KAA5C;AAEA,MAAIQ,SAAS,GAAGnB,0BAA0B,CAACY,GAAD,CAA1C;AACA,MAAIQ,iBAAiB,GAAGR,GAAG,IAAI,CAAP,GAAW,OAAX,GAAqB,OAA7C;AAEA,SAAO,WAAIK,QAAJ,cAAgBC,gBAAhB,aAAuCC,SAAvC,cAAoDC,iBAApD,EAAP;AACH","sourcesContent":["function toDegreesMinutesAndSeconds(coordinate) {\r\n    var absolute = Math.abs(coordinate);\r\n    var degrees = Math.floor(absolute);\r\n    var minutesNotTruncated = (absolute - degrees) * 60;\r\n    var minutes = Math.floor(minutesNotTruncated);\r\n    var seconds = Math.floor((minutesNotTruncated - minutes) * 60);\r\n\r\n    return degrees + \"° \" + minutes + \" \" + seconds + \"\\\"\";\r\n}\r\n\r\nexport default function convertDMS(lat, lng) {\r\n    const isNotNumber = (n) => isNaN(parseFloat(n)) && !isNaN(n - 0);\r\n\r\n    if(isNotNumber(lat) || isNotNumber(lng))\r\n        return \"...\"\r\n\r\n    var latitude = toDegreesMinutesAndSeconds(lat);\r\n    var latitudeCardinal = lat >= 0 ? \"Norte\" : \"Sul\";\r\n\r\n    var longitude = toDegreesMinutesAndSeconds(lng);\r\n    var longitudeCardinal = lng >= 0 ? \"Leste\" : \"Oeste\";\r\n\r\n    return [`${latitude} ${latitudeCardinal}`, `${longitude} ${longitudeCardinal}`];\r\n}"]},"metadata":{},"sourceType":"module"}