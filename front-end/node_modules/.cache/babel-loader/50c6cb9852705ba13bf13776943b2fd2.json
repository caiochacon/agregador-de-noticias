{"ast":null,"code":"import { hasUserLoggedData } from \"common/SessionUtils\";\nimport { getUserData } from \"common/SessionUtils\";\nimport { getUserLogin } from \"common/SessionUtils\";\nimport USER_ID_ENUM from \"common/enumerators/UserIdEnum\";\nimport { HOMOLOGATION_AUDITOR_NAME } from \"common/model/Notification\";\nimport { SUPERVISION_AUDITOR_ID } from \"common/model/Notification\";\nimport { SUPERVISION_AUDITOR_NAME } from \"common/model/Notification\";\nimport { MONITORING_USER_ID } from \"common/model/Notification\";\nimport { MONITORING_USER_LOGIN } from \"common/model/Notification\";\nimport { REPORT_AI } from \"common/model/Notification\";\nimport { REPORT_PENALTY_VALUE } from \"common/model/Notification\";\nimport { REPORT_PRODUCT_NAME } from \"common/model/Notification\";\nimport { REPORT_BOOKED_CPF } from \"common/model/Notification\";\nimport { REPORT_BOOKED_IE } from \"common/model/Notification\";\nimport { REPORT_LONGITUDE } from \"common/model/Notification\";\nimport { AWARENESS_AUDITOR } from \"common/model/Notification\";\nimport { REPORT_LATITUDE } from \"common/model/Notification\";\nimport { REPORT_BOOKED_CNPJ } from \"common/model/Notification\";\nimport { REPORT_CPF_DRIVER } from \"common/model/Notification\";\nimport { REPORT_REVENUE_CODE } from \"common/model/Notification\";\nimport { REPORT_DAR } from \"common/model/Notification\";\nimport { REPORT_ENABLED } from \"common/model/Notification\";\nimport { MONITORING_USER_REGISTRATION_ID } from \"common/model/Notification\";\nimport { SUPERVISION_AUDITOR } from \"common/model/Notification\";\nimport { MONITORING_USER_NAME } from \"common/model/Notification\";\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\nimport { HOMOLOGATION_AUDITOR_ID } from \"common/model/Notification\";\nimport { HOMOLOGATION_AUDITOR } from \"common/model/Notification\";\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL } from \"common/model/Notification\";\nimport { ID_CONFIG } from 'common/model/WarningConfig';\nimport { NAME } from 'common/model/WarningConfig';\nimport { FISCAL_ACTION } from 'common/model/WarningConfig';\nimport { FISCAL_ACTION_REPORT } from 'common/model/Notification';\nimport { FISCAL_ACTION_DATE } from 'common/model/Notification';\nimport { AWARENESS_DATE } from 'common/model/Notification';\nimport { ID } from 'common/model/Notification';\nimport { EVENT_CREATION_TIMESTAMP } from 'common/model/Event';\nimport { EVENT_VEHICLE_TYPE } from 'common/model/Event';\nimport { EVENT_VEHICLE_MODEL } from 'common/model/Event';\nimport { EVENT_VEHICLE_PLATE } from 'common/model/Event';\nimport { EVENT_LOCAL } from 'common/model/Event';\nimport { HISTORY } from 'common/model/Notification';\nimport { VEHICLE_PLATE } from 'common/model/Notification';\nimport { DESCRIPTION } from 'common/model/WarningConfig';\nimport { DESIGNATION_DATE } from 'common/model/Notification';\nimport { DESIGNATION_REPORT } from 'common/model/Notification';\nimport { FISCAL_ACTION_REPORT_DATE } from 'common/model/Notification';\nimport { FISCAL_NOTIFICATION_STATUS } from 'common/model/Notification';\nimport { FISCAL_NOTIFICATION_PARENT_ID } from 'common/model/Notification';\nimport { AWARENESS_REPORT } from 'common/model/Notification';\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\nimport { HOMOLOGATION_DATE } from \"common/model/Notification\";\nimport { HOMOLOGATION_REPORT } from \"common/model/Notification\";\nimport { SUPERVISION_DATE } from \"common/model/Notification\";\nimport { SUPERVISION_REPORT } from \"common/model/Notification\";\nimport { AWARENESS_AUDITOR_ID } from \"common/model/Notification\";\nimport { AWARENESS_AUDITOR_NAME } from \"common/model/Notification\";\nimport { getNowDateTimeString } from \"common/utils/validate\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { isLocked } from \"common/enumerators/LockEnum\";\nimport { USER_LOGIN } from \"common/model/User\";\nimport { USER_REGISTRATION_ID } from \"common/model/User\";\nimport { USER_NAME } from \"common/model/User\";\nimport { USER_ID } from \"common/model/User\";\nimport { TRAILER_PLATE } from \"common/model/Notification\";\nexport default function useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData) {\n  const setMonitoringUser = (data, monitoringUserData) => {\n    data[MONITORING_USER_ID] = monitoringUserData[USER_ID];\n    data[MONITORING_USER_NAME] = monitoringUserData[USER_NAME];\n    data[MONITORING_USER_REGISTRATION_ID] = monitoringUserData[USER_REGISTRATION_ID];\n    data[MONITORING_USER_LOGIN] = monitoringUserData[USER_LOGIN];\n  };\n\n  const setEventData = (data, notificationObj) => {\n    let event = notificationObj.getEvent();\n    let warningConfig = notificationObj.getWarningConfig();\n    data[ID] = notificationObj.getId();\n    data[NAME] = warningConfig.getName();\n    data[FISCAL_ACTION] = warningConfig.getFiscalAction();\n    data[VEHICLE_PLATE] = event.getVehiclePlate();\n    data[ID_CONFIG] = warningConfig.getIdConfig();\n    data[DESCRIPTION] = warningConfig.getDescription();\n    data[EVENT_VEHICLE_PLATE] = event.getVehiclePlate();\n    data[EVENT_VEHICLE_MODEL] = event.getVehicleModel();\n    data[EVENT_VEHICLE_TYPE] = event.getVehicleType();\n    data[EVENT_LOCAL] = event.getLocal();\n    data[EVENT_CREATION_TIMESTAMP] = event.getCreationTimestamp();\n  };\n\n  const setBasicNoticationData = (data, notificationObj, notificationHistory) => {\n    data[HISTORY] = notificationHistory;\n    data[FISCAL_ACTION_REPORT] = notificationObj.getFiscalActionReport();\n    data[FISCAL_ACTION_DATE] = notificationObj.getFiscalActionDate();\n    if (data[FISCAL_ACTION_DATE] && typeof data[FISCAL_ACTION_DATE] === \"string\") data[FISCAL_ACTION_DATE] = data[FISCAL_ACTION_DATE].split(\"T\");else data[FISCAL_ACTION_DATE] = [\"\", \"\"];\n    data[DESIGNATION_DATE] = notificationObj.getDesignationDate() ? notificationObj.getDesignationDate() : getNowDateTimeString();\n    data[DESIGNATION_REPORT] = notificationObj.getDesignationReport();\n    data[AWARENESS_DATE] = notificationObj.getAwarenessDate();\n    data[AWARENESS_REPORT] = notificationObj.getAwarenessReport();\n    data[HOMOLOGATION_DATE] = notificationObj.getHomologationDate();\n    data[HOMOLOGATION_REPORT] = notificationObj.getHomologationReport();\n    data[SUPERVISION_DATE] = notificationObj.getSupervisionDate();\n    data[SUPERVISION_REPORT] = notificationObj.getSupervisionReport();\n    data[FISCAL_ACTION_REPORT_DATE] = notificationObj.getFiscalActionReportDate();\n    data[FISCAL_NOTIFICATION_STATUS] = notificationObj.getStatus();\n    data[FISCAL_NOTIFICATION_PARENT_ID] = notificationObj.getParentId();\n\n    if (isEmpty(notificationObj.getParentId())) {\n      data[FISCAL_NOTIFICATION_PARENT_ID] = notificationObj.getId();\n    }\n  };\n\n  const setReportData = (data, notificationObj) => {\n    data[REPORT_ENABLED] = notificationObj.getReportEnabled();\n    data[TRAILER_PLATE] = notificationObj.getTraillerPlate();\n    data[REPORT_AI] = notificationObj.getAI();\n    data[REPORT_DAR] = notificationObj.getDar();\n    data[REPORT_PENALTY_VALUE] = notificationObj.getPenaltyValue();\n    data[REPORT_REVENUE_CODE] = notificationObj.getRevenueCode();\n    data[REPORT_PRODUCT_NAME] = notificationObj.getProductName();\n    data[REPORT_CPF_DRIVER] = notificationObj.getCpfDriver();\n    data[REPORT_BOOKED_CPF] = notificationObj.getBookedCpf();\n    data[REPORT_BOOKED_CNPJ] = notificationObj.getBookedCnpj();\n    data[REPORT_BOOKED_IE] = notificationObj.getBookedIE();\n    data[REPORT_LATITUDE] = notificationObj.getLatitude();\n    data[REPORT_LONGITUDE] = notificationObj.getLongitude();\n  };\n\n  const setResponsibles = (data, notificationObj) => {\n    let status = notificationObj.getStatus(); //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS.\n\n    if (status >= NOTIFICATION_STATUS_ENUM.DESIGNADA || isLocked(data)) {\n      let awarenessAuditor = getAuditorRegistry(notificationObj.getAwarenessAuditor(), USER_ID_ENUM.USER_LOGIN);\n      data[AWARENESS_AUDITOR] = notificationObj.getAwarenessAuditor();\n      data[AWARENESS_AUDITOR_ID] = awarenessAuditor[USER_REGISTRATION_ID];\n      data[AWARENESS_AUDITOR_NAME] = awarenessAuditor[USER_NAME];\n      let homologationAuditor = getAuditorRegistry(notificationObj.getHomologationAuditor(), USER_ID_ENUM.USER_LOGIN);\n      data[HOMOLOGATION_AUDITOR] = notificationObj.getHomologationAuditor();\n      data[HOMOLOGATION_AUDITOR_ID] = homologationAuditor[USER_REGISTRATION_ID];\n      data[HOMOLOGATION_AUDITOR_NAME] = homologationAuditor[USER_NAME];\n\n      if (!isEmpty(notificationObj.getSupervisionAuditor())) {\n        let supervisorAuditor = getAuditorRegistry(notificationObj.getSupervisionAuditor(), USER_ID_ENUM.USER_LOGIN);\n        data[SUPERVISION_AUDITOR] = supervisorAuditor[USER_LOGIN];\n        data[SUPERVISION_AUDITOR_ID] = supervisorAuditor[USER_REGISTRATION_ID];\n        data[SUPERVISION_AUDITOR_NAME] = supervisorAuditor[USER_NAME];\n      }\n\n      let monitoringAuditor = getAuditorRegistry(notificationObj.getDesignationAuditor(), USER_ID_ENUM.USER_LOGIN);\n      setMonitoringUser(data, monitoringAuditor);\n      let auditors = {}; //Tratamento para os casos de designação sem comando fiscal.\n\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO) {\n        auditors[EM_MONITORAMENTO] = {\n          USER_NAME: EM_MONITORAMENTO_LABEL,\n          USER_LOGIN: EM_MONITORAMENTO_LABEL\n        };\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\n        auditors[SEM_COMANDO_FISCAL] = {\n          USER_NAME: SEM_COMANDO_FISCAL_LABEL\n        };\n      } else if (!isEmpty(notificationObj.getFiscalActionAuditors())) {\n        for (var auditorID of notificationObj.getFiscalActionAuditors().split(\",\")) {\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN);\n        }\n      }\n\n      data[FISCAL_ACTION_AUDITORS] = auditors;\n    } else {\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA\n      data[MONITORING_USER_NAME] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\";\n\n      if (hasUserLoggedData()) {\n        setMonitoringUser(data, getUserData());\n      }\n\n      if (status === NOTIFICATION_STATUS_ENUM.DELAY) {\n        let auditors = {};\n\n        for (let auditorID of notificationObj.getFiscalActionAuditors().split(\",\")) {\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN);\n        }\n\n        data[FISCAL_ACTION_AUDITORS] = auditors;\n      }\n\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO) {\n        let auditors = {};\n        auditors[EM_MONITORAMENTO] = {\n          USER_NAME: EM_MONITORAMENTO_LABEL,\n          USER_LOGIN: EM_MONITORAMENTO_LABEL\n        };\n        data[FISCAL_ACTION_AUDITORS] = auditors;\n      }\n    }\n  };\n\n  function mountAuditorsResponsibles(formData) {\n    let status = formData[FISCAL_NOTIFICATION_STATUS];\n    let fiscal_action_auditors = formData[FISCAL_ACTION_AUDITORS];\n    console.log(\"STATUS\", status, fiscal_action_auditors); //TODO AVALIAR ESTADO NOVO. \n\n    let monitoringChief = getMonitoringGroupOwner();\n    formData[AWARENESS_AUDITOR] = monitoringChief[USER_LOGIN]; //Se não foi possível acionar o comando fiscal, o responsável pela homologação deve ser o usuário chefe da central de monitoramento\n\n    if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\n      formData[HOMOLOGATION_AUDITOR] = monitoringChief[USER_LOGIN];\n      formData[HOMOLOGATION_AUDITOR_ID] = monitoringChief[USER_REGISTRATION_ID];\n      formData[HOMOLOGATION_AUDITOR_NAME] = monitoringChief[USER_NAME];\n    } else if (!isEmpty(fiscal_action_auditors) && status !== NOTIFICATION_STATUS_ENUM.DELAY && status !== NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO) {\n      //Caso tenha sido  possível acionar o comando fiscal, o responsável pela homologação deve ser o chefe do gerencia da qual o comando fiscal fazem parte\n      let homologationAuditor = getGroupOwnerData(fiscal_action_auditors);\n      formData[HOMOLOGATION_AUDITOR] = homologationAuditor[USER_LOGIN];\n      formData[HOMOLOGATION_AUDITOR_ID] = homologationAuditor[USER_REGISTRATION_ID];\n      formData[HOMOLOGATION_AUDITOR_NAME] = homologationAuditor[USER_NAME];\n      let supervisorAuditor = getGroupSupervisorData(fiscal_action_auditors);\n\n      if (!isEmpty(supervisorAuditor)) {\n        formData[SUPERVISION_AUDITOR] = supervisorAuditor[USER_LOGIN];\n        formData[SUPERVISION_AUDITOR_ID] = supervisorAuditor[USER_REGISTRATION_ID];\n        formData[SUPERVISION_AUDITOR_NAME] = supervisorAuditor[USER_NAME];\n      }\n    } else {\n      formData[HOMOLOGATION_AUDITOR] = \"\";\n      formData[HOMOLOGATION_AUDITOR_ID] = \"\";\n    }\n\n    return formData;\n  }\n\n  const mountEditionData = (notificationObj, notificationHistory) => {\n    let data = {\n      fiscal_action_auditors: {},\n      fiscal_action_homologation_auditor: \"\"\n    };\n\n    if (notificationObj) {\n      setEventData(data, notificationObj);\n      setBasicNoticationData(data, notificationObj, notificationHistory);\n      setReportData(data, notificationObj);\n      setResponsibles(data, notificationObj);\n    }\n\n    return data;\n  };\n\n  return {\n    mountEditionData,\n    mountAuditorsResponsibles\n  };\n}","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/hooks/useNotification.js"],"names":["hasUserLoggedData","getUserData","getUserLogin","USER_ID_ENUM","HOMOLOGATION_AUDITOR_NAME","SUPERVISION_AUDITOR_ID","SUPERVISION_AUDITOR_NAME","MONITORING_USER_ID","MONITORING_USER_LOGIN","REPORT_AI","REPORT_PENALTY_VALUE","REPORT_PRODUCT_NAME","REPORT_BOOKED_CPF","REPORT_BOOKED_IE","REPORT_LONGITUDE","AWARENESS_AUDITOR","REPORT_LATITUDE","REPORT_BOOKED_CNPJ","REPORT_CPF_DRIVER","REPORT_REVENUE_CODE","REPORT_DAR","REPORT_ENABLED","MONITORING_USER_REGISTRATION_ID","SUPERVISION_AUDITOR","MONITORING_USER_NAME","FISCAL_ACTION_AUDITORS","HOMOLOGATION_AUDITOR_ID","HOMOLOGATION_AUDITOR","EM_MONITORAMENTO","EM_MONITORAMENTO_LABEL","SEM_COMANDO_FISCAL","SEM_COMANDO_FISCAL_LABEL","ID_CONFIG","NAME","FISCAL_ACTION","FISCAL_ACTION_REPORT","FISCAL_ACTION_DATE","AWARENESS_DATE","ID","EVENT_CREATION_TIMESTAMP","EVENT_VEHICLE_TYPE","EVENT_VEHICLE_MODEL","EVENT_VEHICLE_PLATE","EVENT_LOCAL","HISTORY","VEHICLE_PLATE","DESCRIPTION","DESIGNATION_DATE","DESIGNATION_REPORT","FISCAL_ACTION_REPORT_DATE","FISCAL_NOTIFICATION_STATUS","FISCAL_NOTIFICATION_PARENT_ID","AWARENESS_REPORT","NOTIFICATION_STATUS_ENUM","HOMOLOGATION_DATE","HOMOLOGATION_REPORT","SUPERVISION_DATE","SUPERVISION_REPORT","AWARENESS_AUDITOR_ID","AWARENESS_AUDITOR_NAME","getNowDateTimeString","isEmpty","isLocked","USER_LOGIN","USER_REGISTRATION_ID","USER_NAME","USER_ID","TRAILER_PLATE","useNotification","getAuditorRegistry","getMonitoringGroupOwner","getGroupOwnerData","getGroupSupervisorData","setMonitoringUser","data","monitoringUserData","setEventData","notificationObj","event","getEvent","warningConfig","getWarningConfig","getId","getName","getFiscalAction","getVehiclePlate","getIdConfig","getDescription","getVehicleModel","getVehicleType","getLocal","getCreationTimestamp","setBasicNoticationData","notificationHistory","getFiscalActionReport","getFiscalActionDate","split","getDesignationDate","getDesignationReport","getAwarenessDate","getAwarenessReport","getHomologationDate","getHomologationReport","getSupervisionDate","getSupervisionReport","getFiscalActionReportDate","getStatus","getParentId","setReportData","getReportEnabled","getTraillerPlate","getAI","getDar","getPenaltyValue","getRevenueCode","getProductName","getCpfDriver","getBookedCpf","getBookedCnpj","getBookedIE","getLatitude","getLongitude","setResponsibles","status","DESIGNADA","awarenessAuditor","getAwarenessAuditor","homologationAuditor","getHomologationAuditor","getSupervisionAuditor","supervisorAuditor","monitoringAuditor","getDesignationAuditor","auditors","EM_MONITORAMENTO_HOMOLOGADO","SEM_COMANDO","SEM_COMANDO_HOMOLOGADA","getFiscalActionAuditors","auditorID","DELAY","mountAuditorsResponsibles","formData","fiscal_action_auditors","console","log","monitoringChief","mountEditionData","fiscal_action_homologation_auditor"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,wBAAT,QAAyC,2BAAzC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,+BAAT,QAAgD,2BAAhD;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,EAAmDC,kBAAnD,EAAuEC,wBAAvE,QAAwG,2BAAxG;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,EAAT,QAAmB,2BAAnB;AACA,SAASC,wBAAT,QAAyC,oBAAzC;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AACA,SAASC,0BAAT,QAA2C,2BAA3C;AACA,SAASC,6BAAT,QAA8C,2BAA9C;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,wBAAP,MAAqC,uCAArC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAGA,eAAe,SAASC,eAAT,CAAyBC,kBAAzB,EAA6CC,uBAA7C,EAAsEC,iBAAtE,EAAyFC,sBAAzF,EAAiH;AAE9H,QAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,kBAAP,KAA8B;AACtDD,IAAAA,IAAI,CAACnE,kBAAD,CAAJ,GAA2BoE,kBAAkB,CAACT,OAAD,CAA7C;AACAQ,IAAAA,IAAI,CAAClD,oBAAD,CAAJ,GAA6BmD,kBAAkB,CAACV,SAAD,CAA/C;AACAS,IAAAA,IAAI,CAACpD,+BAAD,CAAJ,GAAwCqD,kBAAkB,CAACX,oBAAD,CAA1D;AACAU,IAAAA,IAAI,CAAClE,qBAAD,CAAJ,GAA8BmE,kBAAkB,CAACZ,UAAD,CAAhD;AACD,GALD;;AAOA,QAAMa,YAAY,GAAG,CAACF,IAAD,EAAOG,eAAP,KAA2B;AAC9C,QAAIC,KAAK,GAAGD,eAAe,CAACE,QAAhB,EAAZ;AACA,QAAIC,aAAa,GAAGH,eAAe,CAACI,gBAAhB,EAApB;AAGAP,IAAAA,IAAI,CAACpC,EAAD,CAAJ,GAAWuC,eAAe,CAACK,KAAhB,EAAX;AACAR,IAAAA,IAAI,CAACzC,IAAD,CAAJ,GAAa+C,aAAa,CAACG,OAAd,EAAb;AAEAT,IAAAA,IAAI,CAACxC,aAAD,CAAJ,GAAsB8C,aAAa,CAACI,eAAd,EAAtB;AACAV,IAAAA,IAAI,CAAC7B,aAAD,CAAJ,GAAsBiC,KAAK,CAACO,eAAN,EAAtB;AACAX,IAAAA,IAAI,CAAC1C,SAAD,CAAJ,GAAkBgD,aAAa,CAACM,WAAd,EAAlB;AACAZ,IAAAA,IAAI,CAAC5B,WAAD,CAAJ,GAAoBkC,aAAa,CAACO,cAAd,EAApB;AACAb,IAAAA,IAAI,CAAChC,mBAAD,CAAJ,GAA4BoC,KAAK,CAACO,eAAN,EAA5B;AACAX,IAAAA,IAAI,CAACjC,mBAAD,CAAJ,GAA4BqC,KAAK,CAACU,eAAN,EAA5B;AACAd,IAAAA,IAAI,CAAClC,kBAAD,CAAJ,GAA2BsC,KAAK,CAACW,cAAN,EAA3B;AACAf,IAAAA,IAAI,CAAC/B,WAAD,CAAJ,GAAoBmC,KAAK,CAACY,QAAN,EAApB;AACAhB,IAAAA,IAAI,CAACnC,wBAAD,CAAJ,GAAiCuC,KAAK,CAACa,oBAAN,EAAjC;AAED,GAlBD;;AAqBA,QAAMC,sBAAsB,GAAG,CAAClB,IAAD,EAAOG,eAAP,EAAwBgB,mBAAxB,KAAgD;AAC7EnB,IAAAA,IAAI,CAAC9B,OAAD,CAAJ,GAAgBiD,mBAAhB;AACAnB,IAAAA,IAAI,CAACvC,oBAAD,CAAJ,GAA6B0C,eAAe,CAACiB,qBAAhB,EAA7B;AACApB,IAAAA,IAAI,CAACtC,kBAAD,CAAJ,GAA2ByC,eAAe,CAACkB,mBAAhB,EAA3B;AACA,QAAIrB,IAAI,CAACtC,kBAAD,CAAJ,IAA4B,OAAQsC,IAAI,CAACtC,kBAAD,CAAZ,KAAsC,QAAtE,EACEsC,IAAI,CAACtC,kBAAD,CAAJ,GAA2BsC,IAAI,CAACtC,kBAAD,CAAJ,CAAyB4D,KAAzB,CAA+B,GAA/B,CAA3B,CADF,KAGEtB,IAAI,CAACtC,kBAAD,CAAJ,GAA2B,CAAC,EAAD,EAAK,EAAL,CAA3B;AAEFsC,IAAAA,IAAI,CAAC3B,gBAAD,CAAJ,GAAyB8B,eAAe,CAACoB,kBAAhB,KAAuCpB,eAAe,CAACoB,kBAAhB,EAAvC,GAA8ErC,oBAAoB,EAA3H;AACAc,IAAAA,IAAI,CAAC1B,kBAAD,CAAJ,GAA2B6B,eAAe,CAACqB,oBAAhB,EAA3B;AACAxB,IAAAA,IAAI,CAACrC,cAAD,CAAJ,GAAuBwC,eAAe,CAACsB,gBAAhB,EAAvB;AACAzB,IAAAA,IAAI,CAACtB,gBAAD,CAAJ,GAAyByB,eAAe,CAACuB,kBAAhB,EAAzB;AACA1B,IAAAA,IAAI,CAACpB,iBAAD,CAAJ,GAA0BuB,eAAe,CAACwB,mBAAhB,EAA1B;AACA3B,IAAAA,IAAI,CAACnB,mBAAD,CAAJ,GAA4BsB,eAAe,CAACyB,qBAAhB,EAA5B;AACA5B,IAAAA,IAAI,CAAClB,gBAAD,CAAJ,GAAyBqB,eAAe,CAAC0B,kBAAhB,EAAzB;AACA7B,IAAAA,IAAI,CAACjB,kBAAD,CAAJ,GAA2BoB,eAAe,CAAC2B,oBAAhB,EAA3B;AAEA9B,IAAAA,IAAI,CAACzB,yBAAD,CAAJ,GAAkC4B,eAAe,CAAC4B,yBAAhB,EAAlC;AACA/B,IAAAA,IAAI,CAACxB,0BAAD,CAAJ,GAAmC2B,eAAe,CAAC6B,SAAhB,EAAnC;AACAhC,IAAAA,IAAI,CAACvB,6BAAD,CAAJ,GAAsC0B,eAAe,CAAC8B,WAAhB,EAAtC;;AACA,QAAI9C,OAAO,CAACgB,eAAe,CAAC8B,WAAhB,EAAD,CAAX,EAA4C;AAC1CjC,MAAAA,IAAI,CAACvB,6BAAD,CAAJ,GAAsC0B,eAAe,CAACK,KAAhB,EAAtC;AACD;AAEF,GAzBD;;AA2BA,QAAM0B,aAAa,GAAG,CAAClC,IAAD,EAAOG,eAAP,KAA2B;AAC/CH,IAAAA,IAAI,CAACrD,cAAD,CAAJ,GAAuBwD,eAAe,CAACgC,gBAAhB,EAAvB;AACAnC,IAAAA,IAAI,CAACP,aAAD,CAAJ,GAAsBU,eAAe,CAACiC,gBAAhB,EAAtB;AACApC,IAAAA,IAAI,CAACjE,SAAD,CAAJ,GAAkBoE,eAAe,CAACkC,KAAhB,EAAlB;AACArC,IAAAA,IAAI,CAACtD,UAAD,CAAJ,GAAmByD,eAAe,CAACmC,MAAhB,EAAnB;AACAtC,IAAAA,IAAI,CAAChE,oBAAD,CAAJ,GAA6BmE,eAAe,CAACoC,eAAhB,EAA7B;AACAvC,IAAAA,IAAI,CAACvD,mBAAD,CAAJ,GAA4B0D,eAAe,CAACqC,cAAhB,EAA5B;AACAxC,IAAAA,IAAI,CAAC/D,mBAAD,CAAJ,GAA4BkE,eAAe,CAACsC,cAAhB,EAA5B;AACAzC,IAAAA,IAAI,CAACxD,iBAAD,CAAJ,GAA0B2D,eAAe,CAACuC,YAAhB,EAA1B;AACA1C,IAAAA,IAAI,CAAC9D,iBAAD,CAAJ,GAA0BiE,eAAe,CAACwC,YAAhB,EAA1B;AACA3C,IAAAA,IAAI,CAACzD,kBAAD,CAAJ,GAA2B4D,eAAe,CAACyC,aAAhB,EAA3B;AACA5C,IAAAA,IAAI,CAAC7D,gBAAD,CAAJ,GAAyBgE,eAAe,CAAC0C,WAAhB,EAAzB;AACA7C,IAAAA,IAAI,CAAC1D,eAAD,CAAJ,GAAwB6D,eAAe,CAAC2C,WAAhB,EAAxB;AACA9C,IAAAA,IAAI,CAAC5D,gBAAD,CAAJ,GAAyB+D,eAAe,CAAC4C,YAAhB,EAAzB;AACD,GAdD;;AAgBA,QAAMC,eAAe,GAAG,CAAChD,IAAD,EAAOG,eAAP,KAA2B;AACjD,QAAI8C,MAAM,GAAG9C,eAAe,CAAC6B,SAAhB,EAAb,CADiD,CAGjD;;AACA,QAAIiB,MAAM,IAAItE,wBAAwB,CAACuE,SAAnC,IAAgD9D,QAAQ,CAACY,IAAD,CAA5D,EAAoE;AAElE,UAAImD,gBAAgB,GAAGxD,kBAAkB,CAACQ,eAAe,CAACiD,mBAAhB,EAAD,EAAwC3H,YAAY,CAAC4D,UAArD,CAAzC;AACAW,MAAAA,IAAI,CAAC3D,iBAAD,CAAJ,GAA0B8D,eAAe,CAACiD,mBAAhB,EAA1B;AACApD,MAAAA,IAAI,CAAChB,oBAAD,CAAJ,GAA6BmE,gBAAgB,CAAC7D,oBAAD,CAA7C;AACAU,MAAAA,IAAI,CAACf,sBAAD,CAAJ,GAA+BkE,gBAAgB,CAAC5D,SAAD,CAA/C;AAEA,UAAI8D,mBAAmB,GAAG1D,kBAAkB,CAACQ,eAAe,CAACmD,sBAAhB,EAAD,EAA2C7H,YAAY,CAAC4D,UAAxD,CAA5C;AACAW,MAAAA,IAAI,CAAC/C,oBAAD,CAAJ,GAA6BkD,eAAe,CAACmD,sBAAhB,EAA7B;AACAtD,MAAAA,IAAI,CAAChD,uBAAD,CAAJ,GAAgCqG,mBAAmB,CAAC/D,oBAAD,CAAnD;AACAU,MAAAA,IAAI,CAACtE,yBAAD,CAAJ,GAAkC2H,mBAAmB,CAAC9D,SAAD,CAArD;;AAGA,UAAI,CAACJ,OAAO,CAACgB,eAAe,CAACoD,qBAAhB,EAAD,CAAZ,EAAuD;AACrD,YAAIC,iBAAiB,GAAG7D,kBAAkB,CAACQ,eAAe,CAACoD,qBAAhB,EAAD,EAA0C9H,YAAY,CAAC4D,UAAvD,CAA1C;AACAW,QAAAA,IAAI,CAACnD,mBAAD,CAAJ,GAA4B2G,iBAAiB,CAACnE,UAAD,CAA7C;AACAW,QAAAA,IAAI,CAACrE,sBAAD,CAAJ,GAA+B6H,iBAAiB,CAAClE,oBAAD,CAAhD;AACAU,QAAAA,IAAI,CAACpE,wBAAD,CAAJ,GAAiC4H,iBAAiB,CAACjE,SAAD,CAAlD;AACD;;AAED,UAAIkE,iBAAiB,GAAG9D,kBAAkB,CAACQ,eAAe,CAACuD,qBAAhB,EAAD,EAA0CjI,YAAY,CAAC4D,UAAvD,CAA1C;AACAU,MAAAA,iBAAiB,CAACC,IAAD,EAAOyD,iBAAP,CAAjB;AAGA,UAAIE,QAAQ,GAAG,EAAf,CAxBkE,CAyBlE;;AACA,UAAIV,MAAM,KAAKtE,wBAAwB,CAACzB,gBAApC,IAAwD+F,MAAM,KAAKtE,wBAAwB,CAACiF,2BAAhG,EAA6H;AAC3HD,QAAAA,QAAQ,CAACzG,gBAAD,CAAR,GAA6B;AAAEqC,UAAAA,SAAS,EAAEpC,sBAAb;AAAqCkC,UAAAA,UAAU,EAAElC;AAAjD,SAA7B;AACD,OAFD,MAEO,IAAI8F,MAAM,KAAKtE,wBAAwB,CAACkF,WAApC,IAAmDZ,MAAM,KAAKtE,wBAAwB,CAACmF,sBAA3F,EAAmH;AACxHH,QAAAA,QAAQ,CAACvG,kBAAD,CAAR,GAA+B;AAAEmC,UAAAA,SAAS,EAAElC;AAAb,SAA/B;AACD,OAFM,MAEA,IAAI,CAAC8B,OAAO,CAACgB,eAAe,CAAC4D,uBAAhB,EAAD,CAAZ,EAAyD;AAE9D,aAAK,IAAIC,SAAT,IAAsB7D,eAAe,CAAC4D,uBAAhB,GAA0CzC,KAA1C,CAAgD,GAAhD,CAAtB,EAA4E;AAC1EqC,UAAAA,QAAQ,CAACK,SAAD,CAAR,GAAsBrE,kBAAkB,CAACqE,SAAD,EAAYvI,YAAY,CAAC4D,UAAzB,CAAxC;AACD;AACF;;AAEDW,MAAAA,IAAI,CAACjD,sBAAD,CAAJ,GAA+B4G,QAA/B;AAED,KAvCD,MAuCO;AACL;AACA3D,MAAAA,IAAI,CAAClD,oBAAD,CAAJ,GAA6BtB,YAAY,KAAK,0BAA9C;;AAEA,UAAIF,iBAAiB,EAArB,EAAyB;AACvByE,QAAAA,iBAAiB,CAACC,IAAD,EAAOzE,WAAW,EAAlB,CAAjB;AACD;;AAED,UAAI0H,MAAM,KAAKtE,wBAAwB,CAACsF,KAAxC,EAA+C;AAE7C,YAAIN,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIK,SAAT,IAAsB7D,eAAe,CAAC4D,uBAAhB,GAA0CzC,KAA1C,CAAgD,GAAhD,CAAtB,EAA4E;AAC1EqC,UAAAA,QAAQ,CAACK,SAAD,CAAR,GAAsBrE,kBAAkB,CAACqE,SAAD,EAAYvI,YAAY,CAAC4D,UAAzB,CAAxC;AACD;;AACDW,QAAAA,IAAI,CAACjD,sBAAD,CAAJ,GAA+B4G,QAA/B;AAED;;AAED,UAAIV,MAAM,KAAKtE,wBAAwB,CAACzB,gBAApC,IAAwD+F,MAAM,KAAKtE,wBAAwB,CAACiF,2BAAhG,EAA6H;AAC3H,YAAID,QAAQ,GAAG,EAAf;AACAA,QAAAA,QAAQ,CAACzG,gBAAD,CAAR,GAA6B;AAAEqC,UAAAA,SAAS,EAAEpC,sBAAb;AAAqCkC,UAAAA,UAAU,EAAElC;AAAjD,SAA7B;AACA6C,QAAAA,IAAI,CAACjD,sBAAD,CAAJ,GAA+B4G,QAA/B;AACD;AACF;AACF,GAnED;;AAqEA,WAASO,yBAAT,CAAmCC,QAAnC,EAA6C;AAE3C,QAAIlB,MAAM,GAAGkB,QAAQ,CAAC3F,0BAAD,CAArB;AACA,QAAI4F,sBAAsB,GAAGD,QAAQ,CAACpH,sBAAD,CAArC;AAEAsH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBrB,MAAtB,EAA8BmB,sBAA9B,EAL2C,CAM3C;;AACA,QAAIG,eAAe,GAAG3E,uBAAuB,EAA7C;AACAuE,IAAAA,QAAQ,CAAC9H,iBAAD,CAAR,GAA8BkI,eAAe,CAAClF,UAAD,CAA7C,CAR2C,CAU3C;;AACA,QAAI4D,MAAM,KAAKtE,wBAAwB,CAACkF,WAApC,IAAmDZ,MAAM,KAAKtE,wBAAwB,CAACmF,sBAA3F,EAAmH;AACjHK,MAAAA,QAAQ,CAAClH,oBAAD,CAAR,GAAiCsH,eAAe,CAAClF,UAAD,CAAhD;AACA8E,MAAAA,QAAQ,CAACnH,uBAAD,CAAR,GAAoCuH,eAAe,CAACjF,oBAAD,CAAnD;AACA6E,MAAAA,QAAQ,CAACzI,yBAAD,CAAR,GAAsC6I,eAAe,CAAChF,SAAD,CAArD;AAED,KALD,MAKQ,IAAI,CAACJ,OAAO,CAACiF,sBAAD,CAAR,IAAqCnB,MAAM,KAAKtE,wBAAwB,CAACsF,KAApC,IAA6ChB,MAAM,KAAKtE,wBAAwB,CAACzB,gBAA1H,EAA6I;AACnJ;AACA,UAAImG,mBAAmB,GAAGxD,iBAAiB,CAACuE,sBAAD,CAA3C;AACAD,MAAAA,QAAQ,CAAClH,oBAAD,CAAR,GAAiCoG,mBAAmB,CAAChE,UAAD,CAApD;AACA8E,MAAAA,QAAQ,CAACnH,uBAAD,CAAR,GAAoCqG,mBAAmB,CAAC/D,oBAAD,CAAvD;AACA6E,MAAAA,QAAQ,CAACzI,yBAAD,CAAR,GAAsC2H,mBAAmB,CAAC9D,SAAD,CAAzD;AAEA,UAAIiE,iBAAiB,GAAG1D,sBAAsB,CAACsE,sBAAD,CAA9C;;AACA,UAAI,CAACjF,OAAO,CAACqE,iBAAD,CAAZ,EAAiC;AAC/BW,QAAAA,QAAQ,CAACtH,mBAAD,CAAR,GAAgC2G,iBAAiB,CAACnE,UAAD,CAAjD;AACA8E,QAAAA,QAAQ,CAACxI,sBAAD,CAAR,GAAmC6H,iBAAiB,CAAClE,oBAAD,CAApD;AACA6E,QAAAA,QAAQ,CAACvI,wBAAD,CAAR,GAAqC4H,iBAAiB,CAACjE,SAAD,CAAtD;AACD;AAEF,KAdO,MAcD;AACL4E,MAAAA,QAAQ,CAAClH,oBAAD,CAAR,GAAiC,EAAjC;AACAkH,MAAAA,QAAQ,CAACnH,uBAAD,CAAR,GAAoC,EAApC;AACD;;AAED,WAAOmH,QAAP;AAED;;AAGD,QAAMK,gBAAgB,GAAG,CAACrE,eAAD,EAAkBgB,mBAAlB,KAA0C;AACjE,QAAInB,IAAI,GAAG;AAAEoE,MAAAA,sBAAsB,EAAE,EAA1B;AAA8BK,MAAAA,kCAAkC,EAAE;AAAlE,KAAX;;AAEA,QAAItE,eAAJ,EAAqB;AAEnBD,MAAAA,YAAY,CAACF,IAAD,EAAOG,eAAP,CAAZ;AACAe,MAAAA,sBAAsB,CAAClB,IAAD,EAAOG,eAAP,EAAwBgB,mBAAxB,CAAtB;AACAe,MAAAA,aAAa,CAAClC,IAAD,EAAOG,eAAP,CAAb;AACA6C,MAAAA,eAAe,CAAChD,IAAD,EAAOG,eAAP,CAAf;AACD;;AAED,WAAOH,IAAP;AACD,GAZD;;AAcA,SAAO;AAAEwE,IAAAA,gBAAF;AAAoBN,IAAAA;AAApB,GAAP;AAED","sourcesContent":["import { hasUserLoggedData } from \"common/SessionUtils\"\r\nimport { getUserData } from \"common/SessionUtils\"\r\nimport { getUserLogin } from \"common/SessionUtils\"\r\nimport USER_ID_ENUM from \"common/enumerators/UserIdEnum\"\r\nimport { HOMOLOGATION_AUDITOR_NAME } from \"common/model/Notification\"\r\nimport { SUPERVISION_AUDITOR_ID } from \"common/model/Notification\"\r\nimport { SUPERVISION_AUDITOR_NAME } from \"common/model/Notification\"\r\nimport { MONITORING_USER_ID } from \"common/model/Notification\"\r\nimport { MONITORING_USER_LOGIN } from \"common/model/Notification\"\r\nimport { REPORT_AI } from \"common/model/Notification\"\r\nimport { REPORT_PENALTY_VALUE } from \"common/model/Notification\"\r\nimport { REPORT_PRODUCT_NAME } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_CPF } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_IE } from \"common/model/Notification\"\r\nimport { REPORT_LONGITUDE } from \"common/model/Notification\"\r\nimport { AWARENESS_AUDITOR } from \"common/model/Notification\"\r\nimport { REPORT_LATITUDE } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_CNPJ } from \"common/model/Notification\"\r\nimport { REPORT_CPF_DRIVER } from \"common/model/Notification\"\r\nimport { REPORT_REVENUE_CODE } from \"common/model/Notification\"\r\nimport { REPORT_DAR } from \"common/model/Notification\"\r\nimport { REPORT_ENABLED } from \"common/model/Notification\"\r\nimport { MONITORING_USER_REGISTRATION_ID } from \"common/model/Notification\"\r\nimport { SUPERVISION_AUDITOR } from \"common/model/Notification\"\r\nimport { MONITORING_USER_NAME } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\"\r\nimport { HOMOLOGATION_AUDITOR_ID } from \"common/model/Notification\"\r\nimport { HOMOLOGATION_AUDITOR } from \"common/model/Notification\"\r\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL  } from \"common/model/Notification\";\r\nimport { ID_CONFIG } from 'common/model/WarningConfig';\r\nimport { NAME } from 'common/model/WarningConfig';\r\nimport { FISCAL_ACTION } from 'common/model/WarningConfig';\r\nimport { FISCAL_ACTION_REPORT } from 'common/model/Notification';\r\nimport { FISCAL_ACTION_DATE } from 'common/model/Notification';\r\nimport { AWARENESS_DATE } from 'common/model/Notification';\r\nimport { ID } from 'common/model/Notification';\r\nimport { EVENT_CREATION_TIMESTAMP } from 'common/model/Event';\r\nimport { EVENT_VEHICLE_TYPE } from 'common/model/Event';\r\nimport { EVENT_VEHICLE_MODEL } from 'common/model/Event';\r\nimport { EVENT_VEHICLE_PLATE } from 'common/model/Event';\r\nimport { EVENT_LOCAL } from 'common/model/Event';\r\nimport { HISTORY } from 'common/model/Notification';\r\nimport { VEHICLE_PLATE } from 'common/model/Notification';\r\nimport { DESCRIPTION } from 'common/model/WarningConfig';\r\nimport { DESIGNATION_DATE } from 'common/model/Notification';\r\nimport { DESIGNATION_REPORT } from 'common/model/Notification';\r\nimport { FISCAL_ACTION_REPORT_DATE } from 'common/model/Notification';\r\nimport { FISCAL_NOTIFICATION_STATUS } from 'common/model/Notification';\r\nimport { FISCAL_NOTIFICATION_PARENT_ID } from 'common/model/Notification';\r\nimport { AWARENESS_REPORT } from 'common/model/Notification';\r\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\r\nimport { HOMOLOGATION_DATE } from \"common/model/Notification\"\r\nimport { HOMOLOGATION_REPORT } from \"common/model/Notification\"\r\nimport { SUPERVISION_DATE } from \"common/model/Notification\"\r\nimport { SUPERVISION_REPORT } from \"common/model/Notification\"\r\nimport { AWARENESS_AUDITOR_ID } from \"common/model/Notification\"\r\nimport { AWARENESS_AUDITOR_NAME } from \"common/model/Notification\"\r\nimport { getNowDateTimeString } from \"common/utils/validate\"\r\nimport { isEmpty } from \"common/utils/collections\"\r\nimport { isLocked } from \"common/enumerators/LockEnum\"\r\nimport { USER_LOGIN } from \"common/model/User\"\r\nimport { USER_REGISTRATION_ID } from \"common/model/User\"\r\nimport { USER_NAME } from \"common/model/User\"\r\nimport { USER_ID } from \"common/model/User\"\r\nimport { TRAILER_PLATE } from \"common/model/Notification\"\r\n\r\n\r\nexport default function useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData) {\r\n\r\n  const setMonitoringUser = (data, monitoringUserData) => {\r\n    data[MONITORING_USER_ID] = monitoringUserData[USER_ID]\r\n    data[MONITORING_USER_NAME] = monitoringUserData[USER_NAME]\r\n    data[MONITORING_USER_REGISTRATION_ID] = monitoringUserData[USER_REGISTRATION_ID]\r\n    data[MONITORING_USER_LOGIN] = monitoringUserData[USER_LOGIN]\r\n  }\r\n\r\n  const setEventData = (data, notificationObj) => {\r\n    let event = notificationObj.getEvent()\r\n    let warningConfig = notificationObj.getWarningConfig()\r\n\r\n\r\n    data[ID] = notificationObj.getId()\r\n    data[NAME] = warningConfig.getName()\r\n\r\n    data[FISCAL_ACTION] = warningConfig.getFiscalAction()\r\n    data[VEHICLE_PLATE] = event.getVehiclePlate()\r\n    data[ID_CONFIG] = warningConfig.getIdConfig()\r\n    data[DESCRIPTION] = warningConfig.getDescription()\r\n    data[EVENT_VEHICLE_PLATE] = event.getVehiclePlate()\r\n    data[EVENT_VEHICLE_MODEL] = event.getVehicleModel()\r\n    data[EVENT_VEHICLE_TYPE] = event.getVehicleType()\r\n    data[EVENT_LOCAL] = event.getLocal()\r\n    data[EVENT_CREATION_TIMESTAMP] = event.getCreationTimestamp()\r\n\r\n  }\r\n\r\n\r\n  const setBasicNoticationData = (data, notificationObj, notificationHistory) => {\r\n    data[HISTORY] = notificationHistory\r\n    data[FISCAL_ACTION_REPORT] = notificationObj.getFiscalActionReport()\r\n    data[FISCAL_ACTION_DATE] = notificationObj.getFiscalActionDate()\r\n    if (data[FISCAL_ACTION_DATE] && typeof (data[FISCAL_ACTION_DATE]) === \"string\")\r\n      data[FISCAL_ACTION_DATE] = data[FISCAL_ACTION_DATE].split(\"T\")\r\n    else\r\n      data[FISCAL_ACTION_DATE] = [\"\", \"\"]\r\n\r\n    data[DESIGNATION_DATE] = notificationObj.getDesignationDate() ? notificationObj.getDesignationDate() : getNowDateTimeString()\r\n    data[DESIGNATION_REPORT] = notificationObj.getDesignationReport()\r\n    data[AWARENESS_DATE] = notificationObj.getAwarenessDate()  \r\n    data[AWARENESS_REPORT] = notificationObj.getAwarenessReport()\r\n    data[HOMOLOGATION_DATE] = notificationObj.getHomologationDate()\r\n    data[HOMOLOGATION_REPORT] = notificationObj.getHomologationReport()\r\n    data[SUPERVISION_DATE] = notificationObj.getSupervisionDate()  \r\n    data[SUPERVISION_REPORT] = notificationObj.getSupervisionReport()\r\n\r\n    data[FISCAL_ACTION_REPORT_DATE] = notificationObj.getFiscalActionReportDate()\r\n    data[FISCAL_NOTIFICATION_STATUS] = notificationObj.getStatus()\r\n    data[FISCAL_NOTIFICATION_PARENT_ID] = notificationObj.getParentId()\r\n    if (isEmpty(notificationObj.getParentId())) {\r\n      data[FISCAL_NOTIFICATION_PARENT_ID] = notificationObj.getId()\r\n    }\r\n\r\n  }\r\n\r\n  const setReportData = (data, notificationObj) => {\r\n    data[REPORT_ENABLED] = notificationObj.getReportEnabled()\r\n    data[TRAILER_PLATE] = notificationObj.getTraillerPlate()\r\n    data[REPORT_AI] = notificationObj.getAI()\r\n    data[REPORT_DAR] = notificationObj.getDar()\r\n    data[REPORT_PENALTY_VALUE] = notificationObj.getPenaltyValue()\r\n    data[REPORT_REVENUE_CODE] = notificationObj.getRevenueCode()\r\n    data[REPORT_PRODUCT_NAME] = notificationObj.getProductName()\r\n    data[REPORT_CPF_DRIVER] = notificationObj.getCpfDriver()\r\n    data[REPORT_BOOKED_CPF] = notificationObj.getBookedCpf()\r\n    data[REPORT_BOOKED_CNPJ] = notificationObj.getBookedCnpj()\r\n    data[REPORT_BOOKED_IE] = notificationObj.getBookedIE()\r\n    data[REPORT_LATITUDE] = notificationObj.getLatitude()\r\n    data[REPORT_LONGITUDE] = notificationObj.getLongitude()\r\n  }\r\n\r\n  const setResponsibles = (data, notificationObj) => {\r\n    let status = notificationObj.getStatus()\r\n\r\n    //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS.\r\n    if (status >= NOTIFICATION_STATUS_ENUM.DESIGNADA || isLocked(data)) {\r\n\r\n      let awarenessAuditor = getAuditorRegistry(notificationObj.getAwarenessAuditor(), USER_ID_ENUM.USER_LOGIN)\r\n      data[AWARENESS_AUDITOR] = notificationObj.getAwarenessAuditor()\r\n      data[AWARENESS_AUDITOR_ID] = awarenessAuditor[USER_REGISTRATION_ID]\r\n      data[AWARENESS_AUDITOR_NAME] = awarenessAuditor[USER_NAME]\r\n\r\n      let homologationAuditor = getAuditorRegistry(notificationObj.getHomologationAuditor(), USER_ID_ENUM.USER_LOGIN)\r\n      data[HOMOLOGATION_AUDITOR] = notificationObj.getHomologationAuditor()\r\n      data[HOMOLOGATION_AUDITOR_ID] = homologationAuditor[USER_REGISTRATION_ID]\r\n      data[HOMOLOGATION_AUDITOR_NAME] = homologationAuditor[USER_NAME]\r\n\r\n\r\n      if (!isEmpty(notificationObj.getSupervisionAuditor())) {\r\n        let supervisorAuditor = getAuditorRegistry(notificationObj.getSupervisionAuditor(), USER_ID_ENUM.USER_LOGIN)\r\n        data[SUPERVISION_AUDITOR] = supervisorAuditor[USER_LOGIN]\r\n        data[SUPERVISION_AUDITOR_ID] = supervisorAuditor[USER_REGISTRATION_ID]\r\n        data[SUPERVISION_AUDITOR_NAME] = supervisorAuditor[USER_NAME]\r\n      }\r\n\r\n      let monitoringAuditor = getAuditorRegistry(notificationObj.getDesignationAuditor(), USER_ID_ENUM.USER_LOGIN)\r\n      setMonitoringUser(data, monitoringAuditor)\r\n\r\n\r\n      let auditors = {}\r\n      //Tratamento para os casos de designação sem comando fiscal.\r\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO) {\r\n        auditors[EM_MONITORAMENTO] = { USER_NAME: EM_MONITORAMENTO_LABEL, USER_LOGIN: EM_MONITORAMENTO_LABEL }\r\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\r\n        auditors[SEM_COMANDO_FISCAL] = { USER_NAME: SEM_COMANDO_FISCAL_LABEL }\r\n      } else if (!isEmpty(notificationObj.getFiscalActionAuditors())) {\r\n\r\n        for (var auditorID of notificationObj.getFiscalActionAuditors().split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN)\r\n        }\r\n      }\r\n\r\n      data[FISCAL_ACTION_AUDITORS] = auditors\r\n\r\n    } else {\r\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA\r\n      data[MONITORING_USER_NAME] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n      if (hasUserLoggedData()) {\r\n        setMonitoringUser(data, getUserData())\r\n      }\r\n\r\n      if (status === NOTIFICATION_STATUS_ENUM.DELAY) {\r\n\r\n        let auditors = {}\r\n        for (let auditorID of notificationObj.getFiscalActionAuditors().split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN)\r\n        }\r\n        data[FISCAL_ACTION_AUDITORS] = auditors\r\n\r\n      }\r\n\r\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO) {\r\n        let auditors = {}\r\n        auditors[EM_MONITORAMENTO] = { USER_NAME: EM_MONITORAMENTO_LABEL, USER_LOGIN: EM_MONITORAMENTO_LABEL }\r\n        data[FISCAL_ACTION_AUDITORS] = auditors\r\n      }\r\n    }\r\n  }\r\n\r\n  function mountAuditorsResponsibles(formData) {\r\n\r\n    let status = formData[FISCAL_NOTIFICATION_STATUS]\r\n    let fiscal_action_auditors = formData[FISCAL_ACTION_AUDITORS]\r\n\r\n    console.log(\"STATUS\", status, fiscal_action_auditors)\r\n    //TODO AVALIAR ESTADO NOVO. \r\n    let monitoringChief = getMonitoringGroupOwner()\r\n    formData[AWARENESS_AUDITOR] = monitoringChief[USER_LOGIN]\r\n\r\n    //Se não foi possível acionar o comando fiscal, o responsável pela homologação deve ser o usuário chefe da central de monitoramento\r\n    if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\r\n      formData[HOMOLOGATION_AUDITOR] = monitoringChief[USER_LOGIN]\r\n      formData[HOMOLOGATION_AUDITOR_ID] = monitoringChief[USER_REGISTRATION_ID]\r\n      formData[HOMOLOGATION_AUDITOR_NAME] = monitoringChief[USER_NAME]\r\n\r\n    }  else if (!isEmpty(fiscal_action_auditors) && (status !== NOTIFICATION_STATUS_ENUM.DELAY && status !== NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO)) {\r\n      //Caso tenha sido  possível acionar o comando fiscal, o responsável pela homologação deve ser o chefe do gerencia da qual o comando fiscal fazem parte\r\n      let homologationAuditor = getGroupOwnerData(fiscal_action_auditors)\r\n      formData[HOMOLOGATION_AUDITOR] = homologationAuditor[USER_LOGIN]\r\n      formData[HOMOLOGATION_AUDITOR_ID] = homologationAuditor[USER_REGISTRATION_ID]\r\n      formData[HOMOLOGATION_AUDITOR_NAME] = homologationAuditor[USER_NAME]\r\n\r\n      let supervisorAuditor = getGroupSupervisorData(fiscal_action_auditors)\r\n      if (!isEmpty(supervisorAuditor)) {\r\n        formData[SUPERVISION_AUDITOR] = supervisorAuditor[USER_LOGIN]\r\n        formData[SUPERVISION_AUDITOR_ID] = supervisorAuditor[USER_REGISTRATION_ID]\r\n        formData[SUPERVISION_AUDITOR_NAME] = supervisorAuditor[USER_NAME]\r\n      }\r\n\r\n    } else {\r\n      formData[HOMOLOGATION_AUDITOR] = \"\"\r\n      formData[HOMOLOGATION_AUDITOR_ID] = \"\"\r\n    }\r\n\r\n    return formData\r\n\r\n  }\r\n\r\n\r\n  const mountEditionData = (notificationObj, notificationHistory) => {\r\n    let data = { fiscal_action_auditors: {}, fiscal_action_homologation_auditor: \"\" }\r\n\r\n    if (notificationObj) {\r\n\r\n      setEventData(data, notificationObj)\r\n      setBasicNoticationData(data, notificationObj, notificationHistory)\r\n      setReportData(data, notificationObj)\r\n      setResponsibles(data, notificationObj)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return { mountEditionData, mountAuditorsResponsibles }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}