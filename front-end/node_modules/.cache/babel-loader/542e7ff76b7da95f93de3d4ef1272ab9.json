{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Warnings\\\\Warnings.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport { Card, CardBody, Form, FormGroup, Button, Col } from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\nimport { WarningsContext } from 'context/WarningsContext';\nimport { NavigationContext } from 'context/NavigationContext';\nimport { GroupsContext } from 'context/GroupsContext';\nimport Tabs from 'components/Tabs';\nimport Table from 'components/tables/Table';\nimport TagsInput from 'components/tags/TagsInput';\nimport EditionButtons from 'components/buttons/EditionButtons';\nimport ConfirmationModal from 'components/modals/ConfirmationModal ';\nimport MessageModal from 'components/modals/MessageModal';\nimport env from 'common/enviroment';\nimport STATUS_ENUM from 'common/enumerators/StatusEnum';\nimport SEVERITY_ENUM from 'common/enumerators/SeverityEnum';\nimport MASK_ENUM from \"common/enumerators/MaskEnum\";\nimport CONFIG_TYPE_ENUM from 'common/enumerators/ConfigTypeEnum';\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\nimport { getUserLogin, getVisibilityGroups, isAdmin, isLoggedIn, reloadVisibilityGroups } from 'common/SessionUtils';\nimport { createRevisionModalData, LABEL, INPUT } from 'components/modals/RevisionModal';\nimport { ERROR, EXCLUSION, CREATION } from 'components/modals/ModalConsts';\nimport { createOrderByClause, createNotFilterClause, createQueryHttpRequestBody, createBaseHttpRequestBody } from 'axios/AxiosUtils';\nimport { ViewsContext } from 'context/ViewsContext';\nimport { mountGroupsFilterClause } from 'axios/AxiosUtils';\nimport { isExternalUser } from 'common/SessionUtils';\nimport { DISCLAIMER } from 'components/modals/RevisionModal';\nimport { createSimpleFilterClause } from 'axios/AxiosUtils';\nimport { getConfigStatusLabel } from 'common/enumerators/StatusEnum';\nimport { BLANK_WARNING_CONFIG_FORM_DATA, CONFIG_TYPE_CONDITIONS_REVERSE, DROPDOWN_CONDITIONS } from 'common/rules/WarningConfigRules';\nimport { CNPJ_DESTINATARIO_NFE, CNPJ_EMITENTE, CNPJ_EMITENTE_NFE, CPF_CONDUTOR, CPF_DESTINATARIO_NFE, CPF_EMITENTE, CPF_EMITENTE_NFE, PLACA, VALOR_AGREGADO, VALOR_MDFE, VALOR_NFE } from \"common/rules/WarningConfigRules\";\nimport { WARNING_CONFIG_FILTERS } from './utils/filters';\nimport { useModalWithData } from 'common/hooks/useModalWithData';\nimport { cleanTagsInput, formatConditionsText, formatDateTimeString, formatWarningHistoryText } from './utils/format-data';\nimport { applyMask } from 'common/utils/mask';\nimport { isEmpty } from 'common/utils/collections';\nimport { getNowDateTimeString } from 'common/utils/validate';\nimport { removeMask } from 'common/utils/mask';\nimport { conditionalClosingDateRowFormat } from 'common/utils/forms';\nimport { mountClosingDateText } from 'common/utils/forms';\nimport { convertUtcToBrazilianDate } from 'common/utils/validate';\nimport { escapeSpecialCharacters } from 'common/utils/validate';\nimport { treatResponse } from 'common/utils/errorTreatment';\nimport treatError from 'common/utils/errorTreatment';\nimport WarningConfigPanel from './panels/WarningConfigPanel';\nimport WarningConfigModal from 'components/modals/WarningConfigModal/WarningConfigModal';\nimport { allowDuplication } from 'common/rules/WarningConfigRules';\nimport { hasEmptyValues } from 'common/rules/WarningConfigRules';\nimport { SEVERITY } from 'common/model/WarningConfig';\nimport { ID_CONFIG } from 'common/model/WarningConfig';\nimport { NAME } from 'common/model/WarningConfig';\nimport { TYPE } from 'common/model/WarningConfig';\nimport { MONITORING_PARAMETERS_JSON } from 'common/model/WarningConfig';\nimport { CLOSING_DATE } from 'common/model/WarningConfig';\nimport { VISIBILITY_GROUP } from 'common/model/WarningConfig';\nimport { FISCAL_ACTION } from 'common/model/WarningConfig';\nimport { CREATOR } from 'common/model/WarningConfig';\nimport { PAUSE_TIMESTAMP } from 'common/model/WarningConfig';\nimport { CREATION_DATE } from 'common/model/WarningConfig';\nimport { QUERY } from 'axios/AxiosUtils';\nimport { FILTERS } from 'axios/AxiosUtils';\nimport { STATUS } from 'common/model/WarningConfig';\nimport { MODIFICATION_DATE } from 'common/model/WarningConfig';\nimport { GROUP_IDS } from 'axios/AxiosUtils';\nimport { CPF_RECIPIENT } from 'common/model/WarningConfig';\nimport { CPF_MDFE_ISSUER } from 'common/model/WarningConfig';\nimport { CPF_NFE_ISSUER } from 'common/model/WarningConfig';\nimport { CPF_DRIVER } from 'common/model/WarningConfig';\nimport { CNPJ_RECIPIENT } from 'common/model/WarningConfig';\nimport { CNPJ_MDFE_ISSUER } from 'common/model/WarningConfig';\nimport { CNPJ_NFE_ISSUER } from 'common/model/WarningConfig';\nimport { PLATE } from 'common/model/WarningConfig';\nimport { MDFE_LOWER_VALUE } from 'common/model/WarningConfig';\nimport { NFE_LOWER_VALUE } from 'common/model/WarningConfig';\nimport { AGREGATED_LOWER_VALUE } from 'common/model/WarningConfig';\nimport Severity from 'components/table-elements/Severity';\nimport { validateData } from 'common/rules/WarningConfigRules';\nimport RevisionModal from 'components/modals/RevisionModal';\nimport { INT } from 'axios/AxiosUtils';\nimport { setWarningConfigHistory } from 'common/SessionUtils';\nimport { EQUAL } from 'axios/AxiosUtils';\nimport { DESC } from 'axios/AxiosUtils';\nimport { DESCRIPTION } from 'common/model/WarningConfig';\nimport { MODIFICATION_USER } from 'common/model/WarningConfig';\nimport { GROUP_IDS_SSE } from 'common/model/WarningConfig';\nimport { ASC } from 'axios/AxiosUtils';\nimport { ID_LOG } from 'common/model/Notification';\nimport { cloneFilters } from 'axios/AxiosUtils';\nimport useAsync from 'common/hooks/useAsync';\nimport LoadingPage from 'layouts/Loading';\nimport { delay } from 'common/utils/forms';\nimport { AuditorsContext } from 'context/AuditorsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Warnings() {\n  _s();\n\n  const history = useHistory();\n  const {\n    refresh,\n    refreshFlag,\n    warningsFilters,\n    setWarningsFilters,\n    warningsTags,\n    setWarningsTags\n  } = React.useContext(ViewsContext);\n  const {\n    groupsNameMap,\n    groupsSimpleMap,\n    fetchGroupsData,\n    groupsDataMap,\n    fetchGroupsName,\n    mountGroupsNameText\n  } = React.useContext(GroupsContext);\n  const {\n    auditorsData,\n    getAuditorsData\n  } = React.useContext(AuditorsContext);\n  const {\n    setIsMap\n  } = React.useContext(NavigationContext);\n  const {\n    startSSE,\n    startWarningsViewedSSE,\n    wasReloaded,\n    setWasReloaded\n  } = React.useContext(WarningsContext);\n  const [GROUPS_DROPDOWN_CONDITIONS, setGroupsDropdownConditions] = React.useState([]);\n  const [GROUPS_DROPDOWN_VALUES, setGroupsDropdownValues] = React.useState([]);\n  const [GROUPS_FILTER_OPTIONS, setGroupsFilterOptions] = React.useState({});\n  const {\n    modalData,\n    setModalData,\n    modalActionMethods,\n    setModalActionMethods,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff\n  } = useModalWithData();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const [formData, setFormData] = React.useState(BLANK_WARNING_CONFIG_FORM_DATA);\n  const [formTags, setFormTags] = React.useState([]);\n  const [oldFormData, setOldFormData] = React.useState(BLANK_WARNING_CONFIG_FORM_DATA);\n  const [spinner, setSpinner] = React.useState(false);\n  const [invalid, setInvalid] = React.useState(false);\n  const [modalReadonlyMode, setModalReadonlyMode] = React.useState(true);\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  const {\n    loading\n  } = useAsync(async () => {\n    if (wasReloaded && isLoggedIn()) {\n      setIsMap(false);\n      reloadVisibilityGroups();\n\n      if (isEmpty(groupsDataMap)) {\n        await fetchGroupsData();\n      }\n\n      if (isEmpty(groupsSimpleMap)) {\n        await fetchGroupsName();\n      }\n\n      if (isEmpty(auditorsData)) {\n        await getAuditorsData();\n      }\n\n      startWarningsViewedSSE();\n      startSSE();\n      await delay(2000);\n      setWasReloaded(false);\n    }\n  }, [wasReloaded]);\n  React.useEffect(() => {\n    if (isLoggedIn()) {\n      if (tabIndex === 0) {\n        cleanInputs();\n        setModalReadonlyMode(false);\n      }\n\n      if (tabIndex === 1) {\n        setInvalid(false);\n      }\n    } else {\n      history.push('/login');\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [warningsFilters, tabIndex, groupsNameMap]);\n  React.useEffect(() => {\n    setGroupsDropdownConditions(groupsSimpleMap);\n    let filter = {}; //para o filtro, o usuário só pode usar os grupos para os quais possui visibilidade. \n\n    let visibilityGroups = getVisibilityGroups().map(Number);\n\n    for (const [key, value] of Object.entries(groupsSimpleMap)) {\n      if (visibilityGroups.includes(value) && !isAdmin()) {\n        filter[key] = value;\n      } else if (isAdmin()) {\n        filter[key] = value;\n      }\n    }\n\n    setGroupsFilterOptions({\n      column_type: INT,\n      dropdown: filter,\n      inputType: \"select\"\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groupsSimpleMap]);\n\n  const isDisabled = warningConfigCreator => {\n    //Quando o modal é acionado pelo double click, a variável input criador virá undefined. \n    //Assim, sendo necessário recuperar a informação a partir do formData\n    if (isEmpty(warningConfigCreator)) {\n      warningConfigCreator = formData[CREATOR];\n    }\n\n    if (warningConfigCreator === getUserLogin() || isAdmin()) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const cleanInputs = () => {\n    setFormData(BLANK_WARNING_CONFIG_FORM_DATA);\n    setOldFormData(BLANK_WARNING_CONFIG_FORM_DATA);\n    setFormTags(() => []);\n    setGroupsDropdownValues(() => []);\n  };\n\n  const createTagsForEdition = (config, collection, key, id, mask) => {\n    let value = config[key];\n\n    if (value) {\n      let tag_value = null;\n      value = applyMask(mask, value);\n\n      if (Array.isArray(value) && mask !== MASK_ENUM.MONEY) {\n        tag_value = value;\n      } else {\n        tag_value = [value];\n      }\n\n      collection[id] = tag_value;\n    }\n  };\n\n  const openRevisionModal = async () => {\n    let cleanedTagsInput = cleanTagsInput(formTags);\n    let invalidMessage = validateData(formData);\n\n    if (hasEmptyValues(formData, cleanedTagsInput)) {\n      setInvalid(true);\n      setModalData({\n        message: \"Há campos obrigatórios não preenchidos!\",\n        messageType: ERROR\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    } else if (!isEmpty(invalidMessage)) {\n      let errorMessage = \"Há campos obrigatórios com dados inválidos!\\n\";\n      errorMessage += invalidMessage.join(\"\");\n      setModalData({\n        message: errorMessage,\n        messageType: ERROR\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    } else {\n      setInvalid(false);\n      let configText = formatConditionsText(cleanedTagsInput, DROPDOWN_CONDITIONS);\n      const configs = await checkDuplicityWarningConfigs(STATUS_ENUM.CRIADO);\n      let data = null; // Há configurações repetidas\n\n      if (configs && configs.length > 0) {\n        let configNames = [];\n\n        for (let config of configs) {\n          configNames.push(config.nome);\n        }\n\n        const allowedDuplication = allowDuplication();\n        const disclaimer = \"Os seguintes alertas j\\xE1 cadastrados possuem as mesmas condi\\xE7\\xF5es de monitoramento: \".concat(configNames.join(', '));\n        data = createRevisionModalData(\"Revise os Dados da Configuração de Alerta\", ['AVISO', 'Alerta', 'Descrição do Alerta', 'Data e Horário de Fechamento', 'Tipo de Configuração', 'Visibilidade', 'Condições', 'Prioridade', 'Ação Fiscal'], [disclaimer, formData.nome, formData.descricao, formatDateTimeString(formData.data_fechamento), CONFIG_TYPE_CONDITIONS_REVERSE[formData.config_type], mountGroupsNameText(formData.visibility_groups), configText, SEVERITY_ENUM[formData.severidade], formData.procedimentos], [DISCLAIMER, LABEL, INPUT, LABEL, LABEL, LABEL, LABEL, LABEL, INPUT], allowedDuplication);\n      } else {\n        // Não há configurações repetidas\n        data = createRevisionModalData(\"Revise os Dados da Configuração de Alerta\", ['Alerta', 'Descrição do Alerta', 'Data e Horário de Fechamento', 'Tipo de Configuração', 'Visibilidade', 'Condições', 'Prioridade', 'Ação Fiscal'], [formData.nome, formData.descricao, formatDateTimeString(formData.data_fechamento), CONFIG_TYPE_CONDITIONS_REVERSE[formData.config_type], mountGroupsNameText(formData.visibility_groups), configText, SEVERITY_ENUM[formData.severidade], formData.procedimentos], [LABEL, INPUT, LABEL, LABEL, LABEL, LABEL, LABEL, INPUT]);\n      }\n\n      setModalData(data);\n      toggleModalOn(MODAL_TYPE_ENUM.REVISION);\n    }\n  };\n\n  const openEditionModal = async function (warningData) {\n    let readOnlyMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (warningData) {\n      let collection = {};\n      let processedWarning = {};\n      const attributesToGet = Object.keys(BLANK_WARNING_CONFIG_FORM_DATA);\n      attributesToGet.forEach(attrib => {\n        processedWarning[attrib] = warningData[attrib];\n      });\n      processedWarning[CLOSING_DATE] = processedWarning[CLOSING_DATE].split(\"T\");\n      cleanInputs();\n      let config = warningData[MONITORING_PARAMETERS_JSON];\n      createTagsForEdition(config, collection, CPF_RECIPIENT, CPF_DESTINATARIO_NFE, MASK_ENUM.CPF);\n      createTagsForEdition(config, collection, CPF_MDFE_ISSUER, CPF_EMITENTE, MASK_ENUM.CPF);\n      createTagsForEdition(config, collection, CPF_NFE_ISSUER, CPF_EMITENTE_NFE, MASK_ENUM.CPF);\n      createTagsForEdition(config, collection, CPF_DRIVER, CPF_CONDUTOR, MASK_ENUM.CPF);\n      createTagsForEdition(config, collection, CNPJ_RECIPIENT, CNPJ_DESTINATARIO_NFE, MASK_ENUM.CNPJ);\n      createTagsForEdition(config, collection, CNPJ_MDFE_ISSUER, CNPJ_EMITENTE, MASK_ENUM.CNPJ);\n      createTagsForEdition(config, collection, CNPJ_NFE_ISSUER, CNPJ_EMITENTE_NFE, MASK_ENUM.CNPJ);\n      createTagsForEdition(config, collection, PLATE, PLACA, MASK_ENUM.PLATE);\n      createTagsForEdition(config, collection, MDFE_LOWER_VALUE, VALOR_MDFE, MASK_ENUM.MONEY);\n      createTagsForEdition(config, collection, NFE_LOWER_VALUE, VALOR_NFE, MASK_ENUM.MONEY);\n      createTagsForEdition(config, collection, AGREGATED_LOWER_VALUE, VALOR_AGREGADO, MASK_ENUM.MONEY);\n      setFormTags(collection);\n      let groupsData = warningData.visibility_groups ? warningData.visibility_groups.split(',') : [];\n      processedWarning.visibility_groups = groupsData; //Estes métodos devem vir SEMPRE após a variável processedWarning ter sido preenchida. \n\n      let historyData = await readWarningConfigHistory(warningData[ID_CONFIG]);\n      let completeHistoryData = {};\n\n      if (!isEmpty(historyData)) {\n        completeHistoryData = historyData.map(item => {\n          return { ...item,\n            visibility_groups: mountGroupsNameText(processedWarning.visibility_groups)\n          };\n        });\n      }\n\n      setWarningConfigHistory(completeHistoryData);\n      processedWarning.history = formatWarningHistoryText(historyData, processedWarning);\n      setFormData(processedWarning);\n      setOldFormData(JSON.parse(JSON.stringify(processedWarning)));\n    }\n\n    setInvalid(false);\n    setModalReadonlyMode(readOnlyMode);\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING_CONFIG);\n  };\n\n  const openDeleteModal = id => {\n    if (id !== undefined) {\n      setModalData({\n        entity: \"a Configuração de Alerta\",\n        operation: EXCLUSION,\n        id: id\n      });\n      setModalActionMethods([undefined, undefined, deleteWarning]);\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\n    }\n  };\n\n  const createCountHttpRequestBody = () => {\n    let httpRequestBody = createBaseHttpRequestBody();\n    let filtersClone = cloneFilters(warningsFilters);\n    let groups = mountGroupsFilterClause(warningsTags, groupsSimpleMap);\n    filtersClone.push(createNotFilterClause(STATUS, INT, EQUAL, STATUS_ENUM.REMOVIDO));\n    httpRequestBody[FILTERS] = filtersClone;\n    httpRequestBody[GROUP_IDS] = groups;\n    return httpRequestBody;\n  };\n\n  const createReadHttpRequestBody = () => {\n    const orderBy = createOrderByClause(MODIFICATION_DATE, DESC);\n    let httpRequestBody = createQueryHttpRequestBody({}, orderBy);\n    let filtersClone = cloneFilters(warningsFilters);\n    let groups = mountGroupsFilterClause(warningsTags, groupsSimpleMap);\n    filtersClone.push(createNotFilterClause(STATUS, INT, EQUAL, STATUS_ENUM.REMOVIDO));\n    httpRequestBody[QUERY][FILTERS]['view_group'] = groups;\n    httpRequestBody[QUERY][FILTERS]['warning_config'] = filtersClone;\n    return httpRequestBody;\n  };\n\n  const createEditionHttpRequestBody = configStatus => {\n    console.log(\"TESTE\", formData[DESCRIPTION]);\n    let httpRequestBody = createBaseHttpRequestBody({\n      [NAME]: escapeSpecialCharacters(formData[NAME]),\n      [DESCRIPTION]: escapeSpecialCharacters(formData[DESCRIPTION]),\n      [FISCAL_ACTION]: escapeSpecialCharacters(formData[FISCAL_ACTION]),\n      [STATUS]: configStatus,\n      [CREATOR]: getUserLogin(),\n      [MODIFICATION_DATE]: getNowDateTimeString(),\n      [MODIFICATION_USER]: getUserLogin(),\n      [CLOSING_DATE]: \"\".concat(formData[CLOSING_DATE][0], \"T\").concat(formData[CLOSING_DATE][1]),\n      [SEVERITY]: formData.severidade,\n      [TYPE]: Number(formData.config_type),\n      [PAUSE_TIMESTAMP]: formData[PAUSE_TIMESTAMP] ? formData[PAUSE_TIMESTAMP] : getNowDateTimeString(),\n      [GROUP_IDS_SSE]: formData[VISIBILITY_GROUP]\n    });\n\n    if (isExternalUser()) {\n      httpRequestBody[TYPE] = 0;\n    }\n\n    if (configStatus === STATUS_ENUM.CRIADO) {\n      httpRequestBody[CREATION_DATE] = getNowDateTimeString();\n    }\n\n    let cleanedTagsInput = cleanTagsInput(formTags);\n    httpRequestBody[MONITORING_PARAMETERS_JSON] = {\n      [CPF_RECIPIENT]: cleanedTagsInput[CPF_RECIPIENT] ? removeMask(cleanedTagsInput[CPF_RECIPIENT], MASK_ENUM.CPF) : null,\n      [CPF_MDFE_ISSUER]: cleanedTagsInput[CPF_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_MDFE_ISSUER], MASK_ENUM.CPF) : null,\n      [CPF_NFE_ISSUER]: cleanedTagsInput[CPF_NFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_NFE_ISSUER], MASK_ENUM.CPF) : null,\n      [CPF_DRIVER]: cleanedTagsInput[CPF_DRIVER] ? removeMask(cleanedTagsInput[CPF_DRIVER], MASK_ENUM.CPF) : null,\n      [CNPJ_RECIPIENT]: cleanedTagsInput[CNPJ_RECIPIENT] ? removeMask(cleanedTagsInput[CNPJ_RECIPIENT], MASK_ENUM.CNPJ) : null,\n      [CNPJ_MDFE_ISSUER]: cleanedTagsInput[CNPJ_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_MDFE_ISSUER], MASK_ENUM.CNPJ) : null,\n      [CNPJ_NFE_ISSUER]: cleanedTagsInput[CNPJ_NFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_NFE_ISSUER], MASK_ENUM.CNPJ) : null,\n      [PLATE]: cleanedTagsInput[PLATE] ? removeMask(cleanedTagsInput[PLATE], MASK_ENUM.PLATE) : null,\n      [MDFE_LOWER_VALUE]: cleanedTagsInput[MDFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[MDFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\n      [NFE_LOWER_VALUE]: cleanedTagsInput[NFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[NFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\n      [AGREGATED_LOWER_VALUE]: cleanedTagsInput[AGREGATED_LOWER_VALUE] ? removeMask(cleanedTagsInput[AGREGATED_LOWER_VALUE], MASK_ENUM.MONEY) : null\n    };\n    return httpRequestBody;\n  };\n\n  const checkDuplicityWarningConfigs = async status => {\n    const httpRequestBody = createEditionHttpRequestBody(status);\n    httpRequestBody[ID_CONFIG] = formData[ID_CONFIG];\n\n    try {\n      const res = await axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/warningconfigs/check_duplicity\"), httpRequestBody);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    ;\n  };\n\n  const readWarningConfigHistory = async warningId => {\n    let filters = [];\n    filters.push(createSimpleFilterClause(ID_CONFIG, INT, EQUAL, warningId));\n    let httpRequestBody = createQueryHttpRequestBody(filters, createOrderByClause(ID_LOG, ASC));\n\n    try {\n      const res = await axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/warningconfigs/read_warning_config_history\"), httpRequestBody);\n      return res.data;\n    } catch (error) {\n      console.log(\"XXX\", error);\n      return [];\n    }\n  };\n\n  const createWarning = () => {\n    const entity = \"da Configuração de Alerta\";\n    const httpRequestBody = createEditionHttpRequestBody(STATUS_ENUM.CRIADO);\n    setSpinner(true);\n    axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/warningconfigs/create\"), httpRequestBody).then(res => {\n      treatResponse(entity, CREATION, ID_CONFIG, res, setModalData, refresh);\n      cleanInputs();\n    }).catch(err => {\n      setModalData(treatError(err, entity, CREATION));\n    }).finally(() => {\n      setSpinner(false);\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    });\n  };\n\n  const deleteWarning = id => {\n    const entity = \"da Configuração de Alerta\";\n    let httpRequestBody = createBaseHttpRequestBody({\n      [STATUS]: STATUS_ENUM.REMOVIDO,\n      [MODIFICATION_DATE]: getNowDateTimeString(),\n      [MODIFICATION_USER]: getUserLogin()\n    });\n    httpRequestBody[GROUP_IDS] = formData.visibility_groups;\n    setSpinner(true);\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/warningconfigs/update/\").concat(id), httpRequestBody).then(res => {\n      treatResponse(entity, EXCLUSION, ID_CONFIG, res, setModalData, refresh);\n    }).catch(err => {\n      setModalData(treatError(err, entity, EXCLUSION));\n    }).finally(() => {\n      setSpinner(false);\n    });\n  };\n\n  if (loading && wasReloaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          names: ['Cadastrar Novo de Alerta', 'Gerenciamento de Alertas'],\n          index: [tabIndex, setTabIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card\",\n          style: {\n            borderTopLeftRadius: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(WarningConfigPanel, {\n                data: formData,\n                setData: setFormData,\n                oldData: oldFormData,\n                formTags: formTags,\n                setFormTags: setFormTags,\n                invalid: invalid,\n                readOnly: false,\n                groupsConditions: GROUPS_DROPDOWN_CONDITIONS,\n                groupsValues: GROUPS_DROPDOWN_VALUES\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      onClick: () => {\n                        openRevisionModal();\n                      },\n                      style: {\n                        marginTop: '2rem'\n                      },\n                      children: \"Cadastrar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), tabIndex === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TagsInput, {\n                tagsState: [warningsTags, setWarningsTags],\n                setQuery: setWarningsFilters,\n                columns: WARNING_CONFIG_FILTERS(GROUPS_FILTER_OPTIONS)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                dataUrl: \"/warningconfigs/read_all\",\n                countUrl: \"/warningconfigs/count_warningconfigs\",\n                timeout: 10000,\n                requestBody: createReadHttpRequestBody,\n                countRequestBody: createCountHttpRequestBody,\n                tags: warningsFilters,\n                fillData: true,\n                refresh: refreshFlag,\n                trProps: row => {\n                  return {\n                    onDoubleClick: e => {\n                      openEditionModal(row, true);\n                    },\n                    style: conditionalClosingDateRowFormat(row.data_fechamento)\n                  };\n                },\n                loading: [isLoading, setIsLoading],\n                columns: {\n                  \"Prioridade\": {\n                    args: SEVERITY,\n                    func: severity => /*#__PURE__*/_jsxDEV(Severity, {\n                      severity: severity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 45\n                    }, this)\n                  },\n                  \"Nº Alerta\": ID_CONFIG,\n                  \"Alerta\": NAME,\n                  \"Tipo de Configuração\": {\n                    args: TYPE,\n                    func: config_type => {\n                      return config_type || config_type === 0 ? CONFIG_TYPE_ENUM[config_type] : \"\";\n                    }\n                  },\n                  \"Condições\": {\n                    args: MONITORING_PARAMETERS_JSON,\n                    tdStyle: {\n                      whiteSpace: 'pre'\n                    },\n                    func: configuracao => formatConditionsText(configuracao, DROPDOWN_CONDITIONS, true)\n                  },\n                  \"Data de Fechamento\": {\n                    args: CLOSING_DATE,\n                    Func: _ref => {\n                      let {\n                        data\n                      } = _ref;\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [convertUtcToBrazilianDate(data), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(\"b\", {\n                            children: mountClosingDateText(data)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 593,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 593,\n                          columnNumber: 60\n                        }, this)]\n                      }, void 0, true);\n                    }\n                  },\n                  \"Visibilidade\": {\n                    args: VISIBILITY_GROUP,\n                    func: groups => mountGroupsNameText(groups.split(\",\"))\n                  },\n                  \"Ação Fiscal\": FISCAL_ACTION,\n\n                  /* eslint-disable-next-line no-dupe-keys */\n                  \"Criador\": {\n                    args: CREATOR,\n                    adminOnly: true\n                  },\n                  \"Situação\": {\n                    args: [CLOSING_DATE, PAUSE_TIMESTAMP],\n                    tdStyle: {\n                      whiteSpace: 'pre',\n                      textAlign: 'center'\n                    },\n                    defaultValue: \"\",\n                    Func: _ref2 => {\n                      let {\n                        row_data\n                      } = _ref2;\n                      return getConfigStatusLabel(row_data);\n                    }\n                  },\n                  \"Ações\": {\n                    args: [CREATOR, ID_CONFIG],\n                    tdStyle: {\n                      textAlign: 'center'\n                    },\n                    thStyle: {\n                      textAlign: 'center'\n                    },\n                    Func: _ref3 => {\n                      let {\n                        data,\n                        row_data\n                      } = _ref3;\n                      return /*#__PURE__*/_jsxDEV(EditionButtons, {\n                        isModal: false,\n                        creator: data[0],\n                        data: row_data,\n                        id: data[1],\n                        modalReadonlyMode: modalReadonlyMode,\n                        setModalReadonlyMode: setModalReadonlyMode,\n                        isDisabled: isDisabled,\n                        editionAction: openEditionModal,\n                        deleteAction: openDeleteModal\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 617,\n                        columnNumber: 27\n                      }, this);\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), modalType === MODAL_TYPE_ENUM.REVISION && /*#__PURE__*/_jsxDEV(RevisionModal, {\n        show: isModalActive,\n        toggle: toggleModalOff,\n        data: modalData,\n        actionMethod: createWarning,\n        spinner: spinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 52\n      }, this), modalType === MODAL_TYPE_ENUM.CONFIRMATION && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        show: isModalActive,\n        toggle: toggleModalOff,\n        data: modalData,\n        actionMethods: modalActionMethods\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 56\n      }, this), modalType === MODAL_TYPE_ENUM.MESSAGE && /*#__PURE__*/_jsxDEV(MessageModal, {\n        show: isModalActive,\n        toggle: toggleModalOff,\n        data: modalData,\n        spinner: spinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 51\n      }, this), modalType === MODAL_TYPE_ENUM.WARNING_CONFIG && /*#__PURE__*/_jsxDEV(WarningConfigModal, {\n        show: isModalActive,\n        toggle: toggleModalOff,\n        data: formData,\n        tags: formTags,\n        refresh: refresh,\n        modalReadonlyMode: modalReadonlyMode,\n        setModalReadonlyMode: setModalReadonlyMode,\n        groupsConditions: GROUPS_DROPDOWN_CONDITIONS,\n        groupsValues: GROUPS_DROPDOWN_VALUES\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Warnings, \"PWekJd0iJ94I1lKCpE8eXGu/PuQ=\", false, function () {\n  return [useHistory, useModalWithData, useAsync];\n});\n\n_c = Warnings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Warnings\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/views/Warnings/Warnings.js"],"names":["React","axios","axiosRetry","getTimeoutConfig","getRetryConfig","Card","CardBody","Form","FormGroup","Button","Col","useHistory","WarningsContext","NavigationContext","GroupsContext","Tabs","Table","TagsInput","EditionButtons","ConfirmationModal","MessageModal","env","STATUS_ENUM","SEVERITY_ENUM","MASK_ENUM","CONFIG_TYPE_ENUM","MODAL_TYPE_ENUM","getUserLogin","getVisibilityGroups","isAdmin","isLoggedIn","reloadVisibilityGroups","createRevisionModalData","LABEL","INPUT","ERROR","EXCLUSION","CREATION","createOrderByClause","createNotFilterClause","createQueryHttpRequestBody","createBaseHttpRequestBody","ViewsContext","mountGroupsFilterClause","isExternalUser","DISCLAIMER","createSimpleFilterClause","getConfigStatusLabel","BLANK_WARNING_CONFIG_FORM_DATA","CONFIG_TYPE_CONDITIONS_REVERSE","DROPDOWN_CONDITIONS","CNPJ_DESTINATARIO_NFE","CNPJ_EMITENTE","CNPJ_EMITENTE_NFE","CPF_CONDUTOR","CPF_DESTINATARIO_NFE","CPF_EMITENTE","CPF_EMITENTE_NFE","PLACA","VALOR_AGREGADO","VALOR_MDFE","VALOR_NFE","WARNING_CONFIG_FILTERS","useModalWithData","cleanTagsInput","formatConditionsText","formatDateTimeString","formatWarningHistoryText","applyMask","isEmpty","getNowDateTimeString","removeMask","conditionalClosingDateRowFormat","mountClosingDateText","convertUtcToBrazilianDate","escapeSpecialCharacters","treatResponse","treatError","WarningConfigPanel","WarningConfigModal","allowDuplication","hasEmptyValues","SEVERITY","ID_CONFIG","NAME","TYPE","MONITORING_PARAMETERS_JSON","CLOSING_DATE","VISIBILITY_GROUP","FISCAL_ACTION","CREATOR","PAUSE_TIMESTAMP","CREATION_DATE","QUERY","FILTERS","STATUS","MODIFICATION_DATE","GROUP_IDS","CPF_RECIPIENT","CPF_MDFE_ISSUER","CPF_NFE_ISSUER","CPF_DRIVER","CNPJ_RECIPIENT","CNPJ_MDFE_ISSUER","CNPJ_NFE_ISSUER","PLATE","MDFE_LOWER_VALUE","NFE_LOWER_VALUE","AGREGATED_LOWER_VALUE","Severity","validateData","RevisionModal","INT","setWarningConfigHistory","EQUAL","DESC","DESCRIPTION","MODIFICATION_USER","GROUP_IDS_SSE","ASC","ID_LOG","cloneFilters","useAsync","LoadingPage","delay","AuditorsContext","Warnings","history","refresh","refreshFlag","warningsFilters","setWarningsFilters","warningsTags","setWarningsTags","useContext","groupsNameMap","groupsSimpleMap","fetchGroupsData","groupsDataMap","fetchGroupsName","mountGroupsNameText","auditorsData","getAuditorsData","setIsMap","startSSE","startWarningsViewedSSE","wasReloaded","setWasReloaded","GROUPS_DROPDOWN_CONDITIONS","setGroupsDropdownConditions","useState","GROUPS_DROPDOWN_VALUES","setGroupsDropdownValues","GROUPS_FILTER_OPTIONS","setGroupsFilterOptions","modalData","setModalData","modalActionMethods","setModalActionMethods","isModalActive","modalType","toggleModalOn","toggleModalOff","isLoading","setIsLoading","tabIndex","setTabIndex","formData","setFormData","formTags","setFormTags","oldFormData","setOldFormData","spinner","setSpinner","invalid","setInvalid","modalReadonlyMode","setModalReadonlyMode","axiosRetryProxy","create","loading","useEffect","cleanInputs","push","filter","visibilityGroups","map","Number","key","value","Object","entries","includes","column_type","dropdown","inputType","isDisabled","warningConfigCreator","createTagsForEdition","config","collection","id","mask","tag_value","Array","isArray","MONEY","openRevisionModal","cleanedTagsInput","invalidMessage","message","messageType","MESSAGE","errorMessage","join","configText","configs","checkDuplicityWarningConfigs","CRIADO","data","length","configNames","nome","allowedDuplication","disclaimer","descricao","data_fechamento","config_type","visibility_groups","severidade","procedimentos","REVISION","openEditionModal","warningData","readOnlyMode","processedWarning","attributesToGet","keys","forEach","attrib","split","CPF","CNPJ","groupsData","historyData","readWarningConfigHistory","completeHistoryData","item","JSON","parse","stringify","WARNING_CONFIG","openDeleteModal","undefined","entity","operation","deleteWarning","CONFIRMATION","createCountHttpRequestBody","httpRequestBody","filtersClone","groups","REMOVIDO","createReadHttpRequestBody","orderBy","createEditionHttpRequestBody","configStatus","console","log","status","res","post","apiAddress","error","warningId","filters","createWarning","then","catch","err","finally","patch","borderTopLeftRadius","marginTop","row","onDoubleClick","e","style","args","func","severity","tdStyle","whiteSpace","configuracao","Func","adminOnly","textAlign","defaultValue","row_data","thStyle"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Button,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { WarningsContext } from 'context/WarningsContext';\r\nimport { NavigationContext } from 'context/NavigationContext'\r\nimport { GroupsContext } from 'context/GroupsContext'\r\n\r\nimport Tabs from 'components/Tabs';\r\nimport Table from 'components/tables/Table';\r\nimport TagsInput from 'components/tags/TagsInput';\r\n\r\nimport EditionButtons from 'components/buttons/EditionButtons';\r\n\r\nimport ConfirmationModal from 'components/modals/ConfirmationModal ';\r\nimport MessageModal from 'components/modals/MessageModal';\r\n\r\n\r\nimport env from 'common/enviroment'\r\nimport STATUS_ENUM from 'common/enumerators/StatusEnum'\r\nimport SEVERITY_ENUM from 'common/enumerators/SeverityEnum'\r\nimport MASK_ENUM from \"common/enumerators/MaskEnum\";\r\nimport CONFIG_TYPE_ENUM from 'common/enumerators/ConfigTypeEnum';\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\n\r\n\r\nimport { getUserLogin, getVisibilityGroups, isAdmin, isLoggedIn, reloadVisibilityGroups } from 'common/SessionUtils';\r\nimport { createRevisionModalData, LABEL, INPUT } from 'components/modals/RevisionModal';\r\nimport { ERROR, EXCLUSION, CREATION } from 'components/modals/ModalConsts';\r\n\r\nimport { createOrderByClause, createNotFilterClause, createQueryHttpRequestBody, createBaseHttpRequestBody, } from 'axios/AxiosUtils';\r\n\r\n\r\nimport { ViewsContext } from 'context/ViewsContext';\r\nimport { mountGroupsFilterClause } from 'axios/AxiosUtils';\r\nimport { isExternalUser } from 'common/SessionUtils';\r\nimport { DISCLAIMER } from 'components/modals/RevisionModal';\r\nimport { createSimpleFilterClause } from 'axios/AxiosUtils';\r\nimport { getConfigStatusLabel } from 'common/enumerators/StatusEnum';\r\nimport { BLANK_WARNING_CONFIG_FORM_DATA, CONFIG_TYPE_CONDITIONS_REVERSE, DROPDOWN_CONDITIONS } from 'common/rules/WarningConfigRules';\r\nimport { CNPJ_DESTINATARIO_NFE, CNPJ_EMITENTE, CNPJ_EMITENTE_NFE, CPF_CONDUTOR, CPF_DESTINATARIO_NFE, CPF_EMITENTE, CPF_EMITENTE_NFE, PLACA, VALOR_AGREGADO, VALOR_MDFE, VALOR_NFE } from \"common/rules/WarningConfigRules\"\r\nimport { WARNING_CONFIG_FILTERS } from './utils/filters';\r\nimport { useModalWithData } from 'common/hooks/useModalWithData';\r\nimport { cleanTagsInput, formatConditionsText, formatDateTimeString, formatWarningHistoryText } from './utils/format-data';\r\nimport { applyMask } from 'common/utils/mask';\r\nimport { isEmpty } from 'common/utils/collections';\r\nimport { getNowDateTimeString } from 'common/utils/validate';\r\nimport { removeMask } from 'common/utils/mask';\r\nimport { conditionalClosingDateRowFormat } from 'common/utils/forms';\r\nimport { mountClosingDateText } from 'common/utils/forms';\r\nimport { convertUtcToBrazilianDate } from 'common/utils/validate';\r\nimport { escapeSpecialCharacters } from 'common/utils/validate';\r\nimport { treatResponse } from 'common/utils/errorTreatment';\r\nimport treatError from 'common/utils/errorTreatment';\r\nimport WarningConfigPanel from './panels/WarningConfigPanel';\r\nimport WarningConfigModal from 'components/modals/WarningConfigModal/WarningConfigModal';\r\nimport { allowDuplication } from 'common/rules/WarningConfigRules';\r\nimport { hasEmptyValues } from 'common/rules/WarningConfigRules';\r\nimport { SEVERITY } from 'common/model/WarningConfig';\r\nimport { ID_CONFIG } from 'common/model/WarningConfig';\r\nimport { NAME } from 'common/model/WarningConfig';\r\nimport { TYPE } from 'common/model/WarningConfig';\r\nimport { MONITORING_PARAMETERS_JSON } from 'common/model/WarningConfig';\r\nimport { CLOSING_DATE } from 'common/model/WarningConfig';\r\nimport { VISIBILITY_GROUP } from 'common/model/WarningConfig';\r\nimport { FISCAL_ACTION } from 'common/model/WarningConfig';\r\nimport { CREATOR } from 'common/model/WarningConfig';\r\nimport { PAUSE_TIMESTAMP } from 'common/model/WarningConfig';\r\nimport { CREATION_DATE } from 'common/model/WarningConfig';\r\nimport { QUERY } from 'axios/AxiosUtils';\r\nimport { FILTERS } from 'axios/AxiosUtils';\r\nimport { STATUS } from 'common/model/WarningConfig';\r\nimport { MODIFICATION_DATE } from 'common/model/WarningConfig';\r\nimport { GROUP_IDS } from 'axios/AxiosUtils';\r\nimport { CPF_RECIPIENT } from 'common/model/WarningConfig';\r\nimport { CPF_MDFE_ISSUER } from 'common/model/WarningConfig';\r\nimport { CPF_NFE_ISSUER } from 'common/model/WarningConfig';\r\nimport { CPF_DRIVER } from 'common/model/WarningConfig';\r\nimport { CNPJ_RECIPIENT } from 'common/model/WarningConfig';\r\nimport { CNPJ_MDFE_ISSUER } from 'common/model/WarningConfig';\r\nimport { CNPJ_NFE_ISSUER } from 'common/model/WarningConfig';\r\nimport { PLATE } from 'common/model/WarningConfig';\r\nimport { MDFE_LOWER_VALUE } from 'common/model/WarningConfig';\r\nimport { NFE_LOWER_VALUE } from 'common/model/WarningConfig';\r\nimport { AGREGATED_LOWER_VALUE } from 'common/model/WarningConfig';\r\nimport Severity from 'components/table-elements/Severity';\r\nimport { validateData } from 'common/rules/WarningConfigRules';\r\nimport RevisionModal from 'components/modals/RevisionModal';\r\nimport { INT } from 'axios/AxiosUtils';\r\nimport { setWarningConfigHistory } from 'common/SessionUtils';\r\nimport { EQUAL } from 'axios/AxiosUtils';\r\nimport { DESC } from 'axios/AxiosUtils';\r\nimport { DESCRIPTION } from 'common/model/WarningConfig';\r\nimport { MODIFICATION_USER } from 'common/model/WarningConfig';\r\nimport { GROUP_IDS_SSE } from 'common/model/WarningConfig';\r\nimport { ASC } from 'axios/AxiosUtils';\r\nimport { ID_LOG } from 'common/model/Notification';\r\nimport { cloneFilters } from 'axios/AxiosUtils';\r\nimport useAsync from 'common/hooks/useAsync';\r\nimport LoadingPage from 'layouts/Loading';\r\nimport { delay } from 'common/utils/forms';\r\nimport { AuditorsContext } from 'context/AuditorsContext';\r\n\r\n\r\n\r\n\r\nexport default function Warnings() {\r\n  const history = useHistory()\r\n  const { refresh, refreshFlag, warningsFilters, setWarningsFilters, warningsTags, setWarningsTags } = React.useContext(ViewsContext)\r\n  const { groupsNameMap, groupsSimpleMap, fetchGroupsData, groupsDataMap, fetchGroupsName, mountGroupsNameText } = React.useContext(GroupsContext);\r\n  const { auditorsData, getAuditorsData } = React.useContext(AuditorsContext);\r\n  const { setIsMap } = React.useContext(NavigationContext);\r\n  const { startSSE, startWarningsViewedSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n\r\n  const [GROUPS_DROPDOWN_CONDITIONS, setGroupsDropdownConditions] = React.useState([])\r\n  const [GROUPS_DROPDOWN_VALUES, setGroupsDropdownValues] = React.useState([])\r\n  const [GROUPS_FILTER_OPTIONS, setGroupsFilterOptions] = React.useState({})\r\n\r\n\r\n  const { modalData, setModalData, modalActionMethods, setModalActionMethods, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n\r\n  const [formData, setFormData] = React.useState(BLANK_WARNING_CONFIG_FORM_DATA)\r\n\r\n\r\n  const [formTags, setFormTags] = React.useState([])\r\n  const [oldFormData, setOldFormData] = React.useState(BLANK_WARNING_CONFIG_FORM_DATA)\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [invalid, setInvalid] = React.useState(false)\r\n  const [modalReadonlyMode, setModalReadonlyMode] = React.useState(true);\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n\r\n\r\n  const { loading } = useAsync(async () => {\r\n    if (wasReloaded && isLoggedIn()) {\r\n      setIsMap(false);\r\n      reloadVisibilityGroups()\r\n\r\n      if (isEmpty(groupsDataMap)) {\r\n        await fetchGroupsData()\r\n      }\r\n\r\n      if (isEmpty(groupsSimpleMap)) {\r\n        await fetchGroupsName()\r\n      }\r\n\r\n      if (isEmpty(auditorsData)) {\r\n        await getAuditorsData();\r\n      }\r\n\r\n      startWarningsViewedSSE()\r\n      startSSE()\r\n\r\n      await delay(2000);\r\n      setWasReloaded(false)\r\n    }\r\n  }, [wasReloaded]);\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n\r\n      if (tabIndex === 0) {\r\n        cleanInputs()\r\n        setModalReadonlyMode(false);\r\n      }\r\n      if (tabIndex === 1) {\r\n        setInvalid(false)\r\n      }\r\n\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [warningsFilters, tabIndex, groupsNameMap])\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    setGroupsDropdownConditions(groupsSimpleMap)\r\n\r\n    let filter = {}\r\n    //para o filtro, o usuário só pode usar os grupos para os quais possui visibilidade. \r\n    let visibilityGroups = getVisibilityGroups().map(Number)\r\n    for (const [key, value] of Object.entries(groupsSimpleMap)) {\r\n      if (visibilityGroups.includes(value) && !isAdmin()) {\r\n        filter[key] = value\r\n      } else if (isAdmin()) {\r\n        filter[key] = value\r\n      }\r\n    }\r\n\r\n    setGroupsFilterOptions({\r\n      column_type: INT,\r\n      dropdown: filter,\r\n      inputType: \"select\"\r\n    })\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [groupsSimpleMap])\r\n\r\n\r\n  const isDisabled = (warningConfigCreator) => {\r\n\r\n    //Quando o modal é acionado pelo double click, a variável input criador virá undefined. \r\n    //Assim, sendo necessário recuperar a informação a partir do formData\r\n    if (isEmpty(warningConfigCreator)) {\r\n      warningConfigCreator = formData[CREATOR]\r\n    }\r\n\r\n    if ((warningConfigCreator === getUserLogin()) || isAdmin()) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const cleanInputs = () => {\r\n    setFormData(BLANK_WARNING_CONFIG_FORM_DATA)\r\n    setOldFormData(BLANK_WARNING_CONFIG_FORM_DATA)\r\n    setFormTags(() => ([]))\r\n    setGroupsDropdownValues(() => ([]))\r\n  }\r\n\r\n\r\n\r\n  const createTagsForEdition = (config, collection, key, id, mask) => {\r\n    let value = config[key]\r\n    if (value) {\r\n      let tag_value = null\r\n\r\n      value = applyMask(mask, value)\r\n\r\n\r\n      if (Array.isArray(value) && mask !== MASK_ENUM.MONEY) {\r\n        tag_value = value\r\n      } else {\r\n        tag_value = [value]\r\n      }\r\n\r\n      collection[id] = tag_value\r\n    }\r\n  }\r\n\r\n\r\n  const openRevisionModal = async () => {\r\n\r\n    let cleanedTagsInput = cleanTagsInput(formTags)\r\n    let invalidMessage = validateData(formData)\r\n    if (hasEmptyValues(formData, cleanedTagsInput)) {\r\n      setInvalid(true)\r\n      setModalData({ message: \"Há campos obrigatórios não preenchidos!\", messageType: ERROR })\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n    } else if (!isEmpty(invalidMessage)) {\r\n      let errorMessage = \"Há campos obrigatórios com dados inválidos!\\n\"\r\n      errorMessage += invalidMessage.join(\"\")\r\n      setModalData({ message: errorMessage, messageType: ERROR })\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n    } else {\r\n      setInvalid(false)\r\n\r\n      let configText = formatConditionsText(cleanedTagsInput, DROPDOWN_CONDITIONS)\r\n      const configs = await checkDuplicityWarningConfigs(STATUS_ENUM.CRIADO);\r\n\r\n\r\n      let data = null;\r\n      // Há configurações repetidas\r\n      if (configs && configs.length > 0) {\r\n        let configNames = []\r\n        for (let config of configs) {\r\n          configNames.push(config.nome)\r\n        }\r\n\r\n        const allowedDuplication = allowDuplication()\r\n        const disclaimer = `Os seguintes alertas já cadastrados possuem as mesmas condições de monitoramento: ${configNames.join(', ')}`\r\n        data = createRevisionModalData(\"Revise os Dados da Configuração de Alerta\",\r\n          ['AVISO', 'Alerta', 'Descrição do Alerta', 'Data e Horário de Fechamento', 'Tipo de Configuração', 'Visibilidade', 'Condições', 'Prioridade', 'Ação Fiscal'],\r\n          [disclaimer, formData.nome, formData.descricao, formatDateTimeString(formData.data_fechamento), CONFIG_TYPE_CONDITIONS_REVERSE[formData.config_type], mountGroupsNameText(formData.visibility_groups), configText, SEVERITY_ENUM[formData.severidade], formData.procedimentos],\r\n          [DISCLAIMER, LABEL, INPUT, LABEL, LABEL, LABEL, LABEL, LABEL, INPUT],\r\n          allowedDuplication\r\n        )\r\n      } else {\r\n        // Não há configurações repetidas\r\n        data = createRevisionModalData(\"Revise os Dados da Configuração de Alerta\",\r\n          ['Alerta', 'Descrição do Alerta', 'Data e Horário de Fechamento', 'Tipo de Configuração', 'Visibilidade', 'Condições', 'Prioridade', 'Ação Fiscal'],\r\n          [formData.nome, formData.descricao, formatDateTimeString(formData.data_fechamento), CONFIG_TYPE_CONDITIONS_REVERSE[formData.config_type], mountGroupsNameText(formData.visibility_groups), configText, SEVERITY_ENUM[formData.severidade], formData.procedimentos],\r\n          [LABEL, INPUT, LABEL, LABEL, LABEL, LABEL, LABEL, INPUT]\r\n        )\r\n      }\r\n      setModalData(data)\r\n      toggleModalOn(MODAL_TYPE_ENUM.REVISION)\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const openEditionModal = async (warningData, readOnlyMode = false) => {\r\n\r\n    if (warningData) {\r\n\r\n      let collection = {}\r\n      let processedWarning = {}\r\n      const attributesToGet = Object.keys(BLANK_WARNING_CONFIG_FORM_DATA)\r\n\r\n      attributesToGet.forEach(attrib => {\r\n        processedWarning[attrib] = warningData[attrib]\r\n      })\r\n\r\n      processedWarning[CLOSING_DATE] = processedWarning[CLOSING_DATE].split(\"T\")\r\n\r\n      cleanInputs()\r\n\r\n      let config = warningData[MONITORING_PARAMETERS_JSON]\r\n\r\n      createTagsForEdition(config, collection, CPF_RECIPIENT, CPF_DESTINATARIO_NFE, MASK_ENUM.CPF)\r\n      createTagsForEdition(config, collection, CPF_MDFE_ISSUER, CPF_EMITENTE, MASK_ENUM.CPF)\r\n      createTagsForEdition(config, collection, CPF_NFE_ISSUER, CPF_EMITENTE_NFE, MASK_ENUM.CPF)\r\n      createTagsForEdition(config, collection, CPF_DRIVER, CPF_CONDUTOR, MASK_ENUM.CPF)\r\n      createTagsForEdition(config, collection, CNPJ_RECIPIENT, CNPJ_DESTINATARIO_NFE, MASK_ENUM.CNPJ)\r\n      createTagsForEdition(config, collection, CNPJ_MDFE_ISSUER, CNPJ_EMITENTE, MASK_ENUM.CNPJ)\r\n      createTagsForEdition(config, collection, CNPJ_NFE_ISSUER, CNPJ_EMITENTE_NFE, MASK_ENUM.CNPJ)\r\n      createTagsForEdition(config, collection, PLATE, PLACA, MASK_ENUM.PLATE)\r\n      createTagsForEdition(config, collection, MDFE_LOWER_VALUE, VALOR_MDFE, MASK_ENUM.MONEY)\r\n      createTagsForEdition(config, collection, NFE_LOWER_VALUE, VALOR_NFE, MASK_ENUM.MONEY)\r\n      createTagsForEdition(config, collection, AGREGATED_LOWER_VALUE, VALOR_AGREGADO, MASK_ENUM.MONEY)\r\n\r\n      setFormTags(collection)\r\n\r\n      let groupsData = (warningData.visibility_groups) ? warningData.visibility_groups.split(',') : []\r\n      processedWarning.visibility_groups = groupsData\r\n\r\n      //Estes métodos devem vir SEMPRE após a variável processedWarning ter sido preenchida. \r\n      let historyData = await readWarningConfigHistory(warningData[ID_CONFIG])\r\n      let completeHistoryData = {}\r\n      if (!isEmpty(historyData)) {\r\n        completeHistoryData = historyData.map(item => {\r\n          return {\r\n            ...item,\r\n            visibility_groups: mountGroupsNameText(processedWarning.visibility_groups)\r\n          };\r\n        });\r\n      }\r\n\r\n      setWarningConfigHistory(completeHistoryData)\r\n      processedWarning.history = formatWarningHistoryText(historyData, processedWarning)\r\n\r\n      setFormData(processedWarning)\r\n      setOldFormData(JSON.parse(JSON.stringify(processedWarning)))\r\n    }\r\n\r\n    setInvalid(false);\r\n    setModalReadonlyMode(readOnlyMode);\r\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING_CONFIG)\r\n  }\r\n\r\n\r\n  const openDeleteModal = (id) => {\r\n    if (id !== undefined) {\r\n      setModalData({ entity: \"a Configuração de Alerta\", operation: EXCLUSION, id: id });\r\n      setModalActionMethods([undefined, undefined, deleteWarning]);\r\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n    }\r\n  }\r\n\r\n\r\n  const createCountHttpRequestBody = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n\r\n    let filtersClone = cloneFilters(warningsFilters)\r\n\r\n    let groups = mountGroupsFilterClause(warningsTags, groupsSimpleMap)\r\n    filtersClone.push(createNotFilterClause(STATUS, INT, EQUAL, STATUS_ENUM.REMOVIDO))\r\n\r\n    httpRequestBody[FILTERS] = filtersClone\r\n    httpRequestBody[GROUP_IDS] = groups\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n\r\n  const createReadHttpRequestBody = () => {\r\n    const orderBy = createOrderByClause(MODIFICATION_DATE, DESC)\r\n    let httpRequestBody = createQueryHttpRequestBody({}, orderBy)\r\n\r\n    let filtersClone = cloneFilters(warningsFilters)\r\n\r\n    let groups = mountGroupsFilterClause(warningsTags, groupsSimpleMap)\r\n    filtersClone.push(createNotFilterClause(STATUS, INT, EQUAL, STATUS_ENUM.REMOVIDO))\r\n\r\n    httpRequestBody[QUERY][FILTERS]['view_group'] = groups\r\n    httpRequestBody[QUERY][FILTERS]['warning_config'] = filtersClone\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createEditionHttpRequestBody = (configStatus) => {\r\n    console.log(\"TESTE\", formData[DESCRIPTION])\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [NAME]: escapeSpecialCharacters(formData[NAME]),\r\n      [DESCRIPTION]: escapeSpecialCharacters(formData[DESCRIPTION]),\r\n      [FISCAL_ACTION]: escapeSpecialCharacters(formData[FISCAL_ACTION]),\r\n      [STATUS]: configStatus,\r\n      [CREATOR]: getUserLogin(),\r\n      [MODIFICATION_DATE]: getNowDateTimeString(),\r\n      [MODIFICATION_USER]: getUserLogin(),\r\n      [CLOSING_DATE]: `${formData[CLOSING_DATE][0]}T${formData[CLOSING_DATE][1]}`,\r\n      [SEVERITY]: formData.severidade,\r\n      [TYPE]: Number(formData.config_type),\r\n      [PAUSE_TIMESTAMP]: (formData[PAUSE_TIMESTAMP]) ? formData[PAUSE_TIMESTAMP] : getNowDateTimeString(),\r\n      [GROUP_IDS_SSE]: formData[VISIBILITY_GROUP]\r\n\r\n    })\r\n\r\n    if (isExternalUser()) {\r\n      httpRequestBody[TYPE] = 0\r\n    }\r\n\r\n    if (configStatus === STATUS_ENUM.CRIADO) {\r\n      httpRequestBody[CREATION_DATE] = getNowDateTimeString()\r\n    }\r\n\r\n    let cleanedTagsInput = cleanTagsInput(formTags)\r\n\r\n\r\n    httpRequestBody[MONITORING_PARAMETERS_JSON] = {\r\n      [CPF_RECIPIENT]: cleanedTagsInput[CPF_RECIPIENT] ? removeMask(cleanedTagsInput[CPF_RECIPIENT], MASK_ENUM.CPF) : null,\r\n      [CPF_MDFE_ISSUER]: cleanedTagsInput[CPF_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_MDFE_ISSUER], MASK_ENUM.CPF) : null,\r\n      [CPF_NFE_ISSUER]: cleanedTagsInput[CPF_NFE_ISSUER] ? removeMask(cleanedTagsInput[CPF_NFE_ISSUER], MASK_ENUM.CPF) : null,\r\n      [CPF_DRIVER]: cleanedTagsInput[CPF_DRIVER] ? removeMask(cleanedTagsInput[CPF_DRIVER], MASK_ENUM.CPF) : null,\r\n      [CNPJ_RECIPIENT]: cleanedTagsInput[CNPJ_RECIPIENT] ? removeMask(cleanedTagsInput[CNPJ_RECIPIENT], MASK_ENUM.CNPJ) : null,\r\n      [CNPJ_MDFE_ISSUER]: cleanedTagsInput[CNPJ_MDFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_MDFE_ISSUER], MASK_ENUM.CNPJ) : null,\r\n      [CNPJ_NFE_ISSUER]: cleanedTagsInput[CNPJ_NFE_ISSUER] ? removeMask(cleanedTagsInput[CNPJ_NFE_ISSUER], MASK_ENUM.CNPJ) : null,\r\n      [PLATE]: cleanedTagsInput[PLATE] ? removeMask(cleanedTagsInput[PLATE], MASK_ENUM.PLATE) : null,\r\n      [MDFE_LOWER_VALUE]: cleanedTagsInput[MDFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[MDFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\r\n      [NFE_LOWER_VALUE]: cleanedTagsInput[NFE_LOWER_VALUE] ? removeMask(cleanedTagsInput[NFE_LOWER_VALUE], MASK_ENUM.MONEY) : null,\r\n      [AGREGATED_LOWER_VALUE]: cleanedTagsInput[AGREGATED_LOWER_VALUE] ? removeMask(cleanedTagsInput[AGREGATED_LOWER_VALUE], MASK_ENUM.MONEY) : null\r\n    }\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const checkDuplicityWarningConfigs = async (status) => {\r\n\r\n    const httpRequestBody = createEditionHttpRequestBody(status)\r\n    httpRequestBody[ID_CONFIG] = formData[ID_CONFIG]\r\n\r\n    try {\r\n\r\n      const res = await axiosRetryProxy.post(`${env.apiAddress}/warningconfigs/check_duplicity`, httpRequestBody)\r\n      return res.data\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    };\r\n  };\r\n\r\n\r\n\r\n  const readWarningConfigHistory = async (warningId) => {\r\n    let filters = [];\r\n    filters.push(createSimpleFilterClause(ID_CONFIG, INT, EQUAL, warningId));\r\n    let httpRequestBody = createQueryHttpRequestBody(filters, createOrderByClause(ID_LOG, ASC));\r\n    try {\r\n      const res = await axiosRetryProxy.post(`${env.apiAddress}/warningconfigs/read_warning_config_history`, httpRequestBody);\r\n      return res.data\r\n    } catch (error) {\r\n      console.log(\"XXX\", error);\r\n      return []\r\n    }\r\n  }\r\n\r\n  const createWarning = () => {\r\n\r\n    const entity = \"da Configuração de Alerta\"\r\n    const httpRequestBody = createEditionHttpRequestBody(STATUS_ENUM.CRIADO)\r\n    setSpinner(true)\r\n    axiosRetryProxy.post(`${env.apiAddress}/warningconfigs/create`, httpRequestBody)\r\n      .then(res => {\r\n        treatResponse(entity, CREATION, ID_CONFIG, res, setModalData, refresh)\r\n        cleanInputs();\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, CREATION));\r\n      }).finally(() => {\r\n        setSpinner(false)\r\n        toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n      });\r\n  }\r\n\r\n\r\n  const deleteWarning = (id) => {\r\n\r\n    const entity = \"da Configuração de Alerta\"\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [STATUS]: STATUS_ENUM.REMOVIDO,\r\n      [MODIFICATION_DATE]: getNowDateTimeString(),\r\n      [MODIFICATION_USER]: getUserLogin()\r\n    })\r\n    httpRequestBody[GROUP_IDS] = formData.visibility_groups\r\n\r\n\r\n    setSpinner(true)\r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    axiosRetryProxy.patch(`${env.apiAddress}/warningconfigs/update/${id}`, httpRequestBody)\r\n      .then(res => {\r\n        treatResponse(entity, EXCLUSION, ID_CONFIG, res, setModalData, refresh)\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, EXCLUSION));\r\n      }).finally(() => {\r\n        setSpinner(false)\r\n      })\r\n  }\r\n\r\n  if (loading && wasReloaded) {\r\n    return <LoadingPage />\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Tabs names={['Cadastrar Novo de Alerta', 'Gerenciamento de Alertas']} index={[tabIndex, setTabIndex]} />\r\n          <Card className=\"card\" style={{ borderTopLeftRadius: '0px' }}>\r\n            <CardBody>\r\n              {tabIndex === 0 &&\r\n                <>\r\n                  <WarningConfigPanel data={formData} setData={setFormData} oldData={oldFormData} formTags={formTags} setFormTags={setFormTags} invalid={invalid} readOnly={false} groupsConditions={GROUPS_DROPDOWN_CONDITIONS} groupsValues={GROUPS_DROPDOWN_VALUES} />\r\n                  <Form>\r\n                    <FormGroup row>\r\n                      <Col sm={12}>\r\n                        <Button color=\"primary\" onClick={() => { openRevisionModal() }} style={{ marginTop: '2rem' }}>Cadastrar</Button>\r\n                      </Col>\r\n                    </FormGroup>\r\n\r\n                  </Form>\r\n                </>\r\n              }\r\n              {tabIndex === 1 &&\r\n                <>\r\n                  <TagsInput\r\n                    tagsState={[warningsTags, setWarningsTags]}\r\n                    setQuery={setWarningsFilters}\r\n                    columns={WARNING_CONFIG_FILTERS(GROUPS_FILTER_OPTIONS)}\r\n                  />\r\n                  <Table\r\n                    dataUrl=\"/warningconfigs/read_all\"\r\n                    countUrl=\"/warningconfigs/count_warningconfigs\"\r\n                    timeout={10000}\r\n                    requestBody={createReadHttpRequestBody}\r\n                    countRequestBody={createCountHttpRequestBody}\r\n                    tags={warningsFilters}\r\n                    fillData\r\n                    refresh={refreshFlag}\r\n                    trProps={row => { return { onDoubleClick: (e) => { openEditionModal(row, true) }, style: conditionalClosingDateRowFormat(row.data_fechamento) } }}\r\n                    loading={[isLoading, setIsLoading]}\r\n                    columns={{\r\n                      \"Prioridade\": {\r\n                        args: SEVERITY,\r\n                        func: (severity) => <Severity severity={severity} />\r\n                      },\r\n                      \"Nº Alerta\": ID_CONFIG,\r\n                      \"Alerta\": NAME,\r\n                      \"Tipo de Configuração\": {\r\n                        args: TYPE,\r\n                        func: (config_type) => { return (config_type || config_type === 0) ? CONFIG_TYPE_ENUM[config_type] : \"\" },\r\n                      },\r\n                      \"Condições\": {\r\n                        args: MONITORING_PARAMETERS_JSON,\r\n                        tdStyle: { whiteSpace: 'pre' },\r\n                        func: (configuracao) => formatConditionsText(configuracao, DROPDOWN_CONDITIONS, true)\r\n\r\n\r\n                      },\r\n                      \"Data de Fechamento\": {\r\n                        args: CLOSING_DATE,\r\n                        Func: ({ data }) => <>\r\n                          {convertUtcToBrazilianDate(data)}<div><b>{mountClosingDateText(data)}</b></div>\r\n                        </>\r\n                      },\r\n                      \"Visibilidade\": {\r\n                        args: VISIBILITY_GROUP,\r\n                        func: groups => mountGroupsNameText(groups.split(\",\"))\r\n                      },\r\n                      \"Ação Fiscal\": FISCAL_ACTION,\r\n                      /* eslint-disable-next-line no-dupe-keys */\r\n                      \"Criador\": {\r\n                        args: CREATOR,\r\n                        adminOnly: true\r\n                      },\r\n                      \"Situação\": {\r\n                        args: [CLOSING_DATE, PAUSE_TIMESTAMP],\r\n                        tdStyle: { whiteSpace: 'pre', textAlign: 'center' },\r\n                        defaultValue: \"\",\r\n                        Func: ({ row_data }) => getConfigStatusLabel(row_data)\r\n                      },\r\n                      \"Ações\": {\r\n                        args: [CREATOR, ID_CONFIG],\r\n                        tdStyle: { textAlign: 'center' },\r\n                        thStyle: { textAlign: 'center' },\r\n                        Func: ({ data, row_data }) =>\r\n                          <EditionButtons isModal={false} creator={data[0]} data={row_data} id={data[1]}\r\n                            modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} isDisabled={isDisabled}\r\n                            editionAction={openEditionModal} deleteAction={openDeleteModal} />,\r\n                      }\r\n                    }}\r\n                  />\r\n                </>\r\n              }\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        {modalType === MODAL_TYPE_ENUM.REVISION && <RevisionModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethod={createWarning} spinner={spinner} />}\r\n        {modalType === MODAL_TYPE_ENUM.CONFIRMATION && <ConfirmationModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethods={modalActionMethods} />}\r\n        {modalType === MODAL_TYPE_ENUM.MESSAGE && <MessageModal show={isModalActive} toggle={toggleModalOff} data={modalData} spinner={spinner} />}\r\n        {modalType === MODAL_TYPE_ENUM.WARNING_CONFIG && <WarningConfigModal show={isModalActive} toggle={toggleModalOff} data={formData} tags={formTags} refresh={refresh} modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} groupsConditions={GROUPS_DROPDOWN_CONDITIONS} groupsValues={GROUPS_DROPDOWN_VALUES} />}\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}