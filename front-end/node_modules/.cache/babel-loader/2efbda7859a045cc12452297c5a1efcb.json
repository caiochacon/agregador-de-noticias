{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Status.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, CardFooter, Spinner } from \"reactstrap\";\nimport { Bar } from \"react-chartjs-2\";\nimport { RiCheckboxCircleFill, RiAlertFill } from \"react-icons/ri\";\nimport { ViewsContext } from \"context/ViewsContext\";\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport Table from \"components/tables/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serviceNames = {\n  database: {\n    \"AIRBYTE\": \"Airbyte\",\n    \"HASURA\": \"Hasura\",\n    \"KAFKA\": \"Kafka\",\n    \"POSTGRESQL\": \"Banco de Dados Postgre\",\n    \"REDIS\": \"Banco de Dados Redis\"\n  },\n  processing: {\n    \"config-manager-1\": \"Processamento de Eventos de Passagem com DFe\",\n    \"config-manager-2\": \"Processamento de Eventos de Emissão de NFe\",\n    \"config-manager-3\": \"Processamento de Eventos de Passagem sem DFe\",\n    \"config-manager-4\": \"Processamento de Eventos de Emissão de MDFe\",\n    \"event_docs_stream\": \"Cruzamento com Documentos Fiscais\"\n  },\n  other: {\n    \"event_stream_consumer\": \"Pré-processamento de Eventos de Passagem\",\n    \"police_car_stream\": \"Localização de Viaturas\",\n    \"telegram_stream\": \"Envio de Eventos para Telegram\"\n  }\n};\nexport default function Status() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    refreshFlag,\n    refresh\n  } = React.useContext(ViewsContext);\n  const [data, setData] = React.useState({});\n  const successColor = \"#6bd098\";\n  const errorColor = \"#ef8157\";\n\n  const transformData = data => {\n    let serviceOnline = {\n      database: 0,\n      processing: 0,\n      other: 0\n    };\n    let serviceOffline = {\n      database: 0,\n      processing: 0,\n      other: 0\n    };\n    const blocksData = data;\n    data = Object.keys(data).map(route => {\n      let type;\n      Object.keys(serviceNames).forEach(serviceType => {\n        if (route in serviceNames[serviceType]) {\n          type = serviceType;\n          return;\n        }\n      });\n      if (data[route].status === \"ALIVE\") serviceOnline[type]++;else serviceOffline[type]++;\n      return {\n        \"route\": serviceNames[type][route],\n        type,\n        ...data[route]\n      };\n    });\n    data.sort((a, b) => {\n      if (a.status === \"ALIVE\") {\n        if (b.status === \"ALIVE\") return 0;else return 1;\n      } else if (b.status === \"ALIVE\") return -1;else return 0;\n    });\n    setData({\n      blocks: blocksData,\n      bar: {\n        labels: [\"Banco de Dados\", \"Processamento de Dados\", \"Outros\"],\n        datasets: [{\n          label: \"Online\",\n          data: [serviceOnline.database, serviceOnline.processing, serviceOnline.other],\n          backgroundColor: successColor\n        }, {\n          label: \"Offline\",\n          data: [serviceOffline.database, serviceOffline.processing, serviceOffline.other],\n          backgroundColor: errorColor\n        }]\n      }\n    });\n    console.log(data);\n    return data;\n  };\n\n  const isEmpty = obj => {\n    for (const prop in obj) {\n      if (Object.hasOwn(obj, prop)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const useInterval = (callback, delay) => {\n    _s();\n\n    const savedCallback = React.useRef(); // Remember the latest callback.\n\n    React.useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]); // Set up the interval.\n\n    React.useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  };\n\n  _s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\n  useInterval(refresh, 120000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h6\",\n              style: {\n                color: \"#51cbce\"\n              },\n              children: \"Status por tipo de servi\\xE7o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            style: {\n              display: \"flex\",\n              placeContent: \"center\",\n              maxHeight: \"25rem\"\n            },\n            children: isLoading || isEmpty(data) ? /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"primary\",\n              style: {\n                margin: \"4rem\",\n                placeSelf: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n              data: data.bar,\n              options: {\n                maintainAspectRatio: false,\n                legend: {\n                  position: \"bottom\"\n                },\n                scales: {\n                  xAxes: [{\n                    stacked: true\n                  }],\n                  yAxes: [{\n                    stacked: true,\n                    ticks: {\n                      stepSize: 1\n                    }\n                  }]\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            tag: \"h6\",\n            style: {\n              color: \"#51cbce\"\n            },\n            children: \"Banco de Dados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              margin: \"1rem 1rem 0 1rem\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: [console.log(data), isLoading || isEmpty(data) ? /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"primary\",\n              style: {\n                margin: \"2rem\",\n                placeSelf: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this) : Object.keys(serviceNames.database).map(service => {\n              console.log(service);\n              console.log(data.blocks[service]);\n              return /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    backgroundColor: data.blocks[service].status === \"ALIVE\" ? successColor : errorColor\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                    style: {\n                      display: \"flex\",\n                      placeContent: \"center\"\n                    },\n                    children: serviceNames.database[service]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                    style: {\n                      display: \"flex\",\n                      justifyContent: \"end\"\n                    },\n                    children: data.blocks[service].status === \"ALIVE\" ? /*#__PURE__*/_jsxDEV(RiCheckboxCircleFill, {\n                      title: \"Disponível\",\n                      style: {\n                        fontSize: '20px',\n                        color: \"green\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(RiAlertFill, {\n                      title: \"Indisponível\",\n                      style: {\n                        fontSize: '20px',\n                        color: \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            tag: \"h6\",\n            style: {\n              color: \"#51cbce\"\n            },\n            children: \"Processamento de Dados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              margin: \"1rem 1rem 0 1rem\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: isLoading || isEmpty(data) ? /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"primary\",\n              style: {\n                margin: \"2rem\",\n                placeSelf: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this) : Object.keys(serviceNames.processing).map(service => /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  backgroundColor: data.blocks[service].status === \"ALIVE\" ? successColor : errorColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                  style: {\n                    display: \"flex\",\n                    placeContent: \"center\"\n                  },\n                  children: serviceNames.processing[service]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"end\"\n                  },\n                  children: data.blocks[service].status === \"ALIVE\" ? /*#__PURE__*/_jsxDEV(RiCheckboxCircleFill, {\n                    title: \"Disponível\",\n                    style: {\n                      fontSize: '20px',\n                      color: \"green\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(RiAlertFill, {\n                    title: \"Indisponível\",\n                    style: {\n                      fontSize: '20px',\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            tag: \"h6\",\n            style: {\n              color: \"#51cbce\"\n            },\n            children: \"Outros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              margin: \"1rem 1rem 0 1rem\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: isLoading || isEmpty(data) ? /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"primary\",\n              style: {\n                margin: \"2rem\",\n                placeSelf: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this) : Object.keys(serviceNames.other).map(service => /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  backgroundColor: data.blocks[service].status === \"ALIVE\" ? successColor : errorColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                  style: {\n                    display: \"flex\",\n                    placeContent: \"center\"\n                  },\n                  children: serviceNames.other[service]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"end\"\n                  },\n                  children: data.blocks[service].status === \"ALIVE\" ? /*#__PURE__*/_jsxDEV(RiCheckboxCircleFill, {\n                    title: \"Disponível\",\n                    style: {\n                      fontSize: '20px',\n                      color: \"green\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(RiAlertFill, {\n                    title: \"Indisponível\",\n                    style: {\n                      fontSize: '20px',\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              dataUrl: \"/status/check\",\n              requestBody: createBaseHttpRequestBody,\n              loading: [isLoading, setIsLoading],\n              fillData: true,\n              hidePagination: true,\n              requestMiddleware: transformData,\n              refresh: refreshFlag,\n              columns: {\n                \"Nome do serviço\": \"route\",\n                \"Tempo de resposta\": {\n                  args: \"elapsed_time\",\n                  func: time => \"\".concat(time.toFixed(4).replace('.', ','), \" s\")\n                },\n                \"Tipo\": \"type\",\n                \"Status\": {\n                  args: \"status\",\n                  func: status => status === \"ALIVE\" ? /*#__PURE__*/_jsxDEV(RiCheckboxCircleFill, {\n                    title: \"Disponível\",\n                    style: {\n                      fontSize: '20px',\n                      color: successColor\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(RiAlertFill, {\n                    title: \"Indisponível\",\n                    style: {\n                      fontSize: '20px',\n                      color: errorColor\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this)\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Status, \"Jk9LYW16/qF7M/7Fip2S1TjylBs=\", true);\n\n_c = Status;\n\nvar _c;\n\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/views/Status.js"],"names":["React","Row","Col","Card","CardHeader","CardTitle","CardBody","CardFooter","Spinner","Bar","RiCheckboxCircleFill","RiAlertFill","ViewsContext","createBaseHttpRequestBody","Table","serviceNames","database","processing","other","Status","isLoading","setIsLoading","useState","refreshFlag","refresh","useContext","data","setData","successColor","errorColor","transformData","serviceOnline","serviceOffline","blocksData","Object","keys","map","route","type","forEach","serviceType","status","sort","a","b","blocks","bar","labels","datasets","label","backgroundColor","console","log","isEmpty","obj","prop","hasOwn","useInterval","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","color","display","placeContent","maxHeight","margin","placeSelf","maintainAspectRatio","legend","position","scales","xAxes","stacked","yAxes","ticks","stepSize","justifyContent","service","fontSize","args","func","time","toFixed","replace"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, CardFooter, Spinner } from \"reactstrap\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { RiCheckboxCircleFill, RiAlertFill } from \"react-icons/ri\"\r\n\r\nimport { ViewsContext } from \"context/ViewsContext\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport Table from \"components/tables/Table\";\r\n\r\nconst serviceNames = {\r\n  database: {\r\n    \"AIRBYTE\": \"Airbyte\",\r\n    \"HASURA\": \"Hasura\",\r\n    \"KAFKA\": \"Kafka\",\r\n    \"POSTGRESQL\": \"Banco de Dados Postgre\",\r\n    \"REDIS\": \"Banco de Dados Redis\",\r\n  },\r\n  processing: {\r\n    \"config-manager-1\": \"Processamento de Eventos de Passagem com DFe\",\r\n    \"config-manager-2\": \"Processamento de Eventos de Emissão de NFe\",\r\n    \"config-manager-3\": \"Processamento de Eventos de Passagem sem DFe\",\r\n    \"config-manager-4\": \"Processamento de Eventos de Emissão de MDFe\",\r\n    \"event_docs_stream\": \"Cruzamento com Documentos Fiscais\",\r\n  },\r\n  other: {\r\n    \"event_stream_consumer\": \"Pré-processamento de Eventos de Passagem\",\r\n    \"police_car_stream\": \"Localização de Viaturas\",\r\n    \"telegram_stream\": \"Envio de Eventos para Telegram\"\r\n  }\r\n}\r\n\r\nexport default function Status() {\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const { refreshFlag, refresh } = React.useContext(ViewsContext)\r\n  const [data, setData] = React.useState({})\r\n\r\n  const successColor = \"#6bd098\"\r\n  const errorColor = \"#ef8157\"\r\n\r\n  const transformData = (data) => {\r\n    let serviceOnline = {\r\n      database: 0,\r\n      processing: 0,\r\n      other: 0\r\n    }\r\n    let serviceOffline = {\r\n      database: 0,\r\n      processing: 0,\r\n      other: 0\r\n    }\r\n\r\n    const blocksData = data\r\n\r\n    data = Object.keys(data).map(route => {\r\n      let type\r\n\r\n      Object.keys(serviceNames).forEach(serviceType => {\r\n        if(route in serviceNames[serviceType]){\r\n          type = serviceType\r\n          return\r\n        }\r\n      })\r\n\r\n      if (data[route].status === \"ALIVE\")\r\n        serviceOnline[type]++\r\n      else\r\n        serviceOffline[type]++\r\n\r\n      return {\r\n        \"route\": serviceNames[type][route],\r\n        type,\r\n        ...data[route]\r\n      }\r\n    })\r\n\r\n    data.sort((a, b) => {\r\n      if (a.status === \"ALIVE\")\r\n        if (b.status === \"ALIVE\")\r\n          return 0\r\n        else\r\n          return 1\r\n      else\r\n        if (b.status === \"ALIVE\")\r\n          return -1\r\n        else\r\n          return 0\r\n    })\r\n\r\n    setData({\r\n      blocks: blocksData,\r\n      bar: {\r\n        labels: [\"Banco de Dados\", \"Processamento de Dados\", \"Outros\"],\r\n        datasets: [{\r\n          label: \"Online\",\r\n          data: [serviceOnline.database, serviceOnline.processing, serviceOnline.other],\r\n          backgroundColor: successColor\r\n        },\r\n        {\r\n          label: \"Offline\",\r\n          data: [serviceOffline.database, serviceOffline.processing, serviceOffline.other],\r\n          backgroundColor: errorColor\r\n        }]\r\n      }\r\n    })\r\n    console.log(data)\r\n    return data\r\n  }\r\n\r\n  const isEmpty = (obj) => {\r\n    for (const prop in obj) {\r\n      if (Object.hasOwn(obj, prop)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  const useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n\r\n    // Remember the latest callback.\r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    React.useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n  useInterval(refresh, 120000)\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag=\"h6\" style={{ color: \"#51cbce\" }}>\r\n                Status por tipo de serviço\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardBody style={{ display: \"flex\", placeContent: \"center\", maxHeight: \"25rem\" }}>\r\n              {isLoading || isEmpty(data) ?\r\n                <Spinner color=\"primary\" style={{ margin: \"4rem\", placeSelf: \"center\" }} />\r\n                :\r\n                <Bar data={data.bar} options={{\r\n                  maintainAspectRatio: false,\r\n                  legend: { position: \"bottom\" },\r\n                  scales: {\r\n                    xAxes: [{\r\n                      stacked: true,\r\n                    }],\r\n                    yAxes: [{\r\n                      stacked: true,\r\n                      ticks: {\r\n                        stepSize: 1\r\n                      }\r\n                    }],\r\n                  },\r\n                }} />\r\n              }\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader tag=\"h6\" style={{ color: \"#51cbce\" }}>Banco de Dados</CardHeader>\r\n            <Row style={{ margin: \"1rem 1rem 0 1rem\", display: \"flex\", justifyContent: \"center\" }}>\r\n              {console.log(data)}\r\n              {isLoading || isEmpty(data) ?\r\n                <Spinner color=\"primary\" style={{ margin: \"2rem\", placeSelf: \"center\" }} />\r\n                :\r\n                Object.keys(serviceNames.database).map(service => {\r\n                  console.log(service)\r\n                  console.log(data.blocks[service])\r\n                  return (\r\n                  <Col >\r\n                    <Card style={{ backgroundColor: data.blocks[service].status === \"ALIVE\" ? successColor : errorColor }}>\r\n                      <CardBody style={{ display: \"flex\", placeContent: \"center\"}}>\r\n                        {serviceNames.database[service]}\r\n                      </CardBody>\r\n                      <CardFooter style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                        {data.blocks[service].status === \"ALIVE\" ?\r\n                          <RiCheckboxCircleFill title={\"Disponível\"} style={{ fontSize: '20px', color: \"green\" }} />\r\n                          :\r\n                          <RiAlertFill title={\"Indisponível\"} style={{ fontSize: '20px', color: \"red\" }} />}\r\n                      </CardFooter>\r\n                    </Card>\r\n                  </Col>\r\n                )})\r\n              }\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader tag=\"h6\" style={{ color: \"#51cbce\" }}>Processamento de Dados</CardHeader>\r\n            <Row style={{ margin: \"1rem 1rem 0 1rem\", display: \"flex\", justifyContent: \"center\" }}>\r\n              {isLoading || isEmpty(data) ?\r\n                <Spinner color=\"primary\" style={{ margin: \"2rem\", placeSelf: \"center\" }} />\r\n                :\r\n                Object.keys(serviceNames.processing).map(service => (\r\n                  <Col >\r\n                    <Card style={{ backgroundColor: data.blocks[service].status === \"ALIVE\" ? successColor : errorColor }}>\r\n                      <CardBody style={{ display: \"flex\", placeContent: \"center\" }}>\r\n                        {serviceNames.processing[service]}\r\n                      </CardBody>\r\n                      <CardFooter style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                        {data.blocks[service].status === \"ALIVE\" ?\r\n                          <RiCheckboxCircleFill title={\"Disponível\"} style={{ fontSize: '20px', color: \"green\" }} />\r\n                          :\r\n                          <RiAlertFill title={\"Indisponível\"} style={{ fontSize: '20px', color: \"red\" }} />}\r\n                      </CardFooter>\r\n                    </Card>\r\n                  </Col>\r\n                ))\r\n              }\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader tag=\"h6\" style={{ color: \"#51cbce\" }}>Outros</CardHeader>\r\n            <Row style={{ margin: \"1rem 1rem 0 1rem\", display: \"flex\", justifyContent: \"center\" }}>\r\n              {isLoading || isEmpty(data) ?\r\n                <Spinner color=\"primary\" style={{ margin: \"2rem\", placeSelf: \"center\" }} />\r\n                :\r\n                Object.keys(serviceNames.other).map(service => (\r\n                  <Col >\r\n                    <Card style={{ backgroundColor: data.blocks[service].status === \"ALIVE\" ? successColor : errorColor }}>\r\n                      <CardBody style={{ display: \"flex\", placeContent: \"center\" }}>\r\n                        {serviceNames.other[service]}\r\n                      </CardBody>\r\n                      <CardFooter style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                        {data.blocks[service].status === \"ALIVE\" ?\r\n                          <RiCheckboxCircleFill title={\"Disponível\"} style={{ fontSize: '20px', color: \"green\" }} />\r\n                          :\r\n                          <RiAlertFill title={\"Indisponível\"} style={{ fontSize: '20px', color: \"red\" }} />}\r\n                      </CardFooter>\r\n                    </Card>\r\n                  </Col>\r\n                ))\r\n              }\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardBody>\r\n              <Table\r\n                dataUrl=\"/status/check\"\r\n                requestBody={createBaseHttpRequestBody}\r\n                loading={[isLoading, setIsLoading]}\r\n                fillData\r\n                hidePagination\r\n                requestMiddleware={transformData}\r\n                refresh={refreshFlag}\r\n                columns={{\r\n                  \"Nome do serviço\": \"route\",\r\n                  \"Tempo de resposta\": {\r\n                    args: \"elapsed_time\",\r\n                    func: time => `${time.toFixed(4).replace('.', ',')} s`\r\n                  },\r\n                  \"Tipo\": \"type\",\r\n                  \"Status\": {\r\n                    args: \"status\",\r\n                    func: status =>\r\n                      status === \"ALIVE\" ?\r\n                        <RiCheckboxCircleFill title={\"Disponível\"} style={{ fontSize: '20px', color: successColor }} />\r\n                        :\r\n                        <RiAlertFill title={\"Indisponível\"} style={{ fontSize: '20px', color: errorColor }} />\r\n                  }\r\n                }}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}