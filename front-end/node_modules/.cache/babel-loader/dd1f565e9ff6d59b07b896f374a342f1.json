{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Traffic\\\\tables\\\\TrafficDfeTable.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ViewsContext } from \"context/ViewsContext\";\nimport TagsInput from \"components/tags/TagsInput\";\nimport Table from \"components/tables/Table\";\nimport { createQueryHttpRequestBody } from \"axios/AxiosUtils\";\nimport Plate from \"components/table-elements/Plate\";\nimport { ID } from \"common/model/Notification\";\nimport { TrafficTimestamp } from \"components/table-elements/TrafficTimestamp\";\nimport TrafficLastLocations from \"components/table-elements/TrafficLastLocations\";\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\nimport { EVENT_CREATION_TIMESTAMP } from \"common/model/Event\";\nimport { EVENT_LOCAL } from \"common/model/Event\";\nimport { EVENT_VEHICLE_PLATE } from \"common/model/Event\";\nimport { EVENT_VEHICLE_TYPE } from \"common/model/Event\";\nimport { EVENT_VEHICLE_MODEL } from \"common/model/Event\";\nimport { EVENT_VEHICLE_COLOUR } from \"common/model/Event\";\nimport { EVENT_UF } from \"common/model/Event\";\nimport { createOrderByClause } from \"axios/AxiosUtils\";\nimport { EVENT_DFE_TYPE } from \"common/model/Event\";\nimport { EVENT_TOTAL_VALUE } from \"common/model/Event\";\nimport DfeLink from \"components/buttons/DfeLink\";\nimport DfeModal from \"components/modals/DfeModal/DfeModal\";\nimport useToggle from \"common/hooks/useToogle\";\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\nimport { createNotFilterClause } from \"axios/AxiosUtils\";\nimport { trafficDfeFiltersOptions } from \"../utils/filters\";\nimport VehicleModal from \"components/modals/VehicleModal\";\nimport { DESC } from \"axios/AxiosUtils\";\nimport { EQUAL } from \"axios/AxiosUtils\";\nimport { CHAR } from \"axios/AxiosUtils\";\nimport { cloneFilters } from \"axios/AxiosUtils\";\nimport { WITHOUT_DFE } from \"common/model/Event\";\nimport { EVENT_INGESTION_TIMESTAMP } from \"common/model/Event\"; //TODO remover estas referencias a groupsConditons e groupsValues. Isso deve vir do context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TrafficDfeTable(_ref) {\n  _s();\n\n  let {\n    toggleMapModal\n  } = _ref;\n  const {\n    refreshFlag,\n    dfeTableFilters,\n    setDfeTableFilters,\n    dfeTableTags,\n    setDfeTableTags\n  } = React.useContext(ViewsContext);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [fetchDataFlag, toggleFetchData] = useToggle(false);\n  const {\n    modalData,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff\n  } = useModalWithData();\n\n  const createTrafficDfeHttpRequestBody = () => {\n    let filtersClone = cloneFilters(dfeTableFilters);\n    filtersClone.push(createNotFilterClause(EVENT_DFE_TYPE, CHAR, EQUAL, WITHOUT_DFE)); //Veja que aqui está sendo aplicado um filtro de negação. Então serão selecionados todos os eventos que são diferente de NA.\n\n    const orderBy = createOrderByClause(EVENT_INGESTION_TIMESTAMP, DESC);\n    return createQueryHttpRequestBody(filtersClone, orderBy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TagsInput, {\n      setQuery: setDfeTableFilters,\n      tagsState: [dfeTableTags, setDfeTableTags],\n      columns: trafficDfeFiltersOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataUrl: \"/events/read_all\",\n      timeout: 10000,\n      requestBody: createTrafficDfeHttpRequestBody,\n      tags: dfeTableFilters,\n      fillData: true,\n      refresh: refreshFlag,\n      loading: [isLoading, setIsLoading],\n      invalid: [\"null\", undefined, null, \"\", \"-\"],\n      columns: {\n        \"Passagem\": {\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\n          Func: _ref2 => {\n            let {\n              data\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(TrafficTimestamp, {\n              data: data,\n              isTrafficTimestamp: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 31\n            }, this);\n          }\n        },\n        \"Recebimento\": {\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\n          Func: _ref3 => {\n            let {\n              data\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(TrafficTimestamp, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 31\n            }, this);\n          }\n        },\n        \"Local\": {\n          args: EVENT_LOCAL,\n          Func: _ref4 => {\n            let {\n              row_data\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(TrafficLastLocations, {\n              data: row_data,\n              toggleModal: toggleMapModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 35\n            }, this);\n          }\n        },\n        \"Uf Disparo\": {\n          args: EVENT_UF,\n          thStyle: {\n            textAlign: 'center'\n          },\n          tdStyle: {\n            textAlign: 'center'\n          }\n        },\n        \"Placa\": {\n          args: EVENT_VEHICLE_PLATE,\n          thStyle: {\n            textAlign: 'center'\n          },\n          tdStyle: {\n            textAlign: 'center'\n          },\n          func: plate => /*#__PURE__*/_jsxDEV(Plate, {\n            plate: plate,\n            toggleModal: toggleModalOn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 28\n          }, this)\n        },\n        \"Veículo\": EVENT_VEHICLE_TYPE,\n        \"Modelo\": EVENT_VEHICLE_MODEL,\n        \"Cor\": EVENT_VEHICLE_COLOUR,\n        \"DF-e\": {\n          args: [ID, EVENT_DFE_TYPE],\n          Func: _ref5 => {\n            let {\n              row_data\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(DfeLink, {\n              data: row_data,\n              toggleModalOn: toggleModalOn,\n              toggleFetchData: toggleFetchData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 35\n            }, this);\n          }\n        },\n        \"Valor agregado das Dfes\": {\n          args: EVENT_TOTAL_VALUE,\n          thStyle: {\n            textAlign: 'right'\n          },\n          tdStyle: {\n            textAlign: 'right'\n          },\n          func: value => \"R$ \".concat(value.toLocaleString('pt-br', {\n            minimumFractionDigits: 2\n          }))\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), modalType === MODAL_TYPE_ENUM.DFE && /*#__PURE__*/_jsxDEV(DfeModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData,\n      fetchData: fetchDataFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }, this), modalType === MODAL_TYPE_ENUM.VEHICLE && /*#__PURE__*/_jsxDEV(VehicleModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TrafficDfeTable, \"+e8Y8ScKkoS1lZ/XKnKgNBU4ZBw=\", false, function () {\n  return [useToggle, useModalWithData];\n});\n\n_c = TrafficDfeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficDfeTable\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/views/Traffic/tables/TrafficDfeTable.js"],"names":["React","ViewsContext","TagsInput","Table","createQueryHttpRequestBody","Plate","ID","TrafficTimestamp","TrafficLastLocations","MODAL_TYPE_ENUM","EVENT_CREATION_TIMESTAMP","EVENT_LOCAL","EVENT_VEHICLE_PLATE","EVENT_VEHICLE_TYPE","EVENT_VEHICLE_MODEL","EVENT_VEHICLE_COLOUR","EVENT_UF","createOrderByClause","EVENT_DFE_TYPE","EVENT_TOTAL_VALUE","DfeLink","DfeModal","useToggle","useModalWithData","createNotFilterClause","trafficDfeFiltersOptions","VehicleModal","DESC","EQUAL","CHAR","cloneFilters","WITHOUT_DFE","EVENT_INGESTION_TIMESTAMP","TrafficDfeTable","toggleMapModal","refreshFlag","dfeTableFilters","setDfeTableFilters","dfeTableTags","setDfeTableTags","useContext","isLoading","setIsLoading","useState","fetchDataFlag","toggleFetchData","modalData","isModalActive","modalType","toggleModalOn","toggleModalOff","createTrafficDfeHttpRequestBody","filtersClone","push","orderBy","undefined","args","Func","data","row_data","thStyle","textAlign","tdStyle","func","plate","value","toLocaleString","minimumFractionDigits","DFE","VEHICLE"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ViewsContext } from \"context/ViewsContext\";\r\nimport TagsInput from \"components/tags/TagsInput\";\r\nimport Table from \"components/tables/Table\";\r\nimport { createQueryHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport Plate from \"components/table-elements/Plate\";\r\nimport { ID } from \"common/model/Notification\";\r\nimport { TrafficTimestamp } from \"components/table-elements/TrafficTimestamp\";\r\nimport TrafficLastLocations from \"components/table-elements/TrafficLastLocations\";\r\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\nimport { EVENT_CREATION_TIMESTAMP } from \"common/model/Event\";\r\nimport { EVENT_LOCAL } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_PLATE } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_TYPE } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_MODEL } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_COLOUR } from \"common/model/Event\";\r\nimport { EVENT_UF } from \"common/model/Event\";\r\nimport { createOrderByClause } from \"axios/AxiosUtils\";\r\nimport { EVENT_DFE_TYPE } from \"common/model/Event\";\r\nimport { EVENT_TOTAL_VALUE } from \"common/model/Event\";\r\nimport DfeLink from \"components/buttons/DfeLink\";\r\nimport DfeModal from \"components/modals/DfeModal/DfeModal\";\r\nimport useToggle from \"common/hooks/useToogle\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport { createNotFilterClause } from \"axios/AxiosUtils\";\r\nimport { trafficDfeFiltersOptions } from \"../utils/filters\";\r\nimport VehicleModal from \"components/modals/VehicleModal\";\r\nimport { DESC } from \"axios/AxiosUtils\";\r\nimport { EQUAL } from \"axios/AxiosUtils\";\r\nimport { CHAR } from \"axios/AxiosUtils\";\r\nimport { cloneFilters } from \"axios/AxiosUtils\";\r\nimport { WITHOUT_DFE } from \"common/model/Event\";\r\nimport { EVENT_INGESTION_TIMESTAMP } from \"common/model/Event\";\r\n\r\n\r\n//TODO remover estas referencias a groupsConditons e groupsValues. Isso deve vir do context\r\nexport default function TrafficDfeTable({toggleMapModal }) {\r\n\r\n  const { refreshFlag, dfeTableFilters, setDfeTableFilters, dfeTableTags, setDfeTableTags } = React.useContext(ViewsContext)\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n  const [fetchDataFlag, toggleFetchData] = useToggle(false)\r\n  const { modalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n\r\n  const createTrafficDfeHttpRequestBody = () => {\r\n\r\n    let filtersClone = cloneFilters(dfeTableFilters)\r\n    filtersClone.push(createNotFilterClause(EVENT_DFE_TYPE, CHAR, EQUAL, WITHOUT_DFE)) //Veja que aqui está sendo aplicado um filtro de negação. Então serão selecionados todos os eventos que são diferente de NA.\r\n\r\n    const orderBy = createOrderByClause(EVENT_INGESTION_TIMESTAMP, DESC)\r\n    return createQueryHttpRequestBody(filtersClone, orderBy)\r\n  }\r\n\r\n\r\n  return (<>\r\n    <TagsInput\r\n      setQuery={setDfeTableFilters}\r\n      tagsState={[dfeTableTags, setDfeTableTags]}\r\n      columns={trafficDfeFiltersOptions}\r\n    />\r\n    <Table\r\n      dataUrl=\"/events/read_all\"\r\n      timeout={10000}\r\n      requestBody={createTrafficDfeHttpRequestBody}\r\n      tags={dfeTableFilters}\r\n      fillData\r\n      refresh={refreshFlag}\r\n      loading={[isLoading, setIsLoading]}\r\n      invalid={[\"null\", undefined, null, \"\", \"-\"]}\r\n      columns={{\r\n        \"Passagem\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} isTrafficTimestamp={true} />\r\n        },\r\n        \"Recebimento\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} />\r\n        },\r\n        \"Local\": {\r\n          args: EVENT_LOCAL,\r\n          Func: ({ row_data }) => <TrafficLastLocations data={row_data}  toggleModal={toggleMapModal} />\r\n        },\r\n        \"Uf Disparo\": {\r\n          args: EVENT_UF,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n        },\r\n        \"Placa\": {\r\n          args: EVENT_VEHICLE_PLATE,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n          func: (plate) => <Plate plate={plate} toggleModal={toggleModalOn} />\r\n        },\r\n        \"Veículo\": EVENT_VEHICLE_TYPE,\r\n        \"Modelo\": EVENT_VEHICLE_MODEL,\r\n        \"Cor\": EVENT_VEHICLE_COLOUR,\r\n        \"DF-e\": {\r\n          args: [ID, EVENT_DFE_TYPE],\r\n          Func: ({ row_data }) => <DfeLink data={row_data} toggleModalOn={toggleModalOn} toggleFetchData={toggleFetchData} />\r\n        },\r\n        \"Valor agregado das Dfes\": {\r\n          args: EVENT_TOTAL_VALUE,\r\n          thStyle: { textAlign: 'right' },\r\n          tdStyle: { textAlign: 'right' },\r\n          func: value => `R$ ${value.toLocaleString('pt-br', { minimumFractionDigits: 2 })}`\r\n        }\r\n      }}\r\n      />\r\n      {modalType === MODAL_TYPE_ENUM.DFE && <DfeModal show={isModalActive} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag} />} \r\n      {modalType === MODAL_TYPE_ENUM.VEHICLE && <VehicleModal show={isModalActive} toggle={toggleModalOff} data={modalData} />}\r\n      \r\n  </>)\r\n}"]},"metadata":{},"sourceType":"module"}