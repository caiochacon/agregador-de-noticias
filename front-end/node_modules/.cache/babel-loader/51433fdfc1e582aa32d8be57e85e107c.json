{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n/*!\r\n\r\n=========================================================\r\n* Paper Dashboard React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // import { Link } from \"react-router-dom\";\n\nimport { Navbar, NavbarBrand, Nav, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Container, Modal, ModalHeader, ModalBody, ModalFooter, Button, Col, Row, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Table } from \"reactstrap\";\nimport { WarningsContext } from \"context/WarningsContext\";\nimport { LoginContext } from \"context/LoginContext\";\nimport { GroupsContext } from \"context/GroupsContext\";\nimport { cleanSession, setUserLogin, getUserLogin } from \"common/SessionUtils\";\nimport routes from \"routes.js\";\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport env from \"common/enviroment\";\nimport { RiRefreshLine, RiUser3Line } from 'react-icons/ri';\nimport { FaCheckCircle, FaExclamationTriangle } from \"react-icons/fa\";\nimport NotificationBell from \"components/bell/NotificationBell\";\nimport PendingBell from \"components/bell/PendingBell\";\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport { ViewsContext } from \"context/ViewsContext\";\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NavigationBar(props) {\n  _s();\n\n  const history = useHistory();\n  const color = \"transparent\";\n  const {\n    refresh\n  } = React.useContext(ViewsContext);\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [isOpenConfig, setIsOpenConfig] = useState(false);\n\n  const toggleConfig = () => setIsOpenConfig(!isOpenConfig);\n\n  const {\n    isNotificationSoundEnable,\n    setIsNotificationSoundEnable\n  } = React.useContext(WarningsContext);\n  const {\n    setIsGroupsDataReadyState\n  } = React.useContext(LoginContext);\n  const {\n    setGroupsData\n  } = React.useContext(GroupsContext);\n  const {\n    setWarningsViewed,\n    setLastWarningUpdate\n  } = React.useContext(WarningsUpdateContext);\n  const [valor, setValor] = useState(-1);\n  const [result, setResult] = useState({});\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [hasChecked, setHasChecked] = useState(false);\n  const [isOpenStatus, setIsOpenStatus] = useState(false);\n\n  const toggleStatus = () => setIsOpenStatus(!isOpenStatus);\n\n  const sidebarToggle = React.useRef();\n  const userName = getUserLogin();\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  React.useEffect(() => {\n    if (sidebarToggle.current) {\n      if (window.innerWidth < 993 && // e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n        document.documentElement.classList.toggle(\"nav-open\");\n        sidebarToggle.current.classList.toggle(\"toggled\");\n      }\n    } else sidebarToggle.current = true; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props]);\n  useEffect(() => {\n    let intervalId;\n\n    const runFunction = () => {\n      testNew();\n      setHasChecked(true);\n    };\n\n    if ((menuOpen || isOpenStatus) && !hasChecked) {\n      runFunction();\n    }\n\n    if (menuOpen || isOpenStatus) {\n      intervalId = setInterval(runFunction, 2 * 60000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menuOpen, isOpenStatus, hasChecked]);\n  useEffect(() => {\n    const savedState = localStorage.getItem('isNotificationSoundEnable');\n\n    if (savedState !== null) {\n      setIsNotificationSoundEnable(JSON.parse(savedState));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  const getBrand = () => {\n    let brandName = \"Default Brand\";\n    let refreshable = false;\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n        refreshable = prop.refreshable;\n      }\n\n      return null;\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [brandName, refreshable && /*#__PURE__*/_jsxDEV(RiRefreshLine, {\n        style: {\n          marginLeft: \"5px\",\n          cursor: \"pointer\"\n        },\n        onClick: () => refresh() //carrega a partir do servidor\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n\n  const handleToggleNotificationSound = checked => {\n    const new_state = checked;\n    setIsNotificationSoundEnable(new_state);\n    localStorage.setItem(\"isNotificationSoundEnable\", JSON.stringify(new_state));\n  };\n\n  const toggle = () => setOpen(!open);\n\n  const submitInfo = () => {\n    setOpen(!open);\n    setUserLogin(name);\n  };\n\n  const logout = e => {\n    setGroupsData([]);\n    setIsGroupsDataReadyState(() => false);\n    setWarningsViewed({});\n    setLastWarningUpdate({});\n    cleanSession();\n    history.push('/login');\n  };\n\n  function countServices(services) {\n    let count = 0;\n\n    for (let key in services) {\n      if (services[key] && services[key][\"status\"] === \"ALIVE\") {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  const testNew = async () => {\n    try {\n      let httpRequestBody = createBaseHttpRequestBody();\n      const statusRoute = \"/status/check\";\n      const servicesResult = (await axiosRetryProxy.post(\"\".concat(env.apiAddress).concat(statusRoute), httpRequestBody)).data;\n      let routesOnn = countServices(servicesResult);\n      setValor(routesOnn);\n      setResult(servicesResult);\n    } catch (error) {\n      console.log(\"Error\");\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // add or remove classes depending if we are on full-screen-maps page or not\n    _jsxDEV(Navbar, {\n      color: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"dark\" : color,\n      expand: \"lg\",\n      className: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              ref: sidebarToggle,\n              className: \"navbar-toggler\",\n              onClick: () => openSidebar(),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NavbarBrand, {\n            children: getBrand()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          navbar: true,\n          style: {\n            flexDirection: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(PendingBell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NotificationBell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            nav: true,\n            isOpen: menuOpen,\n            onClick: () => setMenuOpen(!menuOpen),\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              nav: true,\n              onClick: e => e.preventDefault(),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-username\",\n                children: userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(RiUser3Line, {\n                style: {\n                  width: \"22px\",\n                  height: \"22px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              className: \"dropdown-navbar\",\n              right: true,\n              tag: \"ul\",\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: toggle,\n                children: \"Perfil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: toggleConfig,\n                children: \"Configura\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                className: \"nav-item nav-status\",\n                onClick: toggleStatus,\n                children: [\"Status \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"btn-status\",\n                  className: valor === -1 ? \"btn-status-loading\" : valor < Object.keys(result).length ? \"btn-status-red\" : \"btn-status-green\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                divider: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: e => logout(e),\n                children: \"Sair\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isOpenConfig,\n          toggle: toggleConfig,\n          style: {\n            'maxWidth': '15%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            toggle: toggleConfig,\n            children: \"Configura\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"Som de Alerta:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: event => handleToggleNotificationSound(event.target.checked),\n                  checked: isNotificationSoundEnable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"slider round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: open,\n          toggle: toggle,\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            toggle: toggle,\n            children: \"Editar Informa\\xE7\\xF5es de Usu\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"centralize\",\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                style: {\n                  width: \"93%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                    addonType: \"prepend\",\n                    children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                      style: {\n                        display: \"inline-block\",\n                        margin: \"auto\",\n                        backgroundColor: 'white'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"Nome de Usu\\xE1rio\",\n                    type: \"email\",\n                    onChange: e => setName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: submitInfo,\n              children: \"Confirmar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: toggle,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isOpenStatus,\n          toggle: toggleStatus,\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            toggle: toggleStatus,\n            children: [\"Status \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-signal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            style: {\n              maxHeight: '400px',\n              overflowY: 'scroll',\n              backgroundColor: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      position: 'relative',\n                      left: '10px'\n                    },\n                    children: \"Servi\\xE7o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), valor === -1 ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"loading-div\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"spinner-border text-primary\",\n                  style: {\n                    width: '3rem',\n                    height: '3rem'\n                  },\n                  role: \"status\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"visually-hidden\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 20\n              }, this) : /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: Object.keys(result).map(route => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        fontSize: '1rem',\n                        maxWidth: '80%',\n                        position: 'relative',\n                        left: '10px'\n                      },\n                      children: route.toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-center\",\n                      children: valor === -1 ? \"\" : result[route] ? result[route][\"status\"] === \"ALIVE\" ? /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n                        title: \"Disponível\",\n                        style: {\n                          fontSize: '20px',\n                          color: 'rgb(15, 157, 88)'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(FaExclamationTriangle, {\n                        title: \"Indisponível\",\n                        style: {\n                          fontSize: '20px',\n                          color: '#ffd200'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(FaExclamationTriangle, {\n                        title: \"Valor Nulo\",\n                        style: {\n                          fontSize: '20px',\n                          color: '#ff0000'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 27\n                    }, this)]\n                  }, route, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(NavigationBar, \"Ys9dWuojaZ28WPpzBKN/EWo+ot0=\", false, function () {\n  return [useHistory];\n});\n\n_c = NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/components/Navbar.js"],"names":["React","useEffect","useState","useHistory","Navbar","NavbarBrand","Nav","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Container","Modal","ModalHeader","ModalBody","ModalFooter","Button","Col","Row","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Table","WarningsContext","LoginContext","GroupsContext","cleanSession","setUserLogin","getUserLogin","routes","axios","axiosRetry","getTimeoutConfig","getRetryConfig","env","RiRefreshLine","RiUser3Line","FaCheckCircle","FaExclamationTriangle","NotificationBell","PendingBell","createBaseHttpRequestBody","ViewsContext","WarningsUpdateContext","NavigationBar","props","history","color","refresh","useContext","open","setOpen","name","setName","isOpenConfig","setIsOpenConfig","toggleConfig","isNotificationSoundEnable","setIsNotificationSoundEnable","setIsGroupsDataReadyState","setGroupsData","setWarningsViewed","setLastWarningUpdate","valor","setValor","result","setResult","menuOpen","setMenuOpen","hasChecked","setHasChecked","isOpenStatus","setIsOpenStatus","toggleStatus","sidebarToggle","useRef","userName","axiosRetryProxy","create","current","window","innerWidth","document","documentElement","className","indexOf","classList","toggle","intervalId","runFunction","testNew","setInterval","clearInterval","savedState","localStorage","getItem","JSON","parse","getBrand","brandName","refreshable","map","prop","key","location","href","layout","path","marginLeft","cursor","openSidebar","handleToggleNotificationSound","checked","new_state","setItem","stringify","submitInfo","logout","e","push","countServices","services","count","httpRequestBody","statusRoute","servicesResult","post","apiAddress","data","routesOnn","error","console","log","pathname","flexDirection","preventDefault","width","height","Object","keys","length","textAlign","event","target","display","margin","backgroundColor","value","maxHeight","overflowY","position","left","route","fontSize","maxWidth","toUpperCase"],"mappings":"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","sourcesContent":["\r\n/*!\r\n\r\n=========================================================\r\n* Paper Dashboard React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Col, Row,\r\n  FormGroup,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Table\r\n} from \"reactstrap\";\r\n\r\nimport { WarningsContext } from \"context/WarningsContext\";\r\nimport { LoginContext } from \"context/LoginContext\";\r\nimport { GroupsContext } from \"context/GroupsContext\";\r\nimport { cleanSession, setUserLogin, getUserLogin } from \"common/SessionUtils\";\r\n\r\nimport routes from \"routes.js\";\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport env from \"common/enviroment\";\r\n\r\nimport { RiRefreshLine, RiUser3Line} from 'react-icons/ri';\r\nimport { FaCheckCircle, FaExclamationTriangle } from \"react-icons/fa\";\r\nimport NotificationBell from \"components/bell/NotificationBell\";\r\nimport PendingBell from \"components/bell/PendingBell\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { ViewsContext } from \"context/ViewsContext\";\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\n\r\n\r\n\r\nexport default function NavigationBar(props) {\r\n  const history = useHistory()\r\n  const color = \"transparent\"\r\n  const { refresh } = React.useContext(ViewsContext)\r\n\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [isOpenConfig, setIsOpenConfig] = useState(false)\r\n  const toggleConfig = () => setIsOpenConfig(!isOpenConfig)\r\n  const {isNotificationSoundEnable, setIsNotificationSoundEnable} = React.useContext(WarningsContext);\r\n  const {setIsGroupsDataReadyState} = React.useContext(LoginContext);\r\n  const {setGroupsData} = React.useContext(GroupsContext);\r\n  const {setWarningsViewed, setLastWarningUpdate} = React.useContext(WarningsUpdateContext)\r\n\r\n  const [valor, setValor] = useState(-1);\r\n  const [result, setResult] = useState({});\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [hasChecked, setHasChecked] = useState(false);\r\n\r\n\r\n  const [isOpenStatus, setIsOpenStatus] = useState(false)\r\n  const toggleStatus = () => setIsOpenStatus(!isOpenStatus)\r\n\r\n  const sidebarToggle = React.useRef();\r\n  const userName = getUserLogin()\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  React.useEffect(() => {\r\n    if (sidebarToggle.current) {\r\n      if (\r\n        window.innerWidth < 993 &&\r\n        // e.history.location.pathname !== e.location.pathname &&\r\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n      ) {\r\n        document.documentElement.classList.toggle(\"nav-open\");\r\n        sidebarToggle.current.classList.toggle(\"toggled\");\r\n      }\r\n    } else\r\n      sidebarToggle.current = true;\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props]);\r\n\r\n  useEffect(()=>{\r\n    let intervalId;\r\n\r\n    const runFunction = () => {\r\n      testNew();\r\n      setHasChecked(true);\r\n    }\r\n\r\n    if((menuOpen || isOpenStatus) && !hasChecked){\r\n      runFunction();\r\n    }\r\n\r\n    if(menuOpen || isOpenStatus) {\r\n      intervalId = setInterval(runFunction, 2 * 60000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[menuOpen, isOpenStatus, hasChecked]);\r\n\r\n  useEffect(() => {\r\n    const savedState = localStorage.getItem('isNotificationSoundEnable');\r\n    if (savedState !== null) {\r\n      setIsNotificationSoundEnable(JSON.parse(savedState));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getBrand = () => {\r\n    let brandName = \"Default Brand\";\r\n    let refreshable = false\r\n\r\n    routes.map((prop, key) => {\r\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n        brandName = prop.name;\r\n        refreshable = prop.refreshable\r\n      }\r\n      return null;\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {brandName}\r\n        {refreshable &&\r\n          <RiRefreshLine\r\n            style={{ marginLeft: \"5px\", cursor: \"pointer\" }}\r\n            onClick={()=> refresh()} //carrega a partir do servidor\r\n          />\r\n        }\r\n      </>\r\n    );\r\n  }\r\n\r\n  const openSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    sidebarToggle.current.classList.toggle(\"toggled\");\r\n  }\r\n\r\n  const handleToggleNotificationSound = (checked) => {\r\n    const new_state = checked;\r\n    setIsNotificationSoundEnable(new_state);\r\n    localStorage.setItem(\"isNotificationSoundEnable\", JSON.stringify(new_state));\r\n  }\r\n\r\n  const toggle = () => setOpen(!open);\r\n\r\n  const submitInfo = () => {\r\n    setOpen(!open);\r\n    setUserLogin(name)\r\n  }\r\n\r\n  const logout = (e) => {\r\n\r\n    setGroupsData([])\r\n    setIsGroupsDataReadyState(()=> (false))\r\n    setWarningsViewed({})\r\n    setLastWarningUpdate({})\r\n\r\n    cleanSession()\r\n\r\n    history.push('/login')\r\n  }\r\n\r\n\r\n  function countServices(services){\r\n    let count = 0;\r\n    for(let key in services){\r\n      if( services[key] && services[key][\"status\"] === \"ALIVE\"){\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  const testNew = async () => {\r\n    try  {\r\n      let httpRequestBody = createBaseHttpRequestBody()\r\n      const statusRoute = \"/status/check\";\r\n\r\n      const servicesResult = (await axiosRetryProxy.post(`${env.apiAddress}${statusRoute}`, httpRequestBody)).data;\r\n\r\n      let routesOnn = countServices(servicesResult);\r\n\r\n      setValor(routesOnn);\r\n      setResult(servicesResult);\r\n    } catch (error){\r\n      console.log(\"Error\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    // add or remove classes depending if we are on full-screen-maps page or not\r\n    <Navbar\r\n      color={\r\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n          ? \"dark\"\r\n          : color\r\n      }\r\n      expand=\"lg\"\r\n      className={\r\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n          ? \"navbar-absolute fixed-top\"\r\n          : \"navbar-absolute fixed-top \" +\r\n          (color === \"transparent\" ? \"navbar-transparent \" : \"\")\r\n      }\r\n    >\r\n      <Container fluid>\r\n        <div className=\"navbar-wrapper\">\r\n          <div className=\"navbar-toggle\">\r\n            <button\r\n              type=\"button\"\r\n              ref={sidebarToggle}\r\n              className=\"navbar-toggler\"\r\n              onClick={() => openSidebar()}\r\n            >\r\n              <span className=\"navbar-toggler-bar bar1\" />\r\n              <span className=\"navbar-toggler-bar bar2\" />\r\n              <span className=\"navbar-toggler-bar bar3\" />\r\n            </button>\r\n          </div>\r\n          <NavbarBrand>{getBrand()}</NavbarBrand>\r\n        </div>\r\n        <Nav navbar style={{flexDirection: 'row'}}>\r\n          <PendingBell/> \r\n          <NotificationBell/>\r\n          <UncontrolledDropdown nav isOpen={menuOpen} onClick={()=> setMenuOpen(!menuOpen)}>\r\n            <DropdownToggle\r\n              nav\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <span className=\"navbar-username\">{userName}</span>\r\n{/*                 <img\r\n                alt=\"Foto de Perfil\"\r\n                className=\"rounded-circle shadow\"\r\n                src=\"https://github.com/luizfsoares.png\"\r\n\r\n                style={{ width: \"40px\" }}\r\n              /> */}\r\n              <RiUser3Line style={{ width: \"22px\", height:\"22px\" }} />\r\n            </DropdownToggle>\r\n\r\n            <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n              <DropdownItem onClick={toggle} >Perfil</DropdownItem>\r\n              <DropdownItem onClick={toggleConfig} >Configurações</DropdownItem>\r\n              <DropdownItem className=\"nav-item nav-status\" onClick={toggleStatus}>\r\n                Status <div id=\"btn-status\" className= { valor=== -1? \"btn-status-loading\" : valor < Object.keys(result).length ? \"btn-status-red\": \"btn-status-green\"}/>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem  onClick={e => logout(e)}>Sair</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n\r\n        <Modal isOpen={isOpenConfig} toggle={toggleConfig} style={{'maxWidth': '15%'}}>\r\n            <ModalHeader toggle={toggleConfig}>Configurações</ModalHeader>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col style={{textAlign: 'center'}}>\r\n                  Som de Alerta:\r\n                </Col>\r\n              </Row>\r\n                <Col style={{textAlign: 'center'}}>\r\n                  <label className=\"switch\">\r\n                    <input\r\n                    type=\"checkbox\"\r\n                    onChange={event => handleToggleNotificationSound(event.target.checked)}\r\n                    checked={isNotificationSoundEnable}/>\r\n                    <span className=\"slider round\"></span>\r\n                  </label>\r\n                </Col>\r\n            </ModalBody>\r\n          </Modal>\r\n\r\n          <Modal isOpen={open} toggle={toggle} >\r\n            <ModalHeader toggle={toggle}>Editar Informações de Usuário</ModalHeader>\r\n            <ModalBody>\r\n\r\n                <Col className=\"centralize\">\r\n                  <FormGroup style={{width: \"93%\"}}>\r\n                    <InputGroup >\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText\r\n                          style={{ display: \"inline-block\", margin: \"auto\", backgroundColor: 'white'}}\r\n                        >\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input placeholder=\"Nome de Usuário\" type=\"email\" onChange={e => setName(e.target.value)} />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n\r\n                </Col>\r\n\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={submitInfo}>Confirmar</Button>{' '}\r\n              <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal isOpen={isOpenStatus} toggle={toggleStatus}>\r\n            <ModalHeader toggle={toggleStatus}>Status <i className=\"fas fa-signal\"></i></ModalHeader>\r\n            <ModalBody style={{maxHeight: '400px', overflowY: 'scroll', backgroundColor: \"white\"}}>\r\n              <Table>\r\n                <thead >\r\n                  <tr >\r\n                    <th style={{position: 'relative', left: '10px'}}>Serviço</th>\r\n                    <th className=\"text-center\">Status</th>\r\n                  </tr>\r\n                </thead>\r\n                {\r\n                  valor === -1?\r\n                  (<tbody className=\"loading-div\">\r\n                      <tr className=\"spinner-border text-primary\"style={{width: '3rem', height: '3rem'}} role=\"status\">\r\n                        <span className=\"visually-hidden\"></span>\r\n                      </tr>\r\n                      {/* <span className=\"btn-status-loading\" style={{width: '3rem', height:'3rem'}}></span> */}\r\n                    </tbody>)\r\n                  :\r\n                  (<tbody>\r\n                   {\r\n                      Object.keys(result).map(route=> {\r\n                        return (\r\n                        <tr key={route} >\r\n                          <td style={{fontSize: '1rem', maxWidth:'80%', position:'relative', left: '10px'}}>{route.toUpperCase()}</td>\r\n                          <td className=\"text-center\">\r\n                          {valor === -1 ? \"\" : (result[route] ? (\r\n                            result[route][\"status\"] === \"ALIVE\" ?\r\n                                <FaCheckCircle title={\"Disponível\"} style={{fontSize: '20px', color:'rgb(15, 157, 88)' }} /> :\r\n                                <FaExclamationTriangle title={\"Indisponível\"} style={{fontSize: '20px', color:'#ffd200'}}/>\r\n                          ) : (\r\n                            <FaExclamationTriangle title={\"Valor Nulo\"} style={{fontSize: '20px', color:'#ff0000'}} />\r\n                          ))}\r\n                          </td>\r\n                        </tr>\r\n                        )\r\n                      })\r\n                    }\r\n\r\n                </tbody>)\r\n                }\r\n\r\n              </Table>\r\n            </ModalBody>\r\n          </Modal>\r\n          \r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}