{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\nimport { EXCLUSION } from \"components/modals/ModalConsts\";\nimport { EDITION } from \"components/modals/ModalConsts\";\nimport React from \"react\";\nexport const useModalWithData = () => {\n  _s();\n\n  const [modalType, setModalType] = React.useState(-1);\n  const [isModalActive, setIsModalActive] = React.useState(false);\n  const [modalData, setModalData] = React.useState({});\n  const [modalActionMethods, setModalActionMethods] = React.useState([]);\n\n  const toggleModalOn = (type, data) => {\n    if (data) {\n      setModalData(data);\n    }\n\n    setModalType(type);\n    setIsModalActive(true);\n  };\n\n  const toggleModalOff = () => {\n    setModalType(MODAL_TYPE_ENUM.NONE);\n    setIsModalActive(false);\n  };\n\n  const toogleMessageModalOn = (message, type) => {\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE, {\n      message: message,\n      messageType: type\n    });\n  };\n\n  const toogleConfirmationModalOn = (data, service) => {\n    if (data.operation === EDITION) setModalActionMethods([undefined, service, undefined]);else if (data.operation === EXCLUSION) setModalActionMethods([undefined, undefined, service]);\n    toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION, data);\n  };\n\n  return {\n    modalData,\n    setModalData,\n    modalActionMethods,\n    setModalActionMethods,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff,\n    toogleMessageModalOn,\n    toogleConfirmationModalOn\n  };\n};\n\n_s(useModalWithData, \"+M/Ma85E5dLgondfL1IXnZkw4zk=\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/common/hooks/useModalWithData.js"],"names":["MODAL_TYPE_ENUM","EXCLUSION","EDITION","React","useModalWithData","modalType","setModalType","useState","isModalActive","setIsModalActive","modalData","setModalData","modalActionMethods","setModalActionMethods","toggleModalOn","type","data","toggleModalOff","NONE","toogleMessageModalOn","message","MESSAGE","messageType","toogleConfirmationModalOn","service","operation","undefined","CONFIRMATION"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,kCAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAEpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,KAAK,CAACI,QAAN,CAAe,CAAC,CAAhB,CAAlC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,KAAK,CAACI,QAAN,CAAe,KAAf,CAA1C;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACI,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CV,KAAK,CAACI,QAAN,CAAe,EAAf,CAApD;;AAEA,QAAMO,aAAa,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACpC,QAAIA,IAAJ,EAAU;AACRL,MAAAA,YAAY,CAACK,IAAD,CAAZ;AACD;;AAEDV,IAAAA,YAAY,CAACS,IAAD,CAAZ;AACAN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAPD;;AASA,QAAMQ,cAAc,GAAG,MAAM;AAC3BX,IAAAA,YAAY,CAACN,eAAe,CAACkB,IAAjB,CAAZ;AACAT,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAHD;;AAKA,QAAMU,oBAAoB,GAAG,CAACC,OAAD,EAAUL,IAAV,KAAmB;AAC9CD,IAAAA,aAAa,CAACd,eAAe,CAACqB,OAAjB,EAA0B;AAAED,MAAAA,OAAO,EAAEA,OAAX;AAAoBE,MAAAA,WAAW,EAAEP;AAAjC,KAA1B,CAAb;AACD,GAFD;;AAKA,QAAMQ,yBAAyB,GAAG,CAACP,IAAD,EAAOQ,OAAP,KAAmB;AACnD,QAAIR,IAAI,CAACS,SAAL,KAAmBvB,OAAvB,EACEW,qBAAqB,CAAC,CAACa,SAAD,EAAYF,OAAZ,EAAqBE,SAArB,CAAD,CAArB,CADF,KAEK,IAAIV,IAAI,CAACS,SAAL,KAAmBxB,SAAvB,EACHY,qBAAqB,CAAC,CAACa,SAAD,EAAYA,SAAZ,EAAuBF,OAAvB,CAAD,CAArB;AAEFV,IAAAA,aAAa,CAACd,eAAe,CAAC2B,YAAjB,EAA+BX,IAA/B,CAAb;AAED,GARD;;AAYA,SAAO;AACLN,IAAAA,SADK;AACMC,IAAAA,YADN;AAELC,IAAAA,kBAFK;AAEeC,IAAAA,qBAFf;AAGLL,IAAAA,aAHK;AAGUH,IAAAA,SAHV;AAILS,IAAAA,aAJK;AAIUG,IAAAA,cAJV;AAKLE,IAAAA,oBALK;AAKiBI,IAAAA;AALjB,GAAP;AAQD,CA9CM;;GAAMnB,gB","sourcesContent":["import MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\nimport { EXCLUSION } from \"components/modals/ModalConsts\";\r\nimport { EDITION } from \"components/modals/ModalConsts\";\r\nimport React from \"react\";\r\n\r\nexport const useModalWithData = () => {\r\n\r\n  const [modalType, setModalType] = React.useState(-1);\r\n  const [isModalActive, setIsModalActive] = React.useState(false);\r\n  const [modalData, setModalData] = React.useState({});\r\n  const [modalActionMethods, setModalActionMethods] = React.useState([]);\r\n\r\n  const toggleModalOn = (type, data) => {\r\n    if (data) {\r\n      setModalData(data);\r\n    }\r\n\r\n    setModalType(type);\r\n    setIsModalActive(true);\r\n  };\r\n\r\n  const toggleModalOff = () => {\r\n    setModalType(MODAL_TYPE_ENUM.NONE);\r\n    setIsModalActive(false);\r\n  }\r\n\r\n  const toogleMessageModalOn = (message, type) => {\r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE, { message: message, messageType: type })\r\n  }\r\n\r\n\r\n  const toogleConfirmationModalOn = (data, service) => {\r\n    if (data.operation === EDITION)\r\n      setModalActionMethods([undefined, service, undefined]);\r\n    else if (data.operation === EXCLUSION)\r\n      setModalActionMethods([undefined, undefined, service]);\r\n\r\n    toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION, data)\r\n    \r\n  }\r\n\r\n\r\n\r\n  return {\r\n    modalData, setModalData,\r\n    modalActionMethods, setModalActionMethods,\r\n    isModalActive, modalType,\r\n    toggleModalOn, toggleModalOff,\r\n    toogleMessageModalOn, toogleConfirmationModalOn\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}