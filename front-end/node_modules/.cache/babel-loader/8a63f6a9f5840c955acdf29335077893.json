{"ast":null,"code":"import { isEmpty } from \"./collections\";\nexport function validateCPF(cpf) {\n  if (!cpf || cpf.length !== 11 || cpf === \"00000000000\" || cpf === \"11111111111\" || cpf === \"2222222222\" || cpf === \"33333333333\" || cpf === \"44444444444\" || cpf === \"55555555555\" || cpf === \"66666666666\" || cpf === \"77777777777\" || cpf === \"88888888888\" || cpf === \"99999999999\") return false;\n  var soma = 0;\n  var resto;\n\n  for (var i = 1; i <= 9; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n\n  resto = soma * 10 % 11;\n  if (resto === 10 || resto === 11) resto = 0;\n  if (resto !== parseInt(cpf.substring(9, 10))) return false;\n  soma = 0;\n\n  for (i = 1; i <= 10; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n\n  resto = soma * 10 % 11;\n  if (resto === 10 || resto === 11) resto = 0;\n  if (resto !== parseInt(cpf.substring(10, 11))) return false;\n  return true;\n}\nexport function validateCNPJ(cnpj) {\n  if (!cnpj || cnpj.length !== 14 || cnpj === \"00000000000000\" || cnpj === \"11111111111111\" || cnpj === \"22222222222222\" || cnpj === \"33333333333333\" || cnpj === \"44444444444444\" || cnpj === \"55555555555555\" || cnpj === \"66666666666666\" || cnpj === \"77777777777777\" || cnpj === \"88888888888888\" || cnpj === \"99999999999999\") return false;\n  var tamanho = cnpj.length - 2;\n  var numeros = cnpj.substring(0, tamanho);\n  var digitos = cnpj.substring(tamanho);\n  var soma = 0;\n  var pos = tamanho - 7;\n\n  for (var i = tamanho; i >= 1; i--) {\n    soma += numeros.charAt(tamanho - i) * pos--;\n    if (pos < 2) pos = 9;\n  }\n\n  var resultado = soma % 11 < 2 ? 0 : 11 - soma % 11; // eslint-disable-next-line eqeqeq\n\n  if (resultado != digitos.charAt(0)) return false;\n  tamanho = tamanho + 1;\n  numeros = cnpj.substring(0, tamanho);\n  soma = 0;\n  pos = tamanho - 7;\n\n  for (i = tamanho; i >= 1; i--) {\n    soma += numeros.charAt(tamanho - i) * pos--;\n    if (pos < 2) pos = 9;\n  }\n\n  resultado = soma % 11 < 2 ? 0 : 11 - soma % 11; // eslint-disable-next-line eqeqeq\n\n  if (resultado != digitos.charAt(1)) return false;\n  return true;\n}\n\nfunction isNumber(value) {\n  if (undefined === value || null === value) {\n    return false;\n  }\n\n  if (typeof value == 'number') {\n    return true;\n  }\n\n  return !isNaN(value - 0);\n}\n\nexport function escapeSpecialCharacters(value) {\n  if (typeof value === 'string') return value.replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n');else if (!isNumber(value) && isEmpty(value)) {\n    // precisa testar se não é número, pq 0 e 1, são avaliados como false e true \n    return \"\";\n  } else {\n    return value;\n  }\n}\nexport function removeUnicode(input) {\n  let keepSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (typeof input === 'string') {\n    let cleanText = input.replace(/\\\\u([a-fA-F0-9]{4})/g, function (match, grp) {\n      return String.fromCharCode(parseInt(grp, 16));\n    });\n    cleanText = cleanText.replace(/\\u00A0/g, '');\n\n    if (!keepSpace) {\n      cleanText = cleanText.replace(/[\\t\\n]/g, '');\n    }\n\n    return cleanText.trim();\n  }\n\n  return input;\n}\nexport function getCleanText(value) {\n  if (value === undefined || value === null) {\n    return \"\";\n  }\n\n  return value;\n}\nexport function toUpperCase(value) {\n  if (!value) return \"\";\n  return value.toUpperCase();\n}\nexport function formatCnpjCpf(value) {\n  if (!value) {\n    return \"\";\n  }\n\n  const cnpjCpf = value.toString().replace(/\\D/g, \"\"); // CPF\n\n  if (cnpjCpf.length === 11) {\n    // eslint-disable-next-line no-useless-escape\n    return cnpjCpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/g, \"\\$1.\\$2.\\$3-\\$4\");\n  } // CNPJ\n  // eslint-disable-next-line no-useless-escape\n\n\n  return cnpjCpf.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/g, \"\\$1.\\$2.\\$3/\\$4-\\$5\");\n}\nexport function cpfOrCnpjThatsTheQuestion(cpf, cnpj) {\n  return cpf ? formatCnpjCpf(cpf) : formatCnpjCpf(cnpj);\n}\nexport function convertUtcToBrazilianDate(utCDatte) {\n  if (utCDatte === null) return utCDatte;\n  const dateObj = new Date(utCDatte);\n  const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ');\n  return \"\".concat(dateHour[0], \" \").concat(dateHour[1]);\n}\nexport function getNowDateTimeString() {\n  const timeZone = new Date().getTimezoneOffset() * 60000;\n  const localISOTime = new Date(Date.now() - timeZone);\n  return localISOTime.toISOString().split(\".\")[0];\n}","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/utils/validate.js"],"names":["isEmpty","validateCPF","cpf","length","soma","resto","i","parseInt","substring","validateCNPJ","cnpj","tamanho","numeros","digitos","pos","charAt","resultado","isNumber","value","undefined","isNaN","escapeSpecialCharacters","replace","removeUnicode","input","keepSpace","cleanText","match","grp","String","fromCharCode","trim","getCleanText","toUpperCase","formatCnpjCpf","cnpjCpf","toString","cpfOrCnpjThatsTheQuestion","convertUtcToBrazilianDate","utCDatte","dateObj","Date","dateHour","toLocaleString","split","getNowDateTimeString","timeZone","getTimezoneOffset","localISOTime","now","toISOString"],"mappings":"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","sourcesContent":["import { isEmpty } from \"./collections\"\r\n\r\nexport function  validateCPF(cpf){\r\n    if ( !cpf || cpf.length !== 11\r\n      || cpf === \"00000000000\"\r\n      || cpf === \"11111111111\"\r\n      || cpf === \"2222222222\"\r\n      || cpf === \"33333333333\"\r\n      || cpf === \"44444444444\"\r\n      || cpf === \"55555555555\"\r\n      || cpf === \"66666666666\"\r\n      || cpf === \"77777777777\"\r\n      || cpf === \"88888888888\"\r\n      || cpf === \"99999999999\" )\r\n    return false\r\n    var soma = 0\r\n    var resto\r\n    for (var i = 1; i <= 9; i++)\r\n      soma = soma + parseInt(cpf.substring(i-1, i)) * (11 - i)\r\n    resto = (soma * 10) % 11\r\n    if ((resto === 10) || (resto === 11))  resto = 0\r\n    if (resto !== parseInt(cpf.substring(9, 10)) ) return false\r\n    soma = 0\r\n    for (i = 1; i <= 10; i++)\r\n      soma = soma + parseInt(cpf.substring(i-1, i)) * (12 - i)\r\n    resto = (soma * 10) % 11\r\n    if ((resto === 10) || (resto === 11))  resto = 0\r\n    if (resto !== parseInt(cpf.substring(10, 11) ) ) return false\r\n    return true\r\n  \r\n  }\r\n  \r\n  export function validateCNPJ(cnpj) {\r\n    if (!cnpj || cnpj.length !== 14\r\n      || cnpj === \"00000000000000\"\r\n      || cnpj === \"11111111111111\"\r\n      || cnpj === \"22222222222222\"\r\n      || cnpj === \"33333333333333\"\r\n      || cnpj === \"44444444444444\"\r\n      || cnpj === \"55555555555555\"\r\n      || cnpj === \"66666666666666\"\r\n      || cnpj === \"77777777777777\"\r\n      || cnpj === \"88888888888888\"\r\n      || cnpj === \"99999999999999\")\r\n      return false\r\n    var tamanho = cnpj.length - 2\r\n    var numeros = cnpj.substring(0, tamanho)\r\n    var digitos = cnpj.substring(tamanho)\r\n    var soma = 0\r\n    var pos = tamanho - 7\r\n    for (var i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--\r\n      if (pos < 2) pos = 9\r\n    }\r\n    var resultado = soma % 11 < 2 ? 0 : 11 - soma % 11\r\n    // eslint-disable-next-line eqeqeq\r\n    if (resultado != digitos.charAt(0)) return false;\r\n    tamanho = tamanho + 1\r\n    numeros = cnpj.substring(0, tamanho)\r\n    soma = 0\r\n    pos = tamanho - 7\r\n    for (i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--\r\n      if (pos < 2) pos = 9\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11\r\n    // eslint-disable-next-line eqeqeq\r\n    if (resultado != digitos.charAt(1)) return false\r\n    return true;\r\n  \r\n  }\r\n  \r\n\r\n  function isNumber(value) {\r\n    if ((undefined === value) || (null === value)) {\r\n        return false;\r\n    }\r\n    if (typeof value == 'number') {\r\n        return true;\r\n    }\r\n    return !isNaN(value - 0);\r\n  }\r\n  \r\n  export function escapeSpecialCharacters(value) {\r\n    if (typeof value === 'string' )\r\n      return value.replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n')\r\n    else if (!isNumber(value) && isEmpty(value) ) { // precisa testar se não é número, pq 0 e 1, são avaliados como false e true \r\n      return \"\"\r\n    } else {\r\n      return value\r\n    }\r\n  }\r\n  \r\n  \r\n  export function removeUnicode(input, keepSpace = false) {\r\n  \r\n    if (typeof input === 'string') {\r\n      let cleanText = input.replace(/\\\\u([a-fA-F0-9]{4})/g, function (match, grp) {\r\n        return String.fromCharCode(parseInt(grp, 16));\r\n      });\r\n  \r\n      cleanText = cleanText.replace(/\\u00A0/g, '');\r\n      if (!keepSpace) {\r\n        cleanText = cleanText.replace(/[\\t\\n]/g, '');\r\n      }\r\n      return cleanText.trim();\r\n    }\r\n    return input\r\n  \r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  export  function getCleanText(value) {\r\n    if (value === undefined || value === null) {\r\n      return \"\"\r\n    }\r\n    return value\r\n  }\r\n  \r\n  \r\n  export function toUpperCase (value) {\r\n      if (!value)\r\n        return \"\"\r\n      return value.toUpperCase()\r\n    }\r\n    \r\n  \r\n  \r\n  \r\n    export function formatCnpjCpf(value) {\r\n  \r\n      if (!value) {\r\n        return \"\"\r\n      }\r\n    \r\n      const cnpjCpf = value.toString().replace(/\\D/g, \"\")\r\n    \r\n      // CPF\r\n      if (cnpjCpf.length === 11) {\r\n          // eslint-disable-next-line no-useless-escape\r\n          return cnpjCpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/g, \"\\$1.\\$2.\\$3-\\$4\")\r\n      }\r\n    \r\n      // CNPJ\r\n      // eslint-disable-next-line no-useless-escape\r\n      return cnpjCpf.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/g, \"\\$1.\\$2.\\$3/\\$4-\\$5\")\r\n    }\r\n    \r\n    \r\n    export function cpfOrCnpjThatsTheQuestion(cpf, cnpj) {\r\n      return cpf ? formatCnpjCpf(cpf) : formatCnpjCpf(cnpj)\r\n    }\r\n  \r\n  \r\n  \r\n    export function convertUtcToBrazilianDate(utCDatte){\r\n  \r\n      if (utCDatte === null)\r\n          return utCDatte\r\n    \r\n      const dateObj = new Date(utCDatte)\r\n      const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ')\r\n    \r\n      return `${dateHour[0]} ${dateHour[1]}`\r\n    \r\n    }\r\n    \r\n    \r\n    \r\n    export function getNowDateTimeString() {\r\n      const timeZone = (new Date()).getTimezoneOffset() * 60000;\r\n      const localISOTime = (new Date(Date.now() - timeZone));\r\n      return localISOTime.toISOString().split(\".\")[0];\r\n    }\r\n    "]},"metadata":{},"sourceType":"module"}