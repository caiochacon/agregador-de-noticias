{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\VehicleModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, ModalBody, ModalHeader, Col, Alert, Spinner, ListGroup, ListGroupItem, Row } from \"reactstrap\";\nimport { getCortexToken, getUserRole } from \"common/SessionUtils\";\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport env from \"common/enviroment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VehicleModal(props) {\n  _s();\n\n  const [modalData, setModalData] = React.useState({});\n  const [hasRequestedHasura, setHasRequestedHasura] = React.useState(false);\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  React.useEffect(() => {\n    if (!hasRequestedHasura) {\n      requestHasura();\n      setHasRequestedHasura(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps  \n\n  }, [hasRequestedHasura]);\n  const BLANK_VEHICLE_DATA = {\n    plate: '',\n    data: [],\n    error: false\n  };\n  const newNames = {\n    \"vehicle_category\": \"categoria\",\n    \"vehicle_color\": \"cor\",\n    \"vehicle_license_plate\": \"placa\",\n    \"vehicle_license_uf\": \"ufEmplacamento\",\n    \"vehicle_model_brand\": \"marcaModelo\",\n    \"vehicle_model_year\": \"anoModelo\",\n    \"vehicle_plate_city\": \"municipioPlaca\",\n    \"vehicle_segment\": \"especie\",\n    \"vehicle_type\": \"tipoVeiculo\"\n  };\n\n  const renameKeys = (obj, newKeys) => {\n    let key = Object.keys(obj);\n    let values = Object.values(obj);\n    let newObj = {};\n    key.forEach((item, index) => {\n      if (newKeys[item] !== undefined) {\n        newObj[newKeys[item]] = values[index];\n      }\n    });\n    const sortedKeys = Object.keys(newObj).sort();\n    const sortedObject = {};\n    sortedKeys.forEach(key => {\n      sortedObject[key] = newObj[key];\n    });\n    return sortedObject;\n  };\n\n  const titleCase = text => {\n    return text.toLowerCase().split(' ').map(word => {\n      return word[0].toUpperCase() + word.slice(1);\n    }).join(' ');\n  };\n\n  const ChangeKey = nome => {\n    let mudar = [];\n    nome.split('').forEach((letra, index) => {\n      if (nome[index] === \"\".concat(nome[index].toUpperCase())) mudar.push(nome[index]);\n    });\n    mudar.forEach(function (letra) {\n      nome = nome.replace(\"\".concat(letra), \" \".concat(letra.toLowerCase()));\n    });\n    return titleCase(nome);\n  };\n\n  function sleep(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n\n  const requestCortex = () => {\n    const body = {\n      'cortex_token': getCortexToken(),\n      'role': getUserRole()\n    };\n    sleep(1500).then(() => {\n      axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/cortex/license/\").concat(props.data), body).then(res => {\n        let data_consulta = []; // Do something after the sleep!\n\n        Object.entries(res.data).forEach(_ref => {\n          let [key, value] = _ref;\n\n          if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\" || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\" || key === \"municipioPlaca\") {\n            data_consulta.push({\n              \"chave\": key ? ChangeKey(key) : '',\n              \"valor\": value ? value : ''\n            });\n          }\n        });\n        setModalData({\n          BLANK_VEHICLE_DATA,\n          plate: props.data,\n          data: data_consulta\n        });\n      }).catch(err => {\n        setModalData({\n          BLANK_VEHICLE_DATA,\n          plate: props.data,\n          error: true\n        });\n      });\n    });\n  };\n\n  const requestHasura = () => {\n    let httpRequestBody = createBaseHttpRequestBody();\n    httpRequestBody['id'] = props.data;\n    axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/vehicles/read\"), httpRequestBody).then(res => {\n      let data_consulta = [];\n\n      if (res.data.length > 0) {\n        let new_data = renameKeys(res.data[0], newNames);\n        Object.entries(new_data).forEach(_ref2 => {\n          let [key, value] = _ref2;\n\n          if (key) {\n            data_consulta.push({\n              \"chave\": key ? ChangeKey(key) : '',\n              \"valor\": value ? value : ''\n            });\n          }\n        });\n        setModalData({\n          BLANK_VEHICLE_DATA,\n          plate: props.data,\n          data: data_consulta\n        });\n      } else {\n        requestCortex();\n      }\n    }).catch(err => {\n      console.log(\"ERRO\", err);\n      requestCortex();\n    });\n  };\n\n  console.log(\"VEHICLE\", props);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.show,\n    toggle: props.toggle,\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: props.toggleModalOff,\n      children: \"Placa \".concat(props.data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: modalData.data && Array.isArray(modalData.data) ? modalData.data.map((dados, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: \"justify-content-between\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: dados.chave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: dados.valor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)) : modalData.error ? /*#__PURE__*/_jsxDEV(Row, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              color: \"danger\",\n              children: \"ERRO: N\\xE3o foi poss\\xEDvel contactar servi\\xE7o Cortex!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Row, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VehicleModal, \"Bf9Utz11bgwa96+lLClmIVC8i6U=\");\n\n_c = VehicleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VehicleModal\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/modals/VehicleModal.js"],"names":["React","Modal","ModalBody","ModalHeader","Col","Alert","Spinner","ListGroup","ListGroupItem","Row","getCortexToken","getUserRole","createBaseHttpRequestBody","axios","axiosRetry","getTimeoutConfig","getRetryConfig","env","VehicleModal","props","modalData","setModalData","useState","hasRequestedHasura","setHasRequestedHasura","axiosRetryProxy","create","useEffect","requestHasura","BLANK_VEHICLE_DATA","plate","data","error","newNames","renameKeys","obj","newKeys","key","Object","keys","values","newObj","forEach","item","index","undefined","sortedKeys","sort","sortedObject","titleCase","text","toLowerCase","split","map","word","toUpperCase","slice","join","ChangeKey","nome","mudar","letra","push","replace","sleep","time","Promise","resolve","setTimeout","requestCortex","body","then","post","apiAddress","res","data_consulta","entries","value","catch","err","httpRequestBody","length","new_data","console","log","show","toggle","toggleModalOff","Array","isArray","dados","chave","valor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Modal, ModalBody, ModalHeader,\r\n  Col, Alert, Spinner,\r\n  ListGroup, ListGroupItem, Row\r\n} from \"reactstrap\";\r\nimport { getCortexToken, getUserRole } from \"common/SessionUtils\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport env from \"common/enviroment\";\r\n\r\n\r\nexport default function VehicleModal(props){\r\n\r\n  const [modalData, setModalData] = React.useState({});\r\n  const [hasRequestedHasura, setHasRequestedHasura] = React.useState(false);\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  React.useEffect(() => {\r\n    if (!hasRequestedHasura) {\r\n      requestHasura();\r\n      setHasRequestedHasura(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps  \r\n  }, [hasRequestedHasura]);\r\n\r\n  const BLANK_VEHICLE_DATA = {\r\n    plate: '',\r\n    data: [],\r\n    error: false\r\n  }\r\n\r\n  const newNames = {\r\n    \"vehicle_category\": \"categoria\",\r\n    \"vehicle_color\": \"cor\",\r\n    \"vehicle_license_plate\": \"placa\",\r\n    \"vehicle_license_uf\": \"ufEmplacamento\",\r\n    \"vehicle_model_brand\": \"marcaModelo\",\r\n    \"vehicle_model_year\": \"anoModelo\",\r\n    \"vehicle_plate_city\": \"municipioPlaca\",\r\n    \"vehicle_segment\": \"especie\",\r\n    \"vehicle_type\": \"tipoVeiculo\"\r\n  }\r\n\r\n  const renameKeys = (obj, newKeys) => {\r\n    let key = Object.keys(obj);\r\n    let values = Object.values(obj);\r\n  \r\n    let newObj = {};\r\n    key.forEach((item, index) => {\r\n      if (newKeys[item] !== undefined) {\r\n        newObj[newKeys[item]] = values[index];\r\n      }\r\n    });\r\n\r\n    const sortedKeys = Object.keys(newObj).sort();\r\n    const sortedObject = {};\r\n  \r\n    sortedKeys.forEach(key => {\r\n      sortedObject[key] = newObj[key];\r\n    });\r\n  \r\n    return sortedObject;\r\n  };\r\n\r\n  const titleCase = (text) => {\r\n    return text.toLowerCase()\r\n      .split(' ')\r\n      .map((word) => {\r\n        return word[0].toUpperCase() + word.slice(1);\r\n      }).join(' ')\r\n  }\r\n\r\n  const ChangeKey = (nome) => {\r\n    let mudar = []\r\n\r\n    nome.split('').forEach((letra, index) => {\r\n      if (nome[index] === `${nome[index].toUpperCase()}`)\r\n        mudar.push(nome[index])\r\n    })\r\n\r\n    mudar.forEach(function (letra) {\r\n      nome = nome.replace(`${letra}`, ` ${letra.toLowerCase()}`)\r\n    })\r\n\r\n    return titleCase(nome)\r\n  }\r\n\r\n\r\n  function sleep(time) {\r\n    return new Promise((resolve) => setTimeout(resolve, time));\r\n  }\r\n\r\n\r\n  const requestCortex = () => {\r\n    const body = {\r\n      'cortex_token': getCortexToken(),\r\n      'role': getUserRole()\r\n    }\r\n\r\n    sleep(1500).then(() => {\r\n      axiosRetryProxy.post(`${env.apiAddress}/cortex/license/${props.data}`, body).then(res => {\r\n\r\n        let data_consulta = []\r\n        // Do something after the sleep!\r\n        Object.entries(res.data).forEach(([key, value]) => {\r\n\r\n          if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\"\r\n            || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\"\r\n            || key === \"municipioPlaca\") {\r\n            data_consulta.push({\r\n              \"chave\": key ? ChangeKey(key) : '',\r\n              \"valor\": value ? value : ''\r\n            })\r\n          }\r\n        })\r\n        setModalData({BLANK_VEHICLE_DATA, plate: props.data, data : data_consulta})\r\n\r\n      }).catch((err) => {\r\n        setModalData({BLANK_VEHICLE_DATA, plate: props.data, error : true})\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  const requestHasura = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody();\r\n    httpRequestBody['id'] = props.data\r\n    \r\n    axiosRetryProxy.post(`${env.apiAddress}/vehicles/read`, httpRequestBody).then(res => {\r\n        let data_consulta = []\r\n\r\n        if (res.data.length > 0) {\r\n          let new_data = renameKeys(res.data[0], newNames)\r\n\r\n          Object.entries(new_data).forEach(([key, value]) => {\r\n            if(key){\r\n              data_consulta.push({\r\n                \"chave\": key ? ChangeKey(key) : '',\r\n                \"valor\": value ? value : ''\r\n              })   \r\n            }\r\n          })\r\n          \r\n          setModalData({BLANK_VEHICLE_DATA, plate: props.data, data : data_consulta})\r\n        }\r\n        else {\r\n          requestCortex();\r\n        }\r\n    }\r\n    ).catch((err) => {\r\n      console.log(\"ERRO\", err)\r\n      requestCortex();\r\n    })\r\n  }\r\n\r\n  console.log(\"VEHICLE\", props)\r\n  \r\n  return (\r\n    <Modal isOpen={props.show} toggle={props.toggle} size={\"lg\"}>\r\n    <ModalHeader toggle={props.toggleModalOff}>{`Placa ${props.data}`}</ModalHeader>\r\n    <ModalBody>\r\n      <ListGroup>\r\n        {\r\n          (modalData.data && Array.isArray(modalData.data)) ?\r\n            modalData.data.map((dados, index) => (\r\n              <ListGroupItem key={index} className=\"justify-content-between\">\r\n                <Row>\r\n                  <Col>\r\n                    <b>{dados.chave}</b>\r\n                  </Col>\r\n                  <Col>\r\n                    {dados.valor}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            ))\r\n            :\r\n            modalData.error ?\r\n              <Row className=\"text-center\">\r\n                <Col>\r\n                  <Alert color=\"danger\">\r\n                    ERRO: Não foi possível contactar serviço Cortex!\r\n                  </Alert>\r\n                </Col>\r\n              </Row>\r\n              :\r\n              <Row className=\"text-center\">\r\n                <Col>\r\n                  <Spinner color=\"info\" />\r\n                </Col>\r\n              </Row>\r\n        }\r\n      </ListGroup>\r\n    </ModalBody>\r\n  </Modal>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}