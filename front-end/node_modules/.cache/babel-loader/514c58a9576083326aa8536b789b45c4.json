{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\NotificationModal\\\\panels\\\\FiscalActionPanel.js\";\nimport React from \"react\";\nimport { Row, Input, Col, Label } from 'reactstrap';\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\nimport { FISCAL_ACTION_DATE } from \"common/model/Notification\";\nimport { FISCAL_ACTION_REPORT } from \"common/model/Notification\";\nimport AuditorSelector from \"components/auditor/AuditorSelector\";\nimport { getNowDateTimeString } from \"common/utils/validate\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { treatNullValue } from \"common/utils/collections\";\nimport { hourInput } from \"components/tags/filterPresets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FiscalActionPanel(_ref) {\n  let {\n    data,\n    setData,\n    oldData,\n    refresh,\n    readOnly,\n    invalid\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginLeft: '-30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(AuditorSelector, {\n          label: \"Responsáveis pela Ação Fiscal:\",\n          singleSelectionMode: false,\n          data: data,\n          setData: setData,\n          fieldName: FISCAL_ACTION_AUDITORS,\n          invalidFlag: invalid,\n          toggleDummyFlag: refresh,\n          modalReadonlyMode: readOnly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"input\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Data da A\\xE7\\xE3o Fiscal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"date\",\n          invalid: invalid && (data[FISCAL_ACTION_DATE][0] === \"\" || data[FISCAL_ACTION_DATE][0] === oldData[FISCAL_ACTION_DATE][0]),\n          value: data[FISCAL_ACTION_DATE][0],\n          max: getNowDateTimeString(),\n          readOnly: readOnly,\n          disabled: readOnly,\n          step: \"1\",\n          onChange: e => {\n            setData({ ...data,\n              [FISCAL_ACTION_DATE]: [e.target.value, data[FISCAL_ACTION_DATE][1]]\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"input\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Hor\\xE1rio da A\\xE7\\xE3o Fiscal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: data.fiscal_action_date[1],\n          placeholder: hourInput.placeholder,\n          step: \"1\",\n          readOnly: readOnly,\n          disabled: readOnly,\n          invalid: invalid && (data[FISCAL_ACTION_DATE][1] === \"\" || data[FISCAL_ACTION_DATE][1] === oldData[FISCAL_ACTION_DATE][1]),\n          onChange: hourInput.onChange(data[FISCAL_ACTION_DATE][1], value => setData({ ...data,\n            [FISCAL_ACTION_DATE]: [data[FISCAL_ACTION_DATE][0], value]\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: '5px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"A\\xE7\\xE3o Realizada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          invalid: invalid && (isEmpty(data[FISCAL_ACTION_REPORT]) || data[FISCAL_ACTION_REPORT] === oldData[FISCAL_ACTION_REPORT]),\n          value: treatNullValue(data[FISCAL_ACTION_REPORT]),\n          readOnly: readOnly,\n          disabled: readOnly,\n          maxLength: \"2048\",\n          style: {\n            minHeight: \"21em\",\n            padding: \"6px 7px 6px 12px\"\n          },\n          onChange: e => setData({ ...data,\n            [FISCAL_ACTION_REPORT]: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = FiscalActionPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiscalActionPanel\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/modals/NotificationModal/panels/FiscalActionPanel.js"],"names":["React","Row","Input","Col","Label","FISCAL_ACTION_AUDITORS","FISCAL_ACTION_DATE","FISCAL_ACTION_REPORT","AuditorSelector","getNowDateTimeString","isEmpty","treatNullValue","hourInput","FiscalActionPanel","data","setData","oldData","refresh","readOnly","invalid","marginLeft","e","target","value","fiscal_action_date","placeholder","onChange","marginTop","minHeight","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Row,\r\n  Input,\r\n  Col,\r\n  Label,\r\n} from 'reactstrap';\r\n\r\n\r\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_DATE } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_REPORT } from \"common/model/Notification\";\r\nimport AuditorSelector from \"components/auditor/AuditorSelector\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { treatNullValue } from \"common/utils/collections\";\r\nimport { hourInput } from \"components/tags/filterPresets\";\r\n\r\nexport default function FiscalActionPanel({ data, setData, oldData, refresh, readOnly, invalid }) {\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Row style={{ marginLeft: '-30px' }}>\r\n        <Col>\r\n          <AuditorSelector\r\n            label={\"Responsáveis pela Ação Fiscal:\"}\r\n            singleSelectionMode={false}\r\n            data={data}\r\n            setData={setData}\r\n            fieldName={FISCAL_ACTION_AUDITORS}\r\n            invalidFlag={invalid}\r\n            toggleDummyFlag={refresh}\r\n            modalReadonlyMode={readOnly}\r\n          />\r\n\r\n        </Col>\r\n      </Row>\r\n      <Row >\r\n        <Col>\r\n          <Label for=\"input\"><b>Data da Ação Fiscal:</b></Label>\r\n          <Input\r\n            type='date'\r\n            invalid={invalid && (data[FISCAL_ACTION_DATE][0] === \"\" || data[FISCAL_ACTION_DATE][0] === oldData[FISCAL_ACTION_DATE][0])}\r\n            value={data[FISCAL_ACTION_DATE][0]}\r\n            max={getNowDateTimeString()}\r\n            readOnly={readOnly}\r\n            disabled={readOnly}\r\n            step=\"1\"\r\n            onChange={e => { setData({ ...data, [FISCAL_ACTION_DATE]: [e.target.value, data[FISCAL_ACTION_DATE][1]] }) }}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Label for=\"input\"><b>Horário da Ação Fiscal:</b></Label>\r\n          <Input\r\n            value={data.fiscal_action_date[1]}\r\n            placeholder={hourInput.placeholder}\r\n            step=\"1\"\r\n            readOnly={readOnly}\r\n            disabled={readOnly}\r\n            invalid={invalid && (data[FISCAL_ACTION_DATE][1] === \"\" || data[FISCAL_ACTION_DATE][1] === oldData[FISCAL_ACTION_DATE][1])}\r\n            onChange={hourInput.onChange(data[FISCAL_ACTION_DATE][1], (value) => setData({ ...data, [FISCAL_ACTION_DATE]: [data[FISCAL_ACTION_DATE][0], value] }))}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginTop: '5px' }}>\r\n        <Col>\r\n          <b>Ação Realizada:</b>\r\n          <Input\r\n            type='textarea'\r\n            invalid={invalid && (isEmpty(data[FISCAL_ACTION_REPORT]) || data[FISCAL_ACTION_REPORT] === oldData[FISCAL_ACTION_REPORT])}\r\n            value={treatNullValue(data[FISCAL_ACTION_REPORT])}\r\n            readOnly={readOnly}\r\n            disabled={readOnly}\r\n            maxLength=\"2048\"\r\n            style={{ minHeight: \"21em\", padding: \"6px 7px 6px 12px\" }}\r\n            onChange={e => setData({ ...data, [FISCAL_ACTION_REPORT]: e.target.value })}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>)\r\n}"]},"metadata":{},"sourceType":"module"}