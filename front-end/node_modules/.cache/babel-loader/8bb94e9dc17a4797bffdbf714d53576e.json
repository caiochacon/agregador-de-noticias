{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\SuspensionModal\\\\SuspensionModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, ModalBody, ModalHeader, Button, Col, FormGroup, Input, Row, Spinner } from \"reactstrap\";\nimport env from \"common/enviroment\";\nimport { FcOk, FcHighPriority } from \"react-icons/fc\";\nimport { RiTimeFill } from \"react-icons/ri\";\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\nimport MessageModal from \"../MessageModal\";\nimport { EDITION, ERROR, OK } from \"../ModalConsts\";\nimport { LetterFilter } from \"common/utils/filters\";\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport { getUserLogin } from \"common/SessionUtils\";\nimport STATUS_ENUM from \"common/enumerators/StatusEnum\";\nimport axios from \"axios\";\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\nimport { PAUSE_TIMESTAMP } from \"common/model/WarningConfig\";\nimport { PAUSE_USER } from \"common/model/WarningConfig\";\nimport { PAUSE_REPORT } from \"common/model/WarningConfig\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { getNowDateTimeString } from \"common/utils/validate\";\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\nimport { getValue } from \"common/utils/errorTreatment\";\nimport treatError from \"common/utils/errorTreatment\";\nimport { STATUS } from \"common/model/WarningConfig\";\nimport { MODIFICATION_DATE } from \"common/model/WarningConfig\";\nimport { MODIFICATION_USER } from \"common/model/WarningConfig\";\nimport { GROUP_IDS_SSE } from \"common/model/WarningConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SUSPENSION_MODE = 2;\nexport const REACTIVATION_MODE = 3;\nexport const MESSAGE_MODE = 4;\nconst REPORT = \"report\";\nconst TIMESTAMP = \"timestamp\";\nexport const BLANK_FORM_DATA = {\n  [TIMESTAMP]: '',\n  [REPORT]: ''\n};\nexport const BLANK_MODE_DATA = {\n  mode: SUSPENSION_MODE,\n  messageType: OK,\n  message: \"\"\n};\nconst TITLE = {\n  2: 'Suspender Configuração de Alerta',\n  3: 'Reativar Configuração de Alerta'\n};\nexport default function SuspensionModal(_ref) {\n  _s();\n\n  let {\n    show,\n    toggle,\n    data,\n    setData,\n    refresh,\n    togglePauseState\n  } = _ref;\n  //const [suspensionData, setSuspensionData] = React.useState({ timestamp: null, report: \"\" });\n  const [invalid, setInvalid] = React.useState(false);\n  const [spinner, setSpinner] = React.useState(false);\n  const [mode, setMode] = React.useState({ ...BLANK_MODE_DATA,\n    mode: data.mode\n  });\n  const [formData, setFormData] = React.useState({ ...BLANK_FORM_DATA\n  });\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  const {\n    modalData,\n    setModalData,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff\n  } = useModalWithData();\n  React.useEffect(() => {\n    if (!isEmpty(data)) {\n      setModalData({\n        entity: \"da Configuração do Alerta\",\n        operation: EDITION\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps  \n\n  }, [data]);\n\n  const reactivateWarningConfig = () => {\n    let label = \"Reativação\";\n    let pauseTimestamp = getNowDateTimeString();\n    let pauseReport = 'Configuração reativada';\n    const warningConfig = data.warningConfig;\n    update(label, warningConfig, pauseTimestamp, pauseReport);\n  };\n\n  const suspendWarningConfig = pauseData => {\n    if (isEmpty(formData[REPORT]) || isEmpty(formData[TIMESTAMP]) || Number(formData[TIMESTAMP]) <= 0) {\n      setInvalid(true);\n      setModalData({\n        operation: EDITION,\n        messageType: ERROR,\n        message: \"Há campos obrigatórios com dados inválidos ou com preenchimento pendente!\"\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    } else {\n      setInvalid(false);\n      let label = \"Suspensão\";\n      let pauseTimestamp = pauseData ? pauseData[TIMESTAMP] : null;\n      let pauseReport = pauseData ? pauseData[REPORT] : null;\n      const warningConfig = data.warningConfig;\n      let timeZone = new Date().getTimezoneOffset() * 60000;\n      let date = new Date(Date.now() + pauseTimestamp * 60 * 60 * 1000);\n      date = new Date(date - timeZone); // Corrigindo o fuso horário\n\n      pauseTimestamp = date.toISOString().split(\".\")[0];\n      update(label, warningConfig, pauseTimestamp, pauseReport);\n    }\n  };\n\n  const update = (label, warningConfig, pauseTimestamp, pauseReport) => {\n    let httpRequestBody = createBaseHttpRequestBody({\n      [PAUSE_TIMESTAMP]: pauseTimestamp,\n      [PAUSE_REPORT]: escapeSpecialCharacters(pauseReport),\n      [PAUSE_USER]: getUserLogin(),\n      [STATUS]: STATUS_ENUM.ATUALIZADO,\n      [MODIFICATION_DATE]: getNowDateTimeString(),\n      [MODIFICATION_USER]: getUserLogin()\n    });\n    httpRequestBody[GROUP_IDS_SSE] = warningConfig.getGroupsIds().map(Number);\n    setSpinner(true);\n    axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/warningconfigs/update/\").concat(warningConfig.getIdConfig()), httpRequestBody).then(res => {\n      if (!isSuccessStatusCode(res) || !getValue(res, ID_CONFIG)) {\n        setMode({ ...mode,\n          mode: MESSAGE_MODE,\n          messageType: ERROR,\n          message: \"Falha na \".concat(label, \" da Configura\\xE7\\xE3o de Alerta\")\n        });\n      } else {\n        refresh();\n        setMode({ ...mode,\n          mode: MESSAGE_MODE,\n          messageType: OK,\n          message: \"\".concat(label, \" do alerta realizada com sucesso!\")\n        }); //isso abaixo é necessário para garantir o comportamento dinâmico do botão suspender/ativar\n\n        data[PAUSE_TIMESTAMP] = pauseTimestamp;\n        data[PAUSE_USER] = getUserLogin();\n        data[PAUSE_REPORT] = pauseReport;\n        setData({ ...data\n        });\n        if (togglePauseState) //Verifica se esta propriedade foi setada. \n          togglePauseState();\n      }\n    }).catch(err => {\n      let errorData = treatError(err, \"\", EDITION, \"Falha na opera\\xE7\\xE3o de \".concat(label.toLowerCase(), \" do alerta!\"));\n      setMode({ ...errorData,\n        mode: MESSAGE_MODE\n      });\n    }).finally(() => {\n      setSpinner(false);\n    });\n  };\n\n  const isSaveButtonDisabled = () => {\n    return isEmpty(formData.timestamp);\n  };\n\n  const MessageBody = () => {\n    return /*#__PURE__*/_jsxDEV(ModalBody, {\n      style: {\n        'textAlign': 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [mode.messageType === OK && mode.mode === MESSAGE_MODE && /*#__PURE__*/_jsxDEV(FcOk, {\n          size: '6.5rem'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 67\n        }, this), mode.messageType === ERROR && mode.mode === MESSAGE_MODE && /*#__PURE__*/_jsxDEV(FcHighPriority, {\n          size: '6.5rem'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: mode.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }, this);\n  };\n\n  const ReactivationBody = () => {\n    return /*#__PURE__*/_jsxDEV(ModalBody, {\n      style: {\n        'textAlign': 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            whiteSpace: 'pre-line'\n          },\n          children: \"Confirma a reativa\\xE7\\xE3o da Configura\\xE7\\xE3o de Alerta?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        className: \"text-center\",\n        style: {\n          marginTop: '25px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => {\n              reactivateWarningConfig(formData);\n            },\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            onClick: toggle,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: show,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: TITLE[data.mode]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), spinner && /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), !spinner && mode.mode === MESSAGE_MODE && /*#__PURE__*/_jsxDEV(MessageBody, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 52\n      }, this), !spinner && mode.mode === REACTIVATION_MODE && /*#__PURE__*/_jsxDEV(ReactivationBody, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 57\n      }, this), !spinner && mode.mode === SUSPENSION_MODE && /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            margin: '10px 0px',\n            position: 'relative',\n            right: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 10,\n            className: \"d-flex align-items-center justify-content-end\",\n            children: [/*#__PURE__*/_jsxDEV(RiTimeFill, {\n              size: 20,\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Tempo de Suspens\\xE3o em Horas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onKeyPress: event => LetterFilter(event, 3),\n              maxLength: \"3\",\n              invalid: invalid && (isEmpty(data[TIMESTAMP]) || Number(data[TIMESTAMP]) <= 0),\n              onChange: e => setFormData({ ...formData,\n                [TIMESTAMP]: e.target.value\n              }),\n              value: formData[TIMESTAMP]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Motivo da suspens\\xE3o:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"textarea\",\n                name: \"text\",\n                id: \"config_pause_report\",\n                invalid: invalid && isEmpty(data[REPORT]),\n                style: {\n                  paddingTop: 0,\n                  paddingLeft: 5\n                },\n                onChange: e => setFormData({ ...formData,\n                  [REPORT]: e.target.value\n                }),\n                value: formData[REPORT]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          className: \"text-center\",\n          style: {\n            marginTop: '25px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: isSaveButtonDisabled(),\n              onClick: () => {\n                suspendWarningConfig(formData);\n              },\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              onClick: toggle,\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), modalType === MODAL_TYPE_ENUM.MESSAGE && /*#__PURE__*/_jsxDEV(MessageModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SuspensionModal, \"o5rNCHzsdtjivynUeqGl9GyBZoc=\", false, function () {\n  return [useModalWithData];\n});\n\n_c = SuspensionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuspensionModal\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/modals/SuspensionModal/SuspensionModal.js"],"names":["React","Modal","ModalBody","ModalHeader","Button","Col","FormGroup","Input","Row","Spinner","env","FcOk","FcHighPriority","RiTimeFill","MODAL_TYPE_ENUM","MessageModal","EDITION","ERROR","OK","LetterFilter","useModalWithData","createBaseHttpRequestBody","getUserLogin","STATUS_ENUM","axios","axiosRetry","getTimeoutConfig","getRetryConfig","ID_CONFIG","PAUSE_TIMESTAMP","PAUSE_USER","PAUSE_REPORT","isEmpty","getNowDateTimeString","escapeSpecialCharacters","isSuccessStatusCode","getValue","treatError","STATUS","MODIFICATION_DATE","MODIFICATION_USER","GROUP_IDS_SSE","SUSPENSION_MODE","REACTIVATION_MODE","MESSAGE_MODE","REPORT","TIMESTAMP","BLANK_FORM_DATA","BLANK_MODE_DATA","mode","messageType","message","TITLE","SuspensionModal","show","toggle","data","setData","refresh","togglePauseState","invalid","setInvalid","useState","spinner","setSpinner","setMode","formData","setFormData","axiosRetryProxy","create","modalData","setModalData","isModalActive","modalType","toggleModalOn","toggleModalOff","useEffect","entity","operation","reactivateWarningConfig","label","pauseTimestamp","pauseReport","warningConfig","update","suspendWarningConfig","pauseData","Number","MESSAGE","timeZone","Date","getTimezoneOffset","date","now","toISOString","split","httpRequestBody","ATUALIZADO","getGroupsIds","map","patch","apiAddress","getIdConfig","then","res","catch","err","errorData","toLowerCase","finally","isSaveButtonDisabled","timestamp","MessageBody","whiteSpace","ReactivationBody","marginTop","display","margin","position","right","marginRight","event","e","target","value","paddingTop","paddingLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Modal, ModalBody, ModalHeader,\r\n  Button, Col, FormGroup,\r\n  Input, Row, Spinner\r\n} from \"reactstrap\";\r\n\r\nimport env from \"common/enviroment\";\r\n\r\nimport { FcOk, FcHighPriority } from \"react-icons/fc\";\r\nimport { RiTimeFill } from \"react-icons/ri\";\r\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\nimport MessageModal from \"../MessageModal\";\r\nimport { EDITION, ERROR, OK } from \"../ModalConsts\";\r\nimport { LetterFilter } from \"common/utils/filters\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport STATUS_ENUM from \"common/enumerators/StatusEnum\";\r\nimport axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\nimport { PAUSE_TIMESTAMP } from \"common/model/WarningConfig\";\r\nimport { PAUSE_USER } from \"common/model/WarningConfig\";\r\nimport { PAUSE_REPORT } from \"common/model/WarningConfig\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\r\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\r\nimport { getValue } from \"common/utils/errorTreatment\";\r\nimport treatError from \"common/utils/errorTreatment\";\r\nimport { STATUS } from \"common/model/WarningConfig\";\r\nimport { MODIFICATION_DATE } from \"common/model/WarningConfig\";\r\nimport { MODIFICATION_USER } from \"common/model/WarningConfig\";\r\nimport { GROUP_IDS_SSE } from \"common/model/WarningConfig\";\r\n\r\nexport const SUSPENSION_MODE = 2\r\nexport const REACTIVATION_MODE = 3\r\nexport const MESSAGE_MODE = 4\r\n\r\nconst REPORT = \"report\"\r\nconst TIMESTAMP = \"timestamp\"\r\n\r\nexport const BLANK_FORM_DATA = {\r\n  [TIMESTAMP]: '',\r\n  [REPORT]: ''\r\n}\r\n\r\nexport const BLANK_MODE_DATA = {\r\n  mode: SUSPENSION_MODE,\r\n  messageType: OK,\r\n  message: \"\"\r\n}\r\n\r\nconst TITLE = {\r\n  2 : 'Suspender Configuração de Alerta',\r\n  3 : 'Reativar Configuração de Alerta',\r\n}\r\n\r\nexport default function SuspensionModal({ show, toggle, data, setData, refresh, togglePauseState }) {\r\n\r\n  //const [suspensionData, setSuspensionData] = React.useState({ timestamp: null, report: \"\" });\r\n\r\n  \r\n  const [invalid, setInvalid] = React.useState(false);\r\n  const [spinner, setSpinner] = React.useState(false);\r\n  const [mode, setMode] = React.useState({ ...BLANK_MODE_DATA, mode: data.mode });\r\n  const [formData, setFormData] = React.useState({ ...BLANK_FORM_DATA });\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (!isEmpty(data)) {\r\n      setModalData({ entity: \"da Configuração do Alerta\", operation: EDITION })\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps  \r\n  }, [data]);\r\n\r\n\r\n  const reactivateWarningConfig = () => {\r\n\r\n    let label = \"Reativação\"\r\n    let pauseTimestamp = getNowDateTimeString();\r\n    let pauseReport = 'Configuração reativada'\r\n\r\n    const warningConfig = data.warningConfig\r\n\r\n    update(label, warningConfig, pauseTimestamp, pauseReport)\r\n\r\n  }\r\n\r\n\r\n  const suspendWarningConfig = (pauseData) => {\r\n\r\n    if (isEmpty(formData[REPORT]) || isEmpty(formData[TIMESTAMP]) || Number(formData[TIMESTAMP]) <= 0) {\r\n      setInvalid(true)\r\n      setModalData({ operation: EDITION, messageType: ERROR, message: \"Há campos obrigatórios com dados inválidos ou com preenchimento pendente!\" });\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n    } else {\r\n      setInvalid(false)\r\n\r\n      let label = \"Suspensão\"\r\n      let pauseTimestamp = pauseData ? pauseData[TIMESTAMP] : null\r\n      let pauseReport = pauseData ? pauseData[REPORT] : null\r\n\r\n      const warningConfig = data.warningConfig\r\n\r\n      let timeZone = (new Date()).getTimezoneOffset() * 60000;\r\n      let date = (new Date(Date.now() + pauseTimestamp * 60 * 60 * 1000));\r\n      date = (new Date(date - timeZone)); // Corrigindo o fuso horário\r\n\r\n\r\n      pauseTimestamp = date.toISOString().split(\".\")[0]\r\n\r\n      update(label, warningConfig, pauseTimestamp, pauseReport)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const update = (label, warningConfig, pauseTimestamp, pauseReport) => {\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [PAUSE_TIMESTAMP]: pauseTimestamp,\r\n      [PAUSE_REPORT]: escapeSpecialCharacters(pauseReport),\r\n      [PAUSE_USER]: getUserLogin(),\r\n      [STATUS]: STATUS_ENUM.ATUALIZADO,\r\n      [MODIFICATION_DATE]: getNowDateTimeString(), [MODIFICATION_USER]: getUserLogin(),\r\n    });\r\n\r\n    httpRequestBody[GROUP_IDS_SSE] = warningConfig.getGroupsIds().map(Number)\r\n    setSpinner(true);\r\n    axiosRetryProxy.patch(`${env.apiAddress}/warningconfigs/update/${warningConfig.getIdConfig()}`, httpRequestBody)\r\n      .then(res => {\r\n        if (!isSuccessStatusCode(res) || !getValue(res, ID_CONFIG)) {\r\n          setMode({ ...mode, mode: MESSAGE_MODE, messageType: ERROR, message: `Falha na ${label} da Configuração de Alerta` })\r\n        } else {\r\n          refresh();\r\n          setMode({ ...mode, mode: MESSAGE_MODE, messageType: OK, message: `${label} do alerta realizada com sucesso!` });\r\n\r\n          //isso abaixo é necessário para garantir o comportamento dinâmico do botão suspender/ativar\r\n          data[PAUSE_TIMESTAMP] = pauseTimestamp\r\n          data[PAUSE_USER] = getUserLogin()\r\n          data[PAUSE_REPORT] = pauseReport\r\n\r\n          setData({ ...data })\r\n\r\n          if (togglePauseState) //Verifica se esta propriedade foi setada. \r\n            togglePauseState()\r\n        }\r\n      }).catch(err => {\r\n        let errorData = treatError(err, \"\", EDITION, `Falha na operação de ${label.toLowerCase()} do alerta!`);\r\n        setMode({ ...errorData, mode: MESSAGE_MODE })\r\n      }).finally(() => {\r\n        setSpinner(false);\r\n      })\r\n  }\r\n\r\n\r\n  const isSaveButtonDisabled = () => {\r\n    return isEmpty(formData.timestamp)\r\n  }\r\n\r\n  const MessageBody = () => {\r\n    return <ModalBody style={{ 'textAlign': 'center' }}><div>\r\n        {mode.messageType === OK && mode.mode === MESSAGE_MODE && <FcOk size={'6.5rem'} />}\r\n        {mode.messageType === ERROR && mode.mode === MESSAGE_MODE && <FcHighPriority size={'6.5rem'} />}\r\n\r\n        <h3 style={{ whiteSpace: 'pre-wrap' }} >{mode.message}</h3>\r\n\r\n      </div>\r\n      </ModalBody>\r\n  }\r\n\r\n  const ReactivationBody = () => {\r\n    return <ModalBody style={{ 'textAlign': 'center' }}>\r\n          <Row>\r\n            <Col style={{ whiteSpace: 'pre-line' }}>\r\n              Confirma a reativação da Configuração de Alerta?\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <br></br>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <br></br>\r\n            </Col>\r\n          </Row>\r\n          <FormGroup row className=\"text-center\" style={{ marginTop: '25px' }}>\r\n            <Col>\r\n              <Button color='primary' onClick={() => { reactivateWarningConfig(formData) }} >OK</Button>\r\n            </Col>\r\n            <Col>\r\n              <Button color='danger' onClick={toggle} >Cancelar</Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </ModalBody>\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={show} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>{TITLE[data.mode]}</ModalHeader>\r\n        {spinner && <Spinner color=\"info\"></Spinner>}\r\n        {!spinner && mode.mode === MESSAGE_MODE && <MessageBody/> }\r\n        {!spinner && mode.mode === REACTIVATION_MODE && <ReactivationBody/> }\r\n        {!spinner && mode.mode === SUSPENSION_MODE && <ModalBody> \r\n          <div style={{ display: 'flex', margin: '10px 0px', position: 'relative', right: '60px' }}>\r\n          <Col xs={10} className=\"d-flex align-items-center justify-content-end\">\r\n            <RiTimeFill size={20} style={{ marginRight: '10px' }} />\r\n            <b>Tempo de Suspensão em Horas:</b>\r\n          </Col>\r\n          <Col xs={3}>\r\n\r\n            <Input\r\n              onKeyPress={event => LetterFilter(event, 3)}\r\n              maxLength=\"3\"\r\n              invalid={invalid && (isEmpty(data[TIMESTAMP]) || Number(data[TIMESTAMP]) <= 0)}\r\n              onChange={e => setFormData({ ...formData, [TIMESTAMP]: e.target.value })}\r\n              value={formData[TIMESTAMP]}\r\n            />\r\n\r\n          </Col>\r\n        </div>\r\n\r\n          <div style={{ marginTop: '50px' }}>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <b>Motivo da suspensão:</b>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"text\"\r\n                  id=\"config_pause_report\"\r\n                  invalid={invalid && isEmpty(data[REPORT])}\r\n                  style={{ paddingTop: 0, paddingLeft: 5 }}\r\n                  onChange={e => setFormData({ ...formData, [REPORT]: e.target.value })}\r\n                  value={formData[REPORT]}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <FormGroup row className=\"text-center\" style={{ marginTop: '25px' }}>\r\n            <Col>\r\n              <Button color='primary' disabled={isSaveButtonDisabled()} onClick={() => { suspendWarningConfig(formData) }}>OK</Button>\r\n            </Col>\r\n            <Col>\r\n              <Button color='danger' onClick={toggle}>Cancelar</Button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n        </ModalBody>}\r\n\r\n\r\n      </Modal>\r\n      {modalType === MODAL_TYPE_ENUM.MESSAGE && <MessageModal show={isModalActive} toggle={toggleModalOff} data={modalData} />}\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}