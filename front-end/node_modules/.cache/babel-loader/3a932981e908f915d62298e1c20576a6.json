{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\auditor\\\\AuditorSimpleInput.js\";\nimport { toUpperCase } from \"common/utils/validate\";\nimport React from \"react\";\nimport { Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuditorSimpleInput = _ref => {\n  let {\n    label = \"Responsável pelo Monitoramento:\",\n    user_registration_id,\n    user_name,\n    user_login,\n    invalidFlag,\n    conditionalFormatingMethod,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: '5px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Matr\\xEDcula\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-7\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Nome \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 form_field_outer p-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row form_field_outer_row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-2\",\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  className: \"form-control\",\n                  maxLength: \"7\",\n                  readOnly: true,\n                  disabled: true,\n                  value: user_registration_id,\n                  invalid: invalidFlag && (!user_registration_id || user_registration_id === ''),\n                  style: conditionalFormatingMethod ? conditionalFormatingMethod(user_login, {\n                    width: \"90px\",\n                    marginRight: \"180px\"\n                  }) : {\n                    width: \"90px\",\n                    marginRight: \"180px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-7\",\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  readOnly: true,\n                  disabled: true,\n                  invalid: invalidFlag && (!user_registration_id || user_registration_id === ''),\n                  value: toUpperCase(user_name),\n                  className: \"form-control\",\n                  id: \"inputNome\",\n                  style: conditionalFormatingMethod ? conditionalFormatingMethod(user_login, {\n                    width: \"400px\"\n                  }) : {\n                    width: \"400px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AuditorSimpleInput;\nexport default AuditorSimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuditorSimpleInput\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/auditor/AuditorSimpleInput.js"],"names":["toUpperCase","React","Input","AuditorSimpleInput","label","user_registration_id","user_name","user_login","invalidFlag","conditionalFormatingMethod","restProps","marginTop","width","marginRight"],"mappings":"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","sourcesContent":["import { toUpperCase } from \"common/utils/validate\";\r\nimport React from \"react\"\r\nimport { Input } from \"reactstrap\";\r\n\r\n\r\nconst AuditorSimpleInput\r\n = ({ label = \"Responsável pelo Monitoramento:\", user_registration_id, user_name, user_login, invalidFlag, conditionalFormatingMethod, ...restProps }) => {\r\n    return (\r\n        <div className=\"tag\">\r\n            <b>{label}</b>\r\n                  <div className=\"row\" style={{ marginTop: '5px' }}>\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                          <label>Matrícula</label>\r\n                        </div>\r\n                        <div className=\"col-md-7\">\r\n                          <label> Nome </label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12 p-0\">\r\n                        <div className=\"col-md-12 form_field_outer p-0\">\r\n                          <div className=\"row form_field_outer_row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                            <Input type=\"text\" className=\"form-control\" maxLength=\"7\"\r\n                                readOnly disabled\r\n                                value={user_registration_id}\r\n                                invalid={invalidFlag && (!user_registration_id || user_registration_id === '')}\r\n                                style={ conditionalFormatingMethod ? conditionalFormatingMethod(user_login, {width: \"90px\", marginRight: \"180px\"}) : {width: \"90px\", marginRight: \"180px\"}  }\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-group col-md-7\">\r\n                            <Input type=\"text\" readOnly disabled\r\n                                invalid={invalidFlag && (!user_registration_id || user_registration_id === '')}\r\n                                value={toUpperCase(user_name)}\r\n                                className=\"form-control\" id=\"inputNome\" style={ conditionalFormatingMethod ? conditionalFormatingMethod(user_login, {width: \"400px\"}) : {width: \"400px\"}  }\r\n                            />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      </div>\r\n                  </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AuditorSimpleInput;"]},"metadata":{},"sourceType":"module"}