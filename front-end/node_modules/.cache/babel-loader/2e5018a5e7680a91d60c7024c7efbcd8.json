{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\HomologationModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, ModalBody, ModalHeader, Button, Col, FormGroup, Input, Row, Spinner } from \"reactstrap\";\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport env from 'common/enviroment';\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\nimport { FcCancel, FcHighPriority, FcOk } from \"react-icons/fc\";\nimport { createSimpleFilterClause } from \"axios/AxiosUtils\";\nimport { createNotFilterClause } from \"axios/AxiosUtils\";\nimport { getUserLogin } from \"common/SessionUtils\";\nimport { getHomologationPendingStatusCodes } from \"common/enumerators/NotificationStatus\";\nimport { FISCAL_NOTIFICATION_STATUS } from \"common/model/Notification\";\nimport { getNowDateTimeString } from \"common/utils/validate\";\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\nimport { getValue } from \"common/utils/errorTreatment\";\nimport { ERROR, OK } from \"./ModalConsts\";\nimport treatError from \"common/utils/errorTreatment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HOMOLOGATION_MODE = 0;\nexport const AWARENESS_MODE = 1;\nexport const SUPERVISION_MODE = 2;\nexport default function HomologationModal(_ref) {\n  _s();\n\n  let {\n    show,\n    toggle,\n    data,\n    refresh,\n    parentData,\n    setParentData\n  } = _ref;\n  const LABELS = [{\n    header: \"Homologar Ação Fiscal\",\n    question: \"Confirma a homologação da ação fiscal?\",\n    error: \"Falha no registro da homologação\",\n    success: \"Homologação da notificação realizada com sucesso!\"\n  }, {\n    header: \"Declaração de Ciência\",\n    question: \"Confirma a declaração de ciência?\",\n    error: \"Falha no registro da declaração de ciência\",\n    success: \"Declaração de ciência realizada com sucesso!\"\n  }, {\n    header: \"Declaração de Supervisão\",\n    question: \"Confirma a supervisão da ação fiscal?\",\n    error: \"Falha no registro da declaração de supervisão\",\n    success: \"Supervisão da ação fiscal realizada com sucesso!\"\n  }];\n  const ICON_MESSAGES = [/*#__PURE__*/_jsxDEV(FcOk, {\n    size: '6.5rem'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 26\n  }, this), /*#__PURE__*/_jsxDEV(FcCancel, {\n    size: '6.5rem'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 51\n  }, this), /*#__PURE__*/_jsxDEV(FcHighPriority, {\n    size: '6.5rem'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 80\n  }, this)];\n  const homologationType = data.homologationType;\n  const notification_id = data.notification_id;\n  const warning = data.raw_data;\n  const popPending = data.popHomologatedNotification;\n  const index = data.index;\n  const [report, setReport] = React.useState(\"\");\n  const [spinner, setSpinner] = React.useState(false);\n  const [homologationMode, setHomologationMode] = React.useState(true);\n  const [modalData, setModalData] = React.useState({});\n\n  const mountIconTag = () => {\n    return ICON_MESSAGES[modalData.messageType];\n  };\n\n  const handleClick = () => {\n    if (homologationType === HOMOLOGATION_MODE) {\n      updateHomologationStatus();\n    } else if (homologationType === AWARENESS_MODE) {\n      updateAwarenessStatus();\n    } else if (homologationType === SUPERVISION_MODE) {\n      updateSupervisionStatus();\n    }\n  };\n\n  const updateHomologationStatus = () => {\n    let newStatus = NOTIFICATION_STATUS_ENUM.HOMOLOGADA;\n    let status = warning[FISCAL_NOTIFICATION_STATUS];\n\n    if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO) {\n      newStatus = NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA;\n    }\n\n    let httpRequestBody = createBaseHttpRequestBody({\n      fiscal_notification_modification_date: getNowDateTimeString(),\n      fiscal_action_homologation_date: getNowDateTimeString(),\n      fiscal_action_homologation_auditor: getUserLogin(),\n      fiscal_action_homologation_report: escapeSpecialCharacters(report),\n      fiscal_notification_status: newStatus\n    }); //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\n\n    warning.fiscal_notification_modification_date = getNowDateTimeString();\n    warning.fiscal_action_homologation_date = getNowDateTimeString();\n    warning.fiscal_action_homologation_auditor = getUserLogin();\n    warning.fiscal_action_homologation_report = escapeSpecialCharacters(report);\n    warning.fiscal_notification_status = newStatus;\n    update(httpRequestBody, HOMOLOGATION_MODE);\n  };\n\n  const updateSupervisionStatus = () => {\n    let httpRequestBody = createBaseHttpRequestBody({\n      fiscal_notification_modification_date: getNowDateTimeString(),\n      fiscal_action_supervision_date: getNowDateTimeString(),\n      fiscal_action_supervision_auditor: getUserLogin(),\n      fiscal_action_supervision_report: escapeSpecialCharacters(report)\n    }); //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\n\n    warning.fiscal_notification_modification_date = getNowDateTimeString();\n    warning.fiscal_action_supervision_date = getNowDateTimeString();\n    warning.fiscal_action_supervision_auditor = getUserLogin();\n    warning.fiscal_action_supervision_report = escapeSpecialCharacters(report);\n    update(httpRequestBody, SUPERVISION_MODE);\n  };\n\n  const updateAwarenessStatus = () => {\n    let httpRequestBody = createBaseHttpRequestBody({\n      fiscal_notification_awareness_date: getNowDateTimeString(),\n      fiscal_notification_awareness_report: escapeSpecialCharacters(report),\n      fiscal_notification_awareness_auditor: getUserLogin()\n    }); //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\n\n    warning.fiscal_notification_awareness_date = getNowDateTimeString();\n    warning.fiscal_notification_awareness_report = escapeSpecialCharacters(report);\n    warning.fiscal_notification_awareness_auditor = getUserLogin();\n    update(httpRequestBody, AWARENESS_MODE);\n  };\n\n  const propagateAwarenessData = async httpRequestBody => {\n    let vehiclePlate = warning['vehicle_plate'];\n    if (!vehiclePlate) return;\n    let filters = [];\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']));\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']));\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']));\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"greater\", NOTIFICATION_STATUS_ENUM.DESIGNADA));\n    filters.push(createSimpleFilterClause(\"fiscal_notification_awareness_auditor\", \"char\", \"null\", \"false\"));\n    filters.push(createSimpleFilterClause(\"fiscal_notification_awareness_date\", \"char\", \"null\", \"true\"));\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id));\n    httpRequestBody['filters'] = filters;\n    await axios.patch(\"\".concat(env.apiAddress, \"/warnings/update_by_filter/\"), httpRequestBody).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const propagateSupervisionData = async httpRequestBody => {\n    let vehiclePlate = warning['vehicle_plate'];\n    if (!vehiclePlate) return;\n    let filters = [];\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']));\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']));\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']));\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"greater\", NOTIFICATION_STATUS_ENUM.REALIZADA));\n    filters.push(createSimpleFilterClause(\"fiscal_action_supervision_auditor\", \"char\", \"null\", \"false\"));\n    filters.push(createSimpleFilterClause(\"fiscal_action_supervision_date\", \"char\", \"null\", \"true\"));\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id));\n    httpRequestBody['filters'] = filters;\n    await axios.patch(\"\".concat(env.apiAddress, \"/warnings/update_by_filter/\"), httpRequestBody).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const propagateHomologationData = async httpRequestBody => {\n    let vehiclePlate = warning['vehicle_plate'];\n    if (!vehiclePlate) return;\n\n    if (httpRequestBody[FISCAL_NOTIFICATION_STATUS] === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\n      return;\n    }\n\n    let status = httpRequestBody['fiscal_notification_status'];\n    httpRequestBody['fiscal_notification_status'] = status * NOTIFICATION_STATUS_ENUM.IMPORTED_STATUS_CODE;\n    let filters = [];\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']));\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']));\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']));\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"in\", getHomologationPendingStatusCodes()));\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id));\n    httpRequestBody['filters'] = filters;\n    await axios.patch(\"\".concat(env.apiAddress, \"/warnings/update_by_filter/\"), httpRequestBody).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const update = (httpRequestBody, mode) => {\n    setSpinner(true);\n    setHomologationMode(false);\n    axios.patch(\"\".concat(env.apiAddress, \"/warnings/update/\").concat(notification_id), httpRequestBody).then(async res => {\n      if (!isSuccessStatusCode(res) || !getValue(res, 'id')) {\n        setModalData({\n          messageType: ERROR,\n          message: LABELS[homologationType][\"error\"]\n        });\n      } else {\n        setModalData({\n          messageType: OK,\n          message: LABELS[homologationType][\"success\"]\n        });\n\n        if (mode === AWARENESS_MODE) {\n          await propagateAwarenessData(httpRequestBody);\n        } else if (mode === SUPERVISION_MODE) {\n          await propagateSupervisionData(httpRequestBody);\n        } else {\n          await propagateHomologationData(httpRequestBody);\n        }\n\n        if (popPending) {\n          let pending_count = warning['pending_count']; //Decrementa primeiro e remove no condicional abaixo\n\n          if (typeof pending_count === 'number' && pending_count > 0) {\n            pending_count = pending_count - 1;\n            warning['pending_count'] = pending_count;\n          } //se não houver mais pendências, ele remove aqui. \n\n\n          if (typeof pending_count === 'number' && pending_count === 0) {\n            delete parentData[index];\n          } else {\n            parentData[index] = warning;\n          }\n\n          setParentData(parentData);\n        }\n      }\n    }).catch(err => {\n      setModalData(treatError(err, \"\", LABELS[homologationType][\"error\"]));\n    }).finally(() => {\n      refresh();\n      setSpinner(false);\n    });\n  };\n\n  return homologationMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: show,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: LABELS[homologationType][\"header\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              'textAlign': 'center',\n              margin: '10px 0px',\n              whiteSpace: 'pre-line'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: LABELS[homologationType][\"question\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Observa\\xE7\\xF5es:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"textarea\",\n                name: \"text\",\n                id: \"homologation_warning\",\n                maxLength: 2048,\n                style: {\n                  paddingTop: 0,\n                  paddingLeft: 5\n                },\n                onChange: e => {\n                  setReport(e.target.value);\n                },\n                value: report\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        className: \"text-center\",\n        style: {\n          marginTop: '25px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => {\n              handleClick();\n            },\n            children: \"Sim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            onClick: toggle,\n            children: \"N\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: show,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      style: {\n        'textAlign': 'center'\n      },\n      children: spinner ? /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"info\",\n        style: {\n          width: \"4.0rem\",\n          height: \"4.0rem\",\n          margin: '4.0rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [mountIconTag(), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: modalData.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 7\n  }, this);\n}\n\n_s(HomologationModal, \"/XCBv9moDNbyX/yhJBiLUXW0X1I=\");\n\n_c = HomologationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomologationModal\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/modals/HomologationModal.js"],"names":["React","Modal","ModalBody","ModalHeader","Button","Col","FormGroup","Input","Row","Spinner","axios","axiosRetry","getTimeoutConfig","getRetryConfig","env","createBaseHttpRequestBody","NOTIFICATION_STATUS_ENUM","FcCancel","FcHighPriority","FcOk","createSimpleFilterClause","createNotFilterClause","getUserLogin","getHomologationPendingStatusCodes","FISCAL_NOTIFICATION_STATUS","getNowDateTimeString","escapeSpecialCharacters","isSuccessStatusCode","getValue","ERROR","OK","treatError","HOMOLOGATION_MODE","AWARENESS_MODE","SUPERVISION_MODE","HomologationModal","show","toggle","data","refresh","parentData","setParentData","LABELS","header","question","error","success","ICON_MESSAGES","homologationType","notification_id","warning","raw_data","popPending","popHomologatedNotification","index","report","setReport","useState","spinner","setSpinner","homologationMode","setHomologationMode","modalData","setModalData","mountIconTag","messageType","handleClick","updateHomologationStatus","updateAwarenessStatus","updateSupervisionStatus","newStatus","HOMOLOGADA","status","SEM_COMANDO","SEM_COMANDO_HOMOLOGADA","httpRequestBody","fiscal_notification_modification_date","fiscal_action_homologation_date","fiscal_action_homologation_auditor","fiscal_action_homologation_report","fiscal_notification_status","update","fiscal_action_supervision_date","fiscal_action_supervision_auditor","fiscal_action_supervision_report","fiscal_notification_awareness_date","fiscal_notification_awareness_report","fiscal_notification_awareness_auditor","propagateAwarenessData","vehiclePlate","filters","push","DESIGNADA","patch","apiAddress","then","res","console","log","catch","err","propagateSupervisionData","REALIZADA","propagateHomologationData","IMPORTED_STATUS_CODE","mode","message","pending_count","finally","margin","whiteSpace","marginTop","paddingTop","paddingLeft","e","target","value","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Modal, ModalBody, ModalHeader,\r\n  Button, Col, FormGroup,\r\n  Input, Row, Spinner\r\n} from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport env from 'common/enviroment';\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\r\nimport { FcCancel, FcHighPriority, FcOk } from \"react-icons/fc\";\r\nimport { createSimpleFilterClause } from \"axios/AxiosUtils\";\r\nimport { createNotFilterClause } from \"axios/AxiosUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport { getHomologationPendingStatusCodes } from \"common/enumerators/NotificationStatus\";\r\nimport { FISCAL_NOTIFICATION_STATUS } from \"common/model/Notification\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { escapeSpecialCharacters } from \"common/utils/validate\";\r\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\r\nimport { getValue } from \"common/utils/errorTreatment\";\r\nimport { ERROR, OK } from \"./ModalConsts\";\r\nimport treatError from \"common/utils/errorTreatment\";\r\n\r\nexport const HOMOLOGATION_MODE = 0\r\nexport const AWARENESS_MODE = 1\r\nexport const SUPERVISION_MODE = 2\r\n\r\n\r\nexport default function HomologationModal({ show, toggle, data, refresh, parentData, setParentData }) {\r\n\r\n  const LABELS = [\r\n    { header: \"Homologar Ação Fiscal\", question: \"Confirma a homologação da ação fiscal?\", error: \"Falha no registro da homologação\", success: \"Homologação da notificação realizada com sucesso!\" }, \r\n    { header: \"Declaração de Ciência\", question: \"Confirma a declaração de ciência?\" , error: \"Falha no registro da declaração de ciência\", success: \"Declaração de ciência realizada com sucesso!\" },\r\n    { header: \"Declaração de Supervisão\", question: \"Confirma a supervisão da ação fiscal?\" , error: \"Falha no registro da declaração de supervisão\", success: \"Supervisão da ação fiscal realizada com sucesso!\" }\r\n  ]\r\n\r\n  const ICON_MESSAGES = [<FcOk size={'6.5rem'}/>, <FcCancel size={'6.5rem'}/>, <FcHighPriority size={'6.5rem'}/>]\r\n\r\n  const homologationType = data.homologationType\r\n  const notification_id = data.notification_id\r\n  const warning = data.raw_data\r\n  const popPending = data.popHomologatedNotification\r\n  const index = data.index\r\n\r\n  const [report, setReport] = React.useState(\"\");\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [homologationMode, setHomologationMode] = React.useState(true);\r\n  const [modalData, setModalData] = React.useState({});\r\n  \r\n\r\n  const mountIconTag = () => {\r\n    return ICON_MESSAGES[modalData.messageType]\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (homologationType === HOMOLOGATION_MODE){\r\n      updateHomologationStatus()\r\n    } else if (homologationType === AWARENESS_MODE){\r\n      updateAwarenessStatus()\r\n    } else if (homologationType === SUPERVISION_MODE){\r\n      updateSupervisionStatus()\r\n    }\r\n  }\r\n\r\n  const updateHomologationStatus = () => {\r\n\r\n    let newStatus = NOTIFICATION_STATUS_ENUM.HOMOLOGADA\r\n    let status = warning[FISCAL_NOTIFICATION_STATUS]\r\n    if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO){\r\n      newStatus = NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA\r\n    }\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      fiscal_notification_modification_date: getNowDateTimeString(),\r\n      fiscal_action_homologation_date: getNowDateTimeString(),\r\n      fiscal_action_homologation_auditor: getUserLogin(),\r\n      fiscal_action_homologation_report: escapeSpecialCharacters(report),\r\n      fiscal_notification_status: newStatus\r\n    })\r\n    \r\n    //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\r\n    warning.fiscal_notification_modification_date = getNowDateTimeString()\r\n    warning.fiscal_action_homologation_date = getNowDateTimeString()\r\n    warning.fiscal_action_homologation_auditor = getUserLogin()\r\n    warning.fiscal_action_homologation_report = escapeSpecialCharacters(report)\r\n    warning.fiscal_notification_status = newStatus\r\n\r\n    update(httpRequestBody, HOMOLOGATION_MODE)    \r\n  }\r\n\r\n\r\n  const updateSupervisionStatus = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      fiscal_notification_modification_date: getNowDateTimeString(),\r\n      fiscal_action_supervision_date: getNowDateTimeString(),\r\n      fiscal_action_supervision_auditor: getUserLogin(),\r\n      fiscal_action_supervision_report: escapeSpecialCharacters(report),\r\n    })\r\n\r\n    //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\r\n    warning.fiscal_notification_modification_date = getNowDateTimeString()\r\n    warning.fiscal_action_supervision_date = getNowDateTimeString()\r\n    warning.fiscal_action_supervision_auditor = getUserLogin()\r\n    warning.fiscal_action_supervision_report = escapeSpecialCharacters(report)\r\n\r\n    update(httpRequestBody, SUPERVISION_MODE)    \r\n  }\r\n\r\n  const updateAwarenessStatus = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      fiscal_notification_awareness_date: getNowDateTimeString(),\r\n      fiscal_notification_awareness_report: escapeSpecialCharacters(report),\r\n      fiscal_notification_awareness_auditor: getUserLogin()\r\n    })\r\n    //precisa atualizar o objeto para que o modal PendingHomologations represente a informação correta\r\n    warning.fiscal_notification_awareness_date = getNowDateTimeString()\r\n    warning.fiscal_notification_awareness_report = escapeSpecialCharacters(report)\r\n    warning.fiscal_notification_awareness_auditor = getUserLogin()\r\n\r\n    update(httpRequestBody, AWARENESS_MODE)\r\n  }\r\n\r\n\r\n  const propagateAwarenessData = async (httpRequestBody) => {\r\n\r\n    let vehiclePlate = warning['vehicle_plate']\r\n    if (!vehiclePlate) \r\n      return \r\n\r\n    \r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']))\r\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']))\r\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"greater\", NOTIFICATION_STATUS_ENUM.DESIGNADA))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_awareness_auditor\", \"char\", \"null\", \"false\"))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_awareness_date\", \"char\", \"null\", \"true\"))\r\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id))\r\n\r\n    httpRequestBody['filters'] = filters\r\n\r\n    await axios.patch(`${env.apiAddress}/warnings/update_by_filter/`, httpRequestBody)\r\n      .then(res => {\r\n        console.log(res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  const propagateSupervisionData = async (httpRequestBody) => {\r\n\r\n    let vehiclePlate = warning['vehicle_plate']\r\n    if (!vehiclePlate) \r\n      return \r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']))\r\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']))\r\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"greater\", NOTIFICATION_STATUS_ENUM.REALIZADA))\r\n    filters.push(createSimpleFilterClause(\"fiscal_action_supervision_auditor\", \"char\", \"null\", \"false\"))\r\n    filters.push(createSimpleFilterClause(\"fiscal_action_supervision_date\", \"char\", \"null\", \"true\"))\r\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id))\r\n\r\n    httpRequestBody['filters'] = filters\r\n\r\n    await axios.patch(`${env.apiAddress}/warnings/update_by_filter/`, httpRequestBody)\r\n      .then(res => {\r\n        console.log(res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  const propagateHomologationData = async (httpRequestBody) => {\r\n    \r\n    let vehiclePlate = warning['vehicle_plate']\r\n    if (!vehiclePlate) \r\n      return \r\n\r\n    if (httpRequestBody[FISCAL_NOTIFICATION_STATUS] === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA){\r\n      return\r\n    }\r\n\r\n    let status = httpRequestBody['fiscal_notification_status']  \r\n    httpRequestBody['fiscal_notification_status']  = status * NOTIFICATION_STATUS_ENUM.IMPORTED_STATUS_CODE\r\n\r\n    let filters = []\r\n    filters.push(createSimpleFilterClause(\"vehicle_plate\", \"char\", \"equal\", warning['vehicle_plate']))\r\n    filters.push(createSimpleFilterClause(\"id_config\", \"char\", \"equal\", warning['id_config']))\r\n    filters.push(createSimpleFilterClause(\"id\", \"varying\", \"greater\", warning['fiscal_notification_parent_id']))\r\n    filters.push(createSimpleFilterClause(\"fiscal_notification_status\", \"int\", \"in\", getHomologationPendingStatusCodes()))\r\n    filters.push(createNotFilterClause(\"id\", \"int\", \"equal\", notification_id))\r\n\r\n\r\n    \r\n    httpRequestBody['filters'] = filters\r\n\r\n    await axios.patch(`${env.apiAddress}/warnings/update_by_filter/`, httpRequestBody)\r\n      .then(res => {\r\n        console.log(res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const update = (httpRequestBody, mode) => {\r\n\r\n    setSpinner(true)\r\n    setHomologationMode(false)\r\n\r\n    axios.patch(`${env.apiAddress}/warnings/update/${notification_id}`, httpRequestBody)\r\n      .then(async res => {\r\n\r\n        if (!isSuccessStatusCode(res) || !getValue(res, 'id')) {\r\n          setModalData({ messageType: ERROR, message: LABELS[homologationType][\"error\"] });\r\n        } else {\r\n          \r\n          setModalData({ messageType: OK, message: LABELS[homologationType][\"success\"] });\r\n          \r\n          if (mode === AWARENESS_MODE){\r\n            await propagateAwarenessData(httpRequestBody)\r\n          } else if (mode === SUPERVISION_MODE) {\r\n            await propagateSupervisionData(httpRequestBody)\r\n          } else {\r\n            await propagateHomologationData(httpRequestBody)\r\n          }\r\n\r\n          if (popPending ) {\r\n            let pending_count = warning['pending_count']\r\n            //Decrementa primeiro e remove no condicional abaixo\r\n            if (typeof pending_count === 'number' && pending_count > 0 ){\r\n              pending_count = pending_count - 1\r\n              warning['pending_count'] = pending_count \r\n            } \r\n\r\n            //se não houver mais pendências, ele remove aqui. \r\n            if (typeof pending_count === 'number' && pending_count === 0 ){\r\n              delete parentData[index]\r\n            } else {\r\n              parentData[index] = warning\r\n            }\r\n            setParentData(parentData)\r\n          }\r\n        }\r\n      }).catch(err => {\r\n        setModalData(treatError(err, \"\", LABELS[homologationType][\"error\"]));\r\n      }).finally(() => {\r\n        refresh()\r\n        setSpinner(false)\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    (homologationMode) ? \r\n    <>\r\n      <Modal isOpen={show} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>{LABELS[homologationType][\"header\"]}</ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n          <h3 style={{ 'textAlign': 'center', margin: '10px 0px', whiteSpace: 'pre-line' }}>\r\n          <b>{LABELS[homologationType][\"question\"]}</b>\r\n                </h3>\r\n                </div>\r\n          <div style={{ marginTop: '50px' }}>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <b>Observações:</b>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"text\"\r\n                  id=\"homologation_warning\"\r\n                  maxLength={2048}\r\n                  style={{ paddingTop: 0, paddingLeft: 5 }}\r\n                  onChange={e => { setReport(e.target.value) }}\r\n                  value={report}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n        </ModalBody>\r\n        <FormGroup row className=\"text-center\" style={{ marginTop: '25px' }}>\r\n          <Col>\r\n            <Button color='primary' onClick={() => { handleClick() }}>Sim</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button color='danger' onClick={toggle}>Não</Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Modal>\r\n    </>\r\n    : \r\n      <Modal isOpen={show} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}></ModalHeader>\r\n          <ModalBody style={{ 'textAlign': 'center' }}>\r\n            {\r\n              spinner ?\r\n                <Spinner color=\"info\" style={{ width: \"4.0rem\", height: \"4.0rem\", margin: '4.0rem' }} />\r\n                :\r\n                  <div>\r\n                    {mountIconTag()}\r\n                    <h3>{modalData.message}</h3>                    \r\n                  </div>            \r\n            }\r\n          </ModalBody>\r\n        </Modal>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}