{"ast":null,"code":"import { OK } from \"components/modals/ModalConsts\";\nimport { ERROR } from \"components/modals/ModalConsts\";\nimport { isEmpty } from \"./collections\";\nexport function isSuccessStatusCode(response) {\n  if (response && response['data'] && response['data']['codigo']) {\n    const code = response.data.codigo;\n    const status = code % 100;\n    return status === 0;\n  }\n\n  return false;\n}\nexport function isEmptyResponse(response) {\n  if (response && response['data'] && response['data']['response_raw'] && response['data']['response_raw'] !== 'null') {\n    return false;\n  }\n\n  return true;\n}\nexport function getValue(response, fiedlname) {\n  if (response && response['data'] && response['data']['response_raw']) {\n    return response['data']['response_raw'][fiedlname];\n  }\n\n  return null;\n}\nexport function wasSuccessRequest(response, field_name) {\n  return isSuccessStatusCode(response) && !isEmpty(getValue(response, field_name));\n}\nexport function treatResponse(entity, operation, field_name, response, setModalData, refresh) {\n  if (isSuccessStatusCode(response)) {\n    if (getValue(response, field_name)) {\n      refresh();\n      setModalData({\n        entity,\n        operation,\n        messageType: OK,\n        message: \"\"\n      });\n    } else {\n      setModalData({\n        entity,\n        operation,\n        messageType: ERROR,\n        message: \"\"\n      });\n    }\n  } else {\n    setModalData(treatError(response, entity, operation));\n  }\n}\nexport default function treatError(err, entity, operation) {\n  let message = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  if (!err.response) return {\n    messageType: ERROR,\n    message: \"A requisição não conseguiu ser enviada ou processada!\"\n  };\n  const code = err.response.data.codigo;\n  const operationCode = Math.floor(code / 100) - 1;\n  const error = code % 100;\n  let instructions;\n\n  switch (error) {\n    case 1:\n      instructions = \"Sessão expirada, logue novamente.\";\n      break;\n\n    case 2:\n      instructions = \"Você não possui permissão para executar esta ação.\";\n      break;\n\n    case 3:\n      instructions = \"Alguma data ou horário inseridos são inválidos.\";\n      break;\n\n    case 4:\n      instructions = \"Algum campo que esperava uma data recebeu um dado inválido.\";\n      break;\n\n    case 10:\n    case 5:\n      instructions = \"Algum campo que esperava um número inteiro recebeu um dado inválido.\";\n      break;\n\n    case 6:\n      instructions = \"Algum campo que esperava um texto recebeu um dado inválido.\";\n      break;\n\n    case 7:\n      instructions = \"ID inválido.\";\n      break;\n\n    case 8:\n      instructions = \"Algum campo obrigatório não recebeu nenhum dado.\";\n      break;\n\n    case 9:\n      instructions = \"Algum campo que esperava um número decimal recebeu um dado inválido.\";\n      break;\n\n    case 11:\n      instructions = \"O cadastro a ser \".concat(operationCode === 2 ? \"atualizado\" : \"deletado\", \" \\xE9 inexistente.\");\n      break;\n\n    case 97:\n      instructions = \"[ERRO INTERNO] config_status não está presente na query.\";\n      break;\n\n    case 98:\n      instructions = \"[ERRO INTERNO] config_status recebeu um valor inválido.\";\n      break;\n\n    default:\n      instructions = \"Ocorreu um erro de c\\xF3digo \".concat(error);\n      break;\n  }\n\n  return {\n    messageType: ERROR,\n    entity,\n    operation,\n    instructions,\n    message\n  };\n}","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/utils/errorTreatment.js"],"names":["OK","ERROR","isEmpty","isSuccessStatusCode","response","code","data","codigo","status","isEmptyResponse","getValue","fiedlname","wasSuccessRequest","field_name","treatResponse","entity","operation","setModalData","refresh","messageType","message","treatError","err","operationCode","Math","floor","error","instructions"],"mappings":"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","sourcesContent":["import { OK } from \"components/modals/ModalConsts\"\r\nimport { ERROR } from \"components/modals/ModalConsts\"\r\nimport { isEmpty } from \"./collections\"\r\n\r\n\r\nexport function isSuccessStatusCode(response){\r\n  if (response && response['data'] && response['data']['codigo']){\r\n    const code = response.data.codigo\r\n    const status = code%100 \r\n    return status ===  0  \r\n  } \r\n  return false  \r\n}\r\n\r\nexport function isEmptyResponse(response){\r\n  if (response && response['data'] && response['data']['response_raw'] && response['data']['response_raw'] !== 'null' ){\r\n    return false\r\n  } \r\n  return true\r\n}\r\n\r\nexport function getValue(response, fiedlname){\r\n  if (response && response['data'] && response['data']['response_raw']){\r\n    return response['data']['response_raw'][fiedlname]\r\n  }\r\n  return null\r\n}\r\n\r\nexport function wasSuccessRequest(response, field_name) {\r\n  return isSuccessStatusCode(response) && !isEmpty(getValue(response, field_name))\r\n\r\n}\r\n\r\nexport function treatResponse(entity, operation, field_name, response, setModalData, refresh) {\r\n  if (isSuccessStatusCode(response)) {\r\n    if (getValue(response, field_name)) {\r\n      refresh();\r\n      setModalData({ entity, operation, messageType: OK, message: \"\" });\r\n    } else {\r\n      setModalData({ entity, operation, messageType: ERROR, message: \"\" });\r\n    }\r\n  } else {\r\n    setModalData(treatError(response, entity, operation));\r\n  }\r\n}\r\n\r\n\r\nexport default function treatError(err, entity, operation, message=\"\"){\r\n  if(!err.response)\r\n    return {messageType: ERROR, message: \"A requisição não conseguiu ser enviada ou processada!\"}\r\n\r\n  const code = err.response.data.codigo\r\n  const operationCode = Math.floor(code/100)-1\r\n  const error = code%100\r\n  let instructions\r\n\r\n  switch(error){\r\n    case 1:\r\n      instructions = \"Sessão expirada, logue novamente.\"\r\n      break\r\n    case 2:\r\n      instructions = \"Você não possui permissão para executar esta ação.\"\r\n      break\r\n    case 3:\r\n      instructions = \"Alguma data ou horário inseridos são inválidos.\"\r\n      break\r\n    case 4:\r\n      instructions = \"Algum campo que esperava uma data recebeu um dado inválido.\"\r\n      break\r\n    case 10:\r\n    case 5:\r\n      instructions = \"Algum campo que esperava um número inteiro recebeu um dado inválido.\"\r\n      break\r\n    case 6:\r\n      instructions = \"Algum campo que esperava um texto recebeu um dado inválido.\"\r\n      break\r\n    case 7:\r\n      instructions = \"ID inválido.\"\r\n      break\r\n    case 8:\r\n      instructions = \"Algum campo obrigatório não recebeu nenhum dado.\"\r\n      break\r\n    case 9:\r\n      instructions = \"Algum campo que esperava um número decimal recebeu um dado inválido.\"\r\n      break\r\n    case 11:\r\n      instructions = `O cadastro a ser ${operationCode === 2? \"atualizado\" : \"deletado\"} é inexistente.`\r\n      break\r\n    case 97:\r\n      instructions = \"[ERRO INTERNO] config_status não está presente na query.\"\r\n      break\r\n    case 98:\r\n      instructions = \"[ERRO INTERNO] config_status recebeu um valor inválido.\"\r\n      break\r\n    default:\r\n      instructions = `Ocorreu um erro de código ${error}`\r\n      break\r\n  }\r\n\r\n  return { messageType: ERROR, entity, operation, instructions, message }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}