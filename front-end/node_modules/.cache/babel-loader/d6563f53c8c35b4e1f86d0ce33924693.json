{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Traffic\\\\tables\\\\WarningTable.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Severity from \"components/table-elements/Severity\";\nimport { ViewsContext } from \"context/ViewsContext\";\nimport TagsInput from \"components/tags/TagsInput\";\nimport { getLastWarningID, setLastWarningId, getViewedWarnings } from \"common/SessionUtils\";\nimport Table from \"components/tables/Table\";\nimport { createQueryHttpRequestBody } from \"axios/AxiosUtils\";\nimport NOTIFICATION_TYPE_ENUM from \"common/enumerators/NotificationTypeEnum\";\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport { getUserLogin } from \"common/SessionUtils\";\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\nimport { isEmptyResponse } from \"common/utils/errorTreatment\";\nimport axios from \"axios\";\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\nimport { getNowDateTimeString } from \"common/utils/validate\";\nimport env from \"common/enviroment\";\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\nimport Plate from \"components/table-elements/Plate\";\nimport { ID } from \"common/model/Notification\";\nimport { TrafficTimestamp } from \"components/table-elements/TrafficTimestamp\";\nimport { RiLockFill, RiCameraLine } from \"react-icons/ri\";\nimport Warning from \"components/table-elements/Warning\";\nimport TrafficLastLocations from \"components/table-elements/TrafficLastLocations\";\nimport { NavigationContext } from \"context/NavigationContext\";\nimport { tryMarkAsViewed } from \"common/rules/NotificationRules\";\nimport { mountGroupsFilterClause } from \"axios/AxiosUtils\";\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\nimport WarningModal from \"components/modals/WarningModal/WarningModal\";\nimport WarningDfe from \"components/table-elements/WarningDfe\";\nimport useToggle from \"common/hooks/useToogle\";\nimport WarningDfeModal from \"components/modals/WarningDfeModal/WarningDfeModal\";\nimport { FISCAL_NOTIFICATION_LOCK } from \"common/model/Notification\";\nimport { FISCAL_NOTIFICATION_STATUS } from \"common/model/Notification\";\nimport { SEVERITY } from \"common/model/WarningConfig\";\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\nimport { NAME } from \"common/model/WarningConfig\";\nimport { EVENT_CREATION_TIMESTAMP } from \"common/model/Event\";\nimport { FISCAL_NOTIFICATION_DATE } from \"common/model/Notification\";\nimport { EVENT_LOCAL } from \"common/model/Event\";\nimport { MDFE_ORIGIN } from \"common/model/Mdfe\";\nimport { MDFE_DESTINATION } from \"common/model/Mdfe\";\nimport { EVENT_VEHICLE_PLATE } from \"common/model/Event\";\nimport { EVENT_VEHICLE_TYPE } from \"common/model/Event\";\nimport { EVENT_VEHICLE_MODEL } from \"common/model/Event\";\nimport { EVENT_VEHICLE_COLOUR } from \"common/model/Event\";\nimport { ID_EVENT_ALTERNATIVE } from \"common/model/Event\";\nimport allowLock from \"common/rules/NotificationRules\";\nimport { isUnviewed } from \"common/enumerators/NotificationStatus\";\nimport LOCK_ENUM from \"common/enumerators/LockEnum\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { AuditorsContext } from \"context/AuditorsContext\";\nimport { GroupsContext } from \"context/GroupsContext\";\nimport useNotification from \"common/hooks/useNotification\";\nimport { DESIGNATION_AUDITOR } from \"common/model/Notification\";\nimport { DESIGNATION_DATE } from \"common/model/Notification\";\nimport { FISCAL_NOTIFICATION_LOCK_USER } from \"common/model/Notification\";\nimport { FISCAL_NOTIFICATION_LOCK_TIMESTAMP } from \"common/model/Notification\";\nimport { DESIGNATION_REPORT } from \"common/model/Notification\";\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\nimport { FISCAL_NOTIFICATION_TYPE } from \"common/model/Notification\";\nimport { QUERY } from \"axios/AxiosUtils\";\nimport { FILTERS } from \"axios/AxiosUtils\";\nimport { GROUP_IDS } from \"axios/AxiosUtils\";\nimport { EVENT_UF } from \"common/model/Event\";\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\nimport VehicleModal from \"components/modals/VehicleModal\";\nimport TrafficImageModal from \"components/modals/TrafficImageModal/TrafficImageModal\";\nimport { Notification } from \"common/model/Notification\";\nimport { warningTableFiltersOptions } from \"../utils/filters\";\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\nimport { cloneFilters } from \"axios/AxiosUtils\";\nimport getRandomImage from \"common/utils/getRandomImage\";\nimport { EVENT_INGESTION_TIMESTAMP } from \"common/model/Event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INTERVAL_WINDOW = 5 * 60000; // 5 minutos\n//TODO remover estas referencias a groupsConditons e groupsValues. Isso deve vir do context\n\nexport default function WarningTable(_ref) {\n  _s();\n\n  let {\n    toggleMapModal\n  } = _ref;\n  const {\n    refreshFlag,\n    warningTableFilters,\n    setWarningTableFilters,\n    warningTableTags,\n    setWarningTableTags\n  } = React.useContext(ViewsContext);\n  const {\n    warningsViewed,\n    setWarningsViewed\n  } = React.useContext(WarningsUpdateContext);\n  const {\n    getAuditorRegistry\n  } = React.useContext(AuditorsContext);\n  const {\n    getMonitoringGroupOwner,\n    getGroupOwnerData,\n    getGroupSupervisorData\n  } = React.useContext(GroupsContext);\n  const {\n    clearBell\n  } = React.useContext(NavigationContext);\n  const [viewedWarningsData, setViewedWarningsData] = React.useState([]);\n  ;\n  const [refreshWarningsFlag, setRefreshWarningsFlag] = React.useState(false);\n\n  const refreshWarnings = () => setRefreshWarningsFlag(prev => !prev);\n\n  const [spinner, setSpinner] = React.useState(false);\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA);\n  const [intervalId, setIntervalId] = React.useState(false);\n  const [fetchDataFlag, toggleFetchData] = useToggle(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    modalData,\n    setModalData,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff\n  } = useModalWithData();\n  const {\n    mountEditionData\n  } = useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData);\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  React.useEffect(() => {\n    testAndUnlockWarning(warningsViewed, setWarningsViewed); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    if (intervalId) clearInterval(intervalId);\n    setIntervalId(setInterval(() => {\n      refreshWarnings();\n    }, INTERVAL_WINDOW, 0, true)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [warningTableFilters, clearBell]);\n\n  function handleRowClick(warning) {\n    let id = warning[ID].toString(); //Se já foi visualizado, não tem porque marcar novamente como visualizado\n\n    if (tryMarkAsViewed(warning, warningsViewed)) {\n      let httpRequestBody = createBaseHttpRequestBody({\n        [DESIGNATION_AUDITOR]: getUserLogin(),\n        [DESIGNATION_DATE]: getNowDateTimeString(),\n        [FISCAL_NOTIFICATION_STATUS]: NOTIFICATION_STATUS_ENUM.VISUALIZADA\n      });\n      axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/warnings/update_view/\").concat(id), httpRequestBody).then(res => {\n        if (isEmptyResponse(res) || !isSuccessStatusCode(res)) {\n          setWarningsViewed(prevState => ({ ...prevState,\n            [id]: {\n              user: \"TELMO IURY THAIS RAONI E YURI\",\n              checked: false,\n              lock: 0,\n              status: 1\n            } //Este nome esquisito é só para marcar que um usuário diferente daquele logado ganhou a corrida na visualização\n\n          }));\n        } else {\n          setWarningsViewed(prevState => ({ ...prevState,\n            [id]: {\n              user: getUserLogin(),\n              checked: false,\n              lock: 0,\n              status: 1\n            }\n          }));\n        }\n      }).catch(err => {\n        console.log('erro ao atualizar designation_user');\n      });\n    }\n  }\n\n  const createWarningsHttpRequestBody = () => {\n    let filtersClone = cloneFilters(warningTableFilters);\n    let httpRequestBody = createQueryHttpRequestBody(filtersClone);\n    let groups = mountGroupsFilterClause(warningTableTags);\n    httpRequestBody[QUERY][GROUP_IDS] = groups;\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.TRAFFIC;\n    return httpRequestBody;\n  };\n\n  const createCountWarningsHttpRequestBody = () => {\n    let filtersClone = cloneFilters(warningTableFilters);\n    let httpRequestBody = createBaseHttpRequestBody();\n    let groups = mountGroupsFilterClause(warningTableTags);\n    httpRequestBody[GROUP_IDS] = groups;\n    httpRequestBody[FILTERS] = filtersClone;\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.TRAFFIC;\n    return httpRequestBody;\n  };\n\n  const warningsRequestMiddleware = data => {\n    if (!getLastWarningID() && data && data.length > 0) {\n      setLastWarningId(parseInt(data[data.length - 1][ID]));\n    }\n\n    if (viewedWarningsData.length === 0 && getViewedWarnings()) {\n      setViewedWarningsData(JSON.parse(getViewedWarnings()));\n    }\n\n    return data;\n  }; //TODO AJEITAR ISSO. Tá complicado e feio. \n\n\n  function conditionalRowFormat(notification) {\n    let warning_id = notification.id.toString();\n\n    if (Object.keys(warningsViewed).includes(warning_id)) {\n      if ((warningsViewed[warning_id].lock === 0 || warningsViewed[warning_id].lock === null) && warningsViewed[warning_id].status === 1) {\n        return {\n          backgroundColor: 'rgb(255 255 0 / 0.1)'\n        };\n      } else {\n        return {};\n      }\n    } else {\n      if (notification[FISCAL_NOTIFICATION_STATUS] === 1 && (notification[FISCAL_NOTIFICATION_LOCK] === 0 || notification[FISCAL_NOTIFICATION_LOCK] === null)) {\n        return {\n          backgroundColor: 'rgb(255 255 0 / 0.1)'\n        };\n      } else if (notification[FISCAL_NOTIFICATION_STATUS] === 0) {\n        return {\n          fontWeight: 550\n        };\n      }\n\n      return {};\n    }\n  }\n\n  const lockWarning = async warning => {\n    let httpRequestBody = createBaseHttpRequestBody({\n      [FISCAL_NOTIFICATION_LOCK_USER]: getUserLogin(),\n      [FISCAL_NOTIFICATION_LOCK_TIMESTAMP]: getNowDateTimeString(),\n      [FISCAL_NOTIFICATION_LOCK]: LOCK_ENUM.LOCK,\n      [FISCAL_NOTIFICATION_STATUS]: warning[FISCAL_NOTIFICATION_STATUS],\n      [DESIGNATION_AUDITOR]: warning[DESIGNATION_AUDITOR],\n      [DESIGNATION_DATE]: warning[DESIGNATION_DATE]\n    });\n\n    try {\n      let res = await axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/warnings/update_view/\").concat(warning[ID]), httpRequestBody);\n\n      if (isSuccessStatusCode(res) && !isEmptyResponse(res)) {\n        warning[FISCAL_NOTIFICATION_LOCK_USER] = httpRequestBody[FISCAL_NOTIFICATION_LOCK_USER];\n        warning[FISCAL_NOTIFICATION_LOCK_TIMESTAMP] = httpRequestBody[FISCAL_NOTIFICATION_LOCK_TIMESTAMP];\n        warning[FISCAL_NOTIFICATION_LOCK] = httpRequestBody[FISCAL_NOTIFICATION_LOCK];\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  const openTrafficImageModal = () => {\n    toggleModalOn(MODAL_TYPE_ENUM.TRAFFIC_IMAGE);\n  };\n\n  const openWarningModal = async warning => {\n    handleRowClick(warning);\n    let notificationObj = new Notification(warning);\n    setSpinner(() => true);\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING, notificationObj);\n    let httpRequestBody = createBaseHttpRequestBody({\n      [ID]: warning.id\n    });\n    axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/warnings/read_view\"), httpRequestBody).then(async res => {\n      if (isEmpty(res.data[0])) {\n        return;\n      }\n\n      let warningUpToDate = res.data[0];\n      let currentStatus = warningUpToDate[FISCAL_NOTIFICATION_STATUS];\n      warning[FISCAL_NOTIFICATION_LOCK] = warningUpToDate[FISCAL_NOTIFICATION_LOCK];\n      warning[FISCAL_NOTIFICATION_LOCK_USER] = warningUpToDate[FISCAL_NOTIFICATION_LOCK_USER];\n      warning[FISCAL_NOTIFICATION_LOCK_TIMESTAMP] = warningUpToDate[FISCAL_NOTIFICATION_LOCK_TIMESTAMP];\n      warning[FISCAL_NOTIFICATION_STATUS] = currentStatus;\n      warning[DESIGNATION_AUDITOR] = warningUpToDate[DESIGNATION_AUDITOR];\n      warning[DESIGNATION_DATE] = warningUpToDate[DESIGNATION_DATE];\n      warning[DESIGNATION_REPORT] = warningUpToDate[DESIGNATION_REPORT];\n      warning[FISCAL_ACTION_AUDITORS] = warningUpToDate[FISCAL_ACTION_AUDITORS];\n\n      if (allowLock(warning)) {\n        //IMPORTANTE: ESTE COMANDO ABAIXO GARANTE QUE SE O COMANDO PARA ABRIR O MODAL FOR EXECUTADO ANTES DO UPDATE DE STATUS PARA VISUALIZADO, O STATUS SEJA DEFINIDO PARA VISUALIZADO\n        if (isUnviewed(currentStatus)) {\n          warning[FISCAL_NOTIFICATION_STATUS] = NOTIFICATION_STATUS_ENUM.VISUALIZADA;\n          warning[DESIGNATION_AUDITOR] = getUserLogin();\n          warning[DESIGNATION_DATE] = getNowDateTimeString();\n        }\n\n        let isLocked = await lockWarning(warning);\n\n        if (isLocked) {\n          let warning_id = warning.id.toString();\n          warning[FISCAL_NOTIFICATION_LOCK] = LOCK_ENUM.UNLOCK;\n          setWarningsViewed(prevState => ({ ...prevState,\n            [warning_id]: {\n              user: getUserLogin(),\n              checked: false,\n              lock: LOCK_ENUM.UNLOCK,\n              status: warning[FISCAL_NOTIFICATION_STATUS]\n            }\n          }));\n        }\n      }\n\n      notificationObj = new Notification(warning);\n      setFormData(mountEditionData(notificationObj, \"\"));\n      setModalData(() => notificationObj);\n    }).catch(err => {\n      setFormData(mountEditionData(notificationObj, \"\"));\n      setModalData(() => notificationObj);\n    }).finally(() => {\n      setSpinner(() => false);\n    });\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING, notificationObj);\n  };\n\n  const IconLockUnlock = props => {\n    //Precisa desta conversão a chave está vindo do sistema de push notification como string ao invés de int. \n    let warning_id = props.data[0].toString();\n\n    if (Object.keys(warningsViewed).includes(warning_id)) {\n      if (warningsViewed[warning_id].lock === 0 || warningsViewed[warning_id].lock === null) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 16\n        }, this);\n      }\n\n      if (warningsViewed[warning_id].lock === 1 && warningsViewed[warning_id].status > NOTIFICATION_STATUS_ENUM.VISUALIZADA) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 16\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(RiLockFill, {\n          size: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 14\n      }, this);\n    } else {\n      let lock = props.data[1];\n      let status = props.data[2];\n      if (lock === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 16\n      }, this);\n      if (lock === 1 && status > NOTIFICATION_STATUS_ENUM.VISUALIZADA) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 16\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(RiLockFill, {\n          size: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TagsInput, {\n      setQuery: setWarningTableFilters,\n      tagsState: [warningTableTags, setWarningTableTags],\n      columns: warningTableFiltersOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataUrl: \"/warnings/read_all\",\n      countUrl: \"/warnings/count_warnings\",\n      timeout: 10000,\n      requestBody: createWarningsHttpRequestBody,\n      countRequestBody: createCountWarningsHttpRequestBody,\n      requestMiddleware: warningsRequestMiddleware,\n      tags: warningTableFilters,\n      fillData: true,\n      refresh: refreshWarningsFlag ^ refreshFlag,\n      loading: [isLoading, setIsLoading],\n      invalid: [\"null\", undefined, null, \"\", \"-\"],\n      trProps: row => {\n        return {\n          style: conditionalRowFormat(row)\n        };\n      },\n      columns: {\n        \" \": {\n          args: [ID, FISCAL_NOTIFICATION_LOCK, FISCAL_NOTIFICATION_STATUS],\n          Func: _ref2 => {\n            let {\n              data\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(IconLockUnlock, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 31\n            }, this);\n          }\n        },\n        \"Prioridade\": {\n          args: SEVERITY,\n          func: severity => /*#__PURE__*/_jsxDEV(Severity, {\n            severity: severity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 32\n          }, this)\n        },\n        \"Ocorrência\": {\n          thStyle: {\n            textAlign: 'right'\n          },\n          tdStyle: {\n            textAlign: 'right'\n          },\n          args: ID\n        },\n        \"Nº Alerta\": {\n          thStyle: {\n            textAlign: 'right'\n          },\n          tdStyle: {\n            textAlign: 'right'\n          },\n          args: ID_CONFIG\n        },\n        \"Alerta\": {\n          args: NAME,\n          Func: _ref3 => {\n            let {\n              row_data\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(Warning, {\n              data: row_data,\n              toggleModal: openWarningModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 35\n            }, this);\n          }\n        },\n        \"Passagem\": {\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\n          Func: _ref4 => {\n            let {\n              data\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(TrafficTimestamp, {\n              data: data,\n              isTrafficTimestamp: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 31\n            }, this);\n          }\n        },\n        \"Recebimento\": {\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\n          Func: _ref5 => {\n            let {\n              data\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(TrafficTimestamp, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 31\n            }, this);\n          }\n        },\n        \"Disparo\": {\n          args: [EVENT_CREATION_TIMESTAMP, FISCAL_NOTIFICATION_DATE],\n          Func: _ref6 => {\n            let {\n              data\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(TrafficTimestamp, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 31\n            }, this);\n          }\n        },\n        \"Local\": {\n          args: EVENT_LOCAL,\n          Func: _ref7 => {\n            let {\n              row_data\n            } = _ref7;\n            return /*#__PURE__*/_jsxDEV(TrafficLastLocations, {\n              data: row_data,\n              toggleModal: toggleMapModal,\n              fetchData: toggleFetchData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 35\n            }, this);\n          }\n        },\n\n        /*\"Imagem\": {\r\n          args: [ID, FISCAL_NOTIFICATION_STATUS],\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n          Func: ({ row_data }) => {\r\n            return (\r\n              <button\r\n                className=\"btn btn-primary\" \r\n                onClick={() => {\r\n                  openTrafficImageModal()\r\n                }}>\r\n                  <RiCameraLine \r\n                  size={18} \r\n                />\r\n              </button>\r\n            )\r\n          }\r\n        }, */\n        \"Uf Disparo\": {\n          args: EVENT_UF,\n          thStyle: {\n            textAlign: 'center'\n          },\n          tdStyle: {\n            textAlign: 'center'\n          }\n        },\n        \"Uf Origem\": {\n          args: MDFE_ORIGIN,\n          thStyle: {\n            textAlign: 'center'\n          },\n          tdStyle: {\n            textAlign: 'center'\n          }\n        },\n        \"Uf Destino\": {\n          args: MDFE_DESTINATION,\n          thStyle: {\n            textAlign: 'center'\n          },\n          tdStyle: {\n            textAlign: 'center'\n          }\n        },\n        \"Placa\": {\n          args: EVENT_VEHICLE_PLATE,\n          thStyle: {\n            textAlign: 'center'\n          },\n          tdStyle: {\n            textAlign: 'center'\n          },\n          func: plate => /*#__PURE__*/_jsxDEV(Plate, {\n            plate: plate,\n            toggleModal: toggleModalOn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 28\n          }, this)\n        },\n        \"Veículo\": EVENT_VEHICLE_TYPE,\n        \"Modelo\": EVENT_VEHICLE_MODEL,\n        \"Cor\": EVENT_VEHICLE_COLOUR,\n        \"DF-e\": {\n          args: ID_EVENT_ALTERNATIVE,\n          Func: _ref8 => {\n            let {\n              row_data\n            } = _ref8;\n            return /*#__PURE__*/_jsxDEV(WarningDfe, {\n              data: row_data,\n              toggleModalOn: toggleModalOn,\n              toggleFetchData: toggleFetchData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 35\n            }, this);\n          }\n        },\n        \"Situação\": {\n          args: [ID],\n          thStyle: {\n            textAlign: 'center'\n          },\n          tdStyle: {\n            textAlign: 'center',\n            whiteSpace: 'pre'\n          },\n          Func: _ref9 => {\n            let {\n              row_data\n            } = _ref9;\n            const notificationObj = new Notification(row_data);\n            return notificationObj.getNotificationStatusLabel(warningsViewed);\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 5\n    }, this), modalType === MODAL_TYPE_ENUM.WARNING && /*#__PURE__*/_jsxDEV(WarningModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData,\n      fetchData: fetchDataFlag,\n      formData: formData,\n      setFormData: setFormData,\n      reloadMethod: refreshWarnings,\n      spinner: spinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 47\n    }, this), modalType === MODAL_TYPE_ENUM.VEHICLE && /*#__PURE__*/_jsxDEV(VehicleModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 47\n    }, this), modalType === MODAL_TYPE_ENUM.WARNING_DFE && /*#__PURE__*/_jsxDEV(WarningDfeModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData,\n      fetchData: fetchDataFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 51\n    }, this), modalType === MODAL_TYPE_ENUM.TRAFFIC_IMAGE && /*#__PURE__*/_jsxDEV(TrafficImageModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      uri: getRandomImage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 53\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WarningTable, \"bvl5hfVIGmCEJjh1uL1P+0PDpQY=\", false, function () {\n  return [useToggle, useModalWithData, useNotification];\n});\n\n_c = WarningTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WarningTable\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/views/Traffic/tables/WarningTable.js"],"names":["React","Severity","ViewsContext","TagsInput","getLastWarningID","setLastWarningId","getViewedWarnings","Table","createQueryHttpRequestBody","NOTIFICATION_TYPE_ENUM","createBaseHttpRequestBody","getUserLogin","isSuccessStatusCode","isEmptyResponse","axios","axiosRetry","getTimeoutConfig","getRetryConfig","NOTIFICATION_STATUS_ENUM","getNowDateTimeString","env","WarningsUpdateContext","Plate","ID","TrafficTimestamp","RiLockFill","RiCameraLine","Warning","TrafficLastLocations","NavigationContext","tryMarkAsViewed","mountGroupsFilterClause","useModalWithData","MODAL_TYPE_ENUM","WarningModal","WarningDfe","useToggle","WarningDfeModal","FISCAL_NOTIFICATION_LOCK","FISCAL_NOTIFICATION_STATUS","SEVERITY","ID_CONFIG","NAME","EVENT_CREATION_TIMESTAMP","FISCAL_NOTIFICATION_DATE","EVENT_LOCAL","MDFE_ORIGIN","MDFE_DESTINATION","EVENT_VEHICLE_PLATE","EVENT_VEHICLE_TYPE","EVENT_VEHICLE_MODEL","EVENT_VEHICLE_COLOUR","ID_EVENT_ALTERNATIVE","allowLock","isUnviewed","LOCK_ENUM","isEmpty","AuditorsContext","GroupsContext","useNotification","DESIGNATION_AUDITOR","DESIGNATION_DATE","FISCAL_NOTIFICATION_LOCK_USER","FISCAL_NOTIFICATION_LOCK_TIMESTAMP","DESIGNATION_REPORT","FISCAL_ACTION_AUDITORS","FISCAL_NOTIFICATION_TYPE","QUERY","FILTERS","GROUP_IDS","EVENT_UF","testAndUnlockWarning","VehicleModal","TrafficImageModal","Notification","warningTableFiltersOptions","DESIGNATION_FORM_DATA","cloneFilters","getRandomImage","EVENT_INGESTION_TIMESTAMP","INTERVAL_WINDOW","WarningTable","toggleMapModal","refreshFlag","warningTableFilters","setWarningTableFilters","warningTableTags","setWarningTableTags","useContext","warningsViewed","setWarningsViewed","getAuditorRegistry","getMonitoringGroupOwner","getGroupOwnerData","getGroupSupervisorData","clearBell","viewedWarningsData","setViewedWarningsData","useState","refreshWarningsFlag","setRefreshWarningsFlag","refreshWarnings","prev","spinner","setSpinner","formData","setFormData","intervalId","setIntervalId","fetchDataFlag","toggleFetchData","isLoading","setIsLoading","modalData","setModalData","isModalActive","modalType","toggleModalOn","toggleModalOff","mountEditionData","axiosRetryProxy","create","useEffect","clearInterval","setInterval","handleRowClick","warning","id","toString","httpRequestBody","VISUALIZADA","patch","apiAddress","then","res","prevState","user","checked","lock","status","catch","err","console","log","createWarningsHttpRequestBody","filtersClone","groups","TRAFFIC","createCountWarningsHttpRequestBody","warningsRequestMiddleware","data","length","parseInt","JSON","parse","conditionalRowFormat","notification","warning_id","Object","keys","includes","backgroundColor","fontWeight","lockWarning","LOCK","error","openTrafficImageModal","TRAFFIC_IMAGE","openWarningModal","notificationObj","WARNING","post","warningUpToDate","currentStatus","isLocked","UNLOCK","finally","IconLockUnlock","props","undefined","row","style","args","Func","func","severity","thStyle","textAlign","tdStyle","row_data","plate","whiteSpace","getNotificationStatusLabel","VEHICLE","WARNING_DFE"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Severity from \"components/table-elements/Severity\";\r\nimport { ViewsContext } from \"context/ViewsContext\";\r\nimport TagsInput from \"components/tags/TagsInput\";\r\nimport { getLastWarningID, setLastWarningId, getViewedWarnings } from \"common/SessionUtils\";\r\nimport Table from \"components/tables/Table\";\r\nimport { createQueryHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport NOTIFICATION_TYPE_ENUM from \"common/enumerators/NotificationTypeEnum\";\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\";\r\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\r\nimport { isEmptyResponse } from \"common/utils/errorTreatment\";\r\nimport axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport env from \"common/enviroment\";\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\nimport Plate from \"components/table-elements/Plate\";\r\nimport { ID } from \"common/model/Notification\";\r\nimport { TrafficTimestamp } from \"components/table-elements/TrafficTimestamp\";\r\nimport { RiLockFill, RiCameraLine } from \"react-icons/ri\";\r\nimport Warning from \"components/table-elements/Warning\";\r\nimport TrafficLastLocations from \"components/table-elements/TrafficLastLocations\";\r\nimport { NavigationContext } from \"context/NavigationContext\";\r\nimport { tryMarkAsViewed } from \"common/rules/NotificationRules\";\r\nimport { mountGroupsFilterClause } from \"axios/AxiosUtils\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\nimport WarningModal from \"components/modals/WarningModal/WarningModal\";\r\nimport WarningDfe from \"components/table-elements/WarningDfe\";\r\nimport useToggle from \"common/hooks/useToogle\";\r\nimport WarningDfeModal from \"components/modals/WarningDfeModal/WarningDfeModal\";\r\nimport { FISCAL_NOTIFICATION_LOCK } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_STATUS } from \"common/model/Notification\";\r\nimport { SEVERITY } from \"common/model/WarningConfig\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\nimport { NAME } from \"common/model/WarningConfig\";\r\nimport { EVENT_CREATION_TIMESTAMP } from \"common/model/Event\";\r\nimport { FISCAL_NOTIFICATION_DATE } from \"common/model/Notification\";\r\nimport { EVENT_LOCAL } from \"common/model/Event\";\r\nimport { MDFE_ORIGIN } from \"common/model/Mdfe\";\r\nimport { MDFE_DESTINATION } from \"common/model/Mdfe\";\r\nimport { EVENT_VEHICLE_PLATE } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_TYPE } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_MODEL } from \"common/model/Event\";\r\nimport { EVENT_VEHICLE_COLOUR } from \"common/model/Event\";\r\nimport { ID_EVENT_ALTERNATIVE } from \"common/model/Event\";\r\nimport allowLock from \"common/rules/NotificationRules\";\r\nimport { isUnviewed } from \"common/enumerators/NotificationStatus\";\r\nimport LOCK_ENUM from \"common/enumerators/LockEnum\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { AuditorsContext } from \"context/AuditorsContext\";\r\nimport { GroupsContext } from \"context/GroupsContext\";\r\nimport useNotification from \"common/hooks/useNotification\";\r\nimport { DESIGNATION_AUDITOR } from \"common/model/Notification\";\r\nimport { DESIGNATION_DATE } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_LOCK_USER } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_LOCK_TIMESTAMP } from \"common/model/Notification\";\r\nimport { DESIGNATION_REPORT } from \"common/model/Notification\";\r\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\r\nimport { FISCAL_NOTIFICATION_TYPE } from \"common/model/Notification\";\r\nimport { QUERY } from \"axios/AxiosUtils\";\r\nimport { FILTERS } from \"axios/AxiosUtils\";\r\nimport { GROUP_IDS } from \"axios/AxiosUtils\";\r\nimport { EVENT_UF } from \"common/model/Event\";\r\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\r\nimport VehicleModal from \"components/modals/VehicleModal\";\r\nimport TrafficImageModal from \"components/modals/TrafficImageModal/TrafficImageModal\";\r\nimport { Notification } from \"common/model/Notification\";\r\nimport { warningTableFiltersOptions } from \"../utils/filters\";\r\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\r\nimport { cloneFilters } from \"axios/AxiosUtils\";\r\nimport getRandomImage from \"common/utils/getRandomImage\";\r\nimport { EVENT_INGESTION_TIMESTAMP } from \"common/model/Event\";\r\n\r\nconst INTERVAL_WINDOW = (5 * 60000) // 5 minutos\r\n\r\n//TODO remover estas referencias a groupsConditons e groupsValues. Isso deve vir do context\r\nexport default function WarningTable({toggleMapModal}) {\r\n\r\n\r\n  const { refreshFlag, warningTableFilters, setWarningTableFilters, warningTableTags, setWarningTableTags } = React.useContext(ViewsContext)\r\n  const { warningsViewed, setWarningsViewed } = React.useContext(WarningsUpdateContext)\r\n  const {  getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const {  getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData } = React.useContext(GroupsContext);\r\n  const { clearBell } = React.useContext(NavigationContext)\r\n  const [viewedWarningsData, setViewedWarningsData] = React.useState([]);;\r\n  const [refreshWarningsFlag, setRefreshWarningsFlag] = React.useState(false)\r\n  const refreshWarnings = () => setRefreshWarningsFlag(prev => !prev);\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA)\r\n  const [intervalId, setIntervalId] = React.useState(false)\r\n  const [fetchDataFlag, toggleFetchData] = useToggle(false)\r\n\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n  const {mountEditionData} = useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData) \r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    testAndUnlockWarning(warningsViewed, setWarningsViewed)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (intervalId)\r\n      clearInterval(intervalId)\r\n\r\n    setIntervalId(setInterval(() => { refreshWarnings() }, INTERVAL_WINDOW, 0, true))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [warningTableFilters, clearBell])\r\n  \r\n  \r\n  \r\n  function handleRowClick(warning) {\r\n\r\n    let id = warning[ID].toString()\r\n\r\n    //Se já foi visualizado, não tem porque marcar novamente como visualizado\r\n    if (tryMarkAsViewed(warning, warningsViewed)) {\r\n      let httpRequestBody = createBaseHttpRequestBody({\r\n        [DESIGNATION_AUDITOR]: getUserLogin(),\r\n        [DESIGNATION_DATE]: getNowDateTimeString(),\r\n        [FISCAL_NOTIFICATION_STATUS]: NOTIFICATION_STATUS_ENUM.VISUALIZADA\r\n      })\r\n\r\n      axiosRetryProxy.patch(`${env.apiAddress}/warnings/update_view/${id}`, httpRequestBody).then(res => {\r\n        if (isEmptyResponse(res) || !isSuccessStatusCode(res)) {\r\n          setWarningsViewed((prevState) => ({\r\n            ...prevState,\r\n            [id]: { user: \"TELMO IURY THAIS RAONI E YURI\", checked: false, lock: 0, status: 1 } //Este nome esquisito é só para marcar que um usuário diferente daquele logado ganhou a corrida na visualização\r\n          }))\r\n        } else {\r\n          setWarningsViewed((prevState) => ({\r\n            ...prevState,\r\n            [id]: { user: getUserLogin(), checked: false, lock: 0, status: 1 }\r\n          }))\r\n        }\r\n      }).catch(err => {\r\n        console.log('erro ao atualizar designation_user')\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const createWarningsHttpRequestBody = () => {\r\n\r\n    let filtersClone = cloneFilters(warningTableFilters)\r\n\r\n    let httpRequestBody = createQueryHttpRequestBody(filtersClone)\r\n    let groups = mountGroupsFilterClause(warningTableTags)\r\n\r\n    httpRequestBody[QUERY][GROUP_IDS] = groups\r\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.TRAFFIC\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createCountWarningsHttpRequestBody = () => {\r\n\r\n    let filtersClone = cloneFilters(warningTableFilters)\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    let groups = mountGroupsFilterClause(warningTableTags)\r\n\r\n    httpRequestBody[GROUP_IDS] = groups\r\n    httpRequestBody[FILTERS] = filtersClone\r\n    httpRequestBody[FISCAL_NOTIFICATION_TYPE] = NOTIFICATION_TYPE_ENUM.TRAFFIC\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const warningsRequestMiddleware = (data) => {\r\n    if (!getLastWarningID() && data && data.length > 0) {\r\n      setLastWarningId(parseInt(data[data.length - 1][ID]))\r\n    }\r\n\r\n    if (viewedWarningsData.length === 0 && getViewedWarnings()) {\r\n      setViewedWarningsData(JSON.parse(getViewedWarnings()));\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n\r\n\r\n  //TODO AJEITAR ISSO. Tá complicado e feio. \r\n  function conditionalRowFormat(notification) {\r\n\r\n    let warning_id = notification.id.toString()\r\n\r\n    if (Object.keys(warningsViewed).includes(warning_id)) {\r\n      if ((warningsViewed[warning_id].lock === 0 || warningsViewed[warning_id].lock === null) && warningsViewed[warning_id].status === 1) {\r\n        return { backgroundColor: 'rgb(255 255 0 / 0.1)' }\r\n      } else {\r\n        return {}\r\n      }\r\n\r\n\r\n    } else {\r\n      if (notification[FISCAL_NOTIFICATION_STATUS] === 1 && (notification[FISCAL_NOTIFICATION_LOCK] === 0 || notification[FISCAL_NOTIFICATION_LOCK] === null)) {\r\n        return { backgroundColor: 'rgb(255 255 0 / 0.1)' }\r\n      } else if (notification[FISCAL_NOTIFICATION_STATUS] === 0) {\r\n        return { fontWeight: 550 }\r\n      }\r\n\r\n\r\n      return {}\r\n    }\r\n  }\r\n\r\n\r\n  const lockWarning = async (warning) => {\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [FISCAL_NOTIFICATION_LOCK_USER]: getUserLogin(),\r\n      [FISCAL_NOTIFICATION_LOCK_TIMESTAMP]: getNowDateTimeString(),\r\n      [FISCAL_NOTIFICATION_LOCK]: LOCK_ENUM.LOCK,\r\n      [FISCAL_NOTIFICATION_STATUS]: warning[FISCAL_NOTIFICATION_STATUS],\r\n      [DESIGNATION_AUDITOR]: warning[DESIGNATION_AUDITOR],\r\n      [DESIGNATION_DATE]: warning[DESIGNATION_DATE]\r\n    })\r\n\r\n    try {\r\n      let res = await axiosRetryProxy.patch(`${env.apiAddress}/warnings/update_view/${warning[ID]}`, httpRequestBody)\r\n      if (isSuccessStatusCode(res) && !isEmptyResponse(res)) {\r\n        warning[FISCAL_NOTIFICATION_LOCK_USER] = httpRequestBody[FISCAL_NOTIFICATION_LOCK_USER]\r\n        warning[FISCAL_NOTIFICATION_LOCK_TIMESTAMP] = httpRequestBody[FISCAL_NOTIFICATION_LOCK_TIMESTAMP]\r\n        warning[FISCAL_NOTIFICATION_LOCK] = httpRequestBody[FISCAL_NOTIFICATION_LOCK]\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  const openTrafficImageModal = () => {\r\n    toggleModalOn(MODAL_TYPE_ENUM.TRAFFIC_IMAGE)\r\n  }\r\n  \r\n\r\n  const openWarningModal = async (warning) => {\r\n\r\n    handleRowClick(warning)\r\n    let notificationObj = new Notification(warning)\r\n\r\n    setSpinner(() => true)\r\n    \r\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING, notificationObj)\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      [ID]: warning.id,\r\n    })\r\n\r\n    \r\n\r\n    axiosRetryProxy.post(`${env.apiAddress}/warnings/read_view`, httpRequestBody)\r\n      .then(async res => {\r\n\r\n        if (isEmpty(res.data[0])){\r\n          return \r\n        }\r\n\r\n        let warningUpToDate = res.data[0]\r\n        let currentStatus = warningUpToDate[FISCAL_NOTIFICATION_STATUS]\r\n        warning[FISCAL_NOTIFICATION_LOCK] = warningUpToDate[FISCAL_NOTIFICATION_LOCK]\r\n        warning[FISCAL_NOTIFICATION_LOCK_USER] = warningUpToDate[FISCAL_NOTIFICATION_LOCK_USER]\r\n        warning[FISCAL_NOTIFICATION_LOCK_TIMESTAMP] = warningUpToDate[FISCAL_NOTIFICATION_LOCK_TIMESTAMP]\r\n        warning[FISCAL_NOTIFICATION_STATUS] = currentStatus\r\n\r\n        warning[DESIGNATION_AUDITOR] = warningUpToDate[DESIGNATION_AUDITOR] \r\n        warning[DESIGNATION_DATE] = warningUpToDate[DESIGNATION_DATE]\r\n        warning[DESIGNATION_REPORT] = warningUpToDate[DESIGNATION_REPORT]\r\n        warning[FISCAL_ACTION_AUDITORS] = warningUpToDate[FISCAL_ACTION_AUDITORS]\r\n\r\n        if (allowLock(warning)) {\r\n\r\n          //IMPORTANTE: ESTE COMANDO ABAIXO GARANTE QUE SE O COMANDO PARA ABRIR O MODAL FOR EXECUTADO ANTES DO UPDATE DE STATUS PARA VISUALIZADO, O STATUS SEJA DEFINIDO PARA VISUALIZADO\r\n          if (isUnviewed(currentStatus)) {\r\n            warning[FISCAL_NOTIFICATION_STATUS] = NOTIFICATION_STATUS_ENUM.VISUALIZADA\r\n            warning[DESIGNATION_AUDITOR] = getUserLogin()\r\n            warning[DESIGNATION_DATE] = getNowDateTimeString()\r\n          }\r\n\r\n          let isLocked = await lockWarning(warning)\r\n\r\n          if (isLocked) {\r\n            let warning_id = warning.id.toString()\r\n            warning[FISCAL_NOTIFICATION_LOCK] = LOCK_ENUM.UNLOCK\r\n            setWarningsViewed((prevState) => ({\r\n              ...prevState,\r\n              [warning_id]: { user: getUserLogin(), checked: false, lock: LOCK_ENUM.UNLOCK, status: warning[FISCAL_NOTIFICATION_STATUS] }\r\n            }))\r\n          }\r\n        }\r\n\r\n        notificationObj = new Notification(warning)\r\n        setFormData(mountEditionData(notificationObj, \"\"))\r\n        setModalData(() => notificationObj);\r\n\r\n\r\n      }).catch(err => {\r\n        setFormData(mountEditionData(notificationObj, \"\"))\r\n        setModalData(() => notificationObj);\r\n      })\r\n      .finally(() => {\r\n        setSpinner(() => false)\r\n\r\n      })\r\n\r\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING, notificationObj)\r\n\r\n  }\r\n\r\n\r\n\r\n  const IconLockUnlock = (props) => {\r\n\r\n    //Precisa desta conversão a chave está vindo do sistema de push notification como string ao invés de int. \r\n    let warning_id = props.data[0].toString()\r\n\r\n    if (Object.keys(warningsViewed).includes(warning_id)) {\r\n      if (warningsViewed[warning_id].lock === 0 || warningsViewed[warning_id].lock === null) {\r\n        return <p> </p>\r\n      }\r\n\r\n      if (warningsViewed[warning_id].lock === 1 && warningsViewed[warning_id].status > NOTIFICATION_STATUS_ENUM.VISUALIZADA) {\r\n        return <p> </p>\r\n      }\r\n\r\n      return <p><RiLockFill size={15} /> </p>\r\n    } else {\r\n\r\n      let lock = props.data[1]\r\n      let status = props.data[2]\r\n\r\n      if (lock === 0)\r\n        return <p> </p>\r\n\r\n      if (lock === 1 && status > NOTIFICATION_STATUS_ENUM.VISUALIZADA)\r\n        return <p> </p>\r\n\r\n      return <p><RiLockFill size={15} /> </p>\r\n    }\r\n  }\r\n\r\n\r\n  return ( <>\r\n    <TagsInput\r\n      setQuery={setWarningTableFilters}\r\n      tagsState={[warningTableTags, setWarningTableTags]}\r\n      columns={warningTableFiltersOptions}\r\n    />\r\n    <Table\r\n      dataUrl=\"/warnings/read_all\"\r\n      countUrl=\"/warnings/count_warnings\"\r\n      timeout={10000}\r\n      requestBody={createWarningsHttpRequestBody}\r\n      countRequestBody={createCountWarningsHttpRequestBody}\r\n      requestMiddleware={warningsRequestMiddleware}\r\n      tags={warningTableFilters}\r\n      fillData\r\n      refresh={refreshWarningsFlag ^ refreshFlag}\r\n      loading={[isLoading, setIsLoading]}\r\n      invalid={[\"null\", undefined, null, \"\", \"-\"]}\r\n      trProps={row => { return { style: conditionalRowFormat(row) } }}\r\n      columns={{\r\n        \" \": {\r\n          args: [ID, FISCAL_NOTIFICATION_LOCK, FISCAL_NOTIFICATION_STATUS],\r\n          Func: ({ data }) => <IconLockUnlock data={data} />\r\n        },\r\n        \"Prioridade\": {\r\n          args: SEVERITY,\r\n          func: (severity) =>  <Severity severity={severity} />\r\n        },\r\n        \"Ocorrência\": {\r\n          thStyle: { textAlign: 'right' },\r\n          tdStyle: { textAlign: 'right' },\r\n          args: ID,\r\n        },\r\n        \"Nº Alerta\": {\r\n          thStyle: { textAlign: 'right' },\r\n          tdStyle: { textAlign: 'right' },\r\n          args: ID_CONFIG,\r\n        },\r\n        \"Alerta\": {\r\n          args: NAME,\r\n          Func: ({ row_data }) => <Warning data={row_data} toggleModal={openWarningModal}/>\r\n        },\r\n        \"Passagem\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} isTrafficTimestamp={true} />\r\n        },\r\n        \"Recebimento\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, EVENT_INGESTION_TIMESTAMP],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} />\r\n        },\r\n        \"Disparo\": {\r\n          args: [EVENT_CREATION_TIMESTAMP, FISCAL_NOTIFICATION_DATE],\r\n          Func: ({ data }) => <TrafficTimestamp data={data} />\r\n        },\r\n        \"Local\": {\r\n          args: EVENT_LOCAL,\r\n          Func: ({ row_data }) => <TrafficLastLocations data={row_data}  toggleModal={toggleMapModal} fetchData={toggleFetchData}/>\r\n        },\r\n        /*\"Imagem\": {\r\n          args: [ID, FISCAL_NOTIFICATION_STATUS],\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n          Func: ({ row_data }) => {\r\n            return (\r\n              <button\r\n                className=\"btn btn-primary\" \r\n                onClick={() => {\r\n                  openTrafficImageModal()\r\n                }}>\r\n\r\n                <RiCameraLine \r\n                  size={18} \r\n                />\r\n              </button>\r\n            )\r\n          }\r\n        }, */\r\n        \"Uf Disparo\": {\r\n          args: EVENT_UF,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n        },\r\n        \"Uf Origem\": {\r\n          args: MDFE_ORIGIN,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n        },\r\n        \"Uf Destino\": {\r\n          args: MDFE_DESTINATION,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n        },\r\n        \"Placa\": {\r\n          args: EVENT_VEHICLE_PLATE,\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center' },\r\n          func: (plate) => <Plate plate={plate} toggleModal={toggleModalOn} />\r\n        },\r\n        \"Veículo\": EVENT_VEHICLE_TYPE,\r\n        \"Modelo\": EVENT_VEHICLE_MODEL,\r\n        \"Cor\": EVENT_VEHICLE_COLOUR,\r\n\r\n        \"DF-e\": {\r\n          args: ID_EVENT_ALTERNATIVE,\r\n          Func: ({ row_data }) => <WarningDfe data={row_data} toggleModalOn={toggleModalOn} toggleFetchData={toggleFetchData} />\r\n        },\r\n        \"Situação\": {\r\n          args: [ID],\r\n          thStyle: { textAlign: 'center' },\r\n          tdStyle: { textAlign: 'center', whiteSpace: 'pre' },\r\n          Func: ({ row_data}) => {\r\n            const notificationObj = new Notification(row_data)\r\n            return notificationObj.getNotificationStatusLabel(warningsViewed)\r\n          }\r\n        },\r\n      }}\r\n    />\r\n    {modalType === MODAL_TYPE_ENUM.WARNING && <WarningModal show={isModalActive} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag} formData={formData} setFormData={setFormData} reloadMethod={refreshWarnings} spinner={spinner} />}\r\n    {modalType === MODAL_TYPE_ENUM.VEHICLE && <VehicleModal show={isModalActive} toggle={toggleModalOff} data={modalData} />}\r\n    {modalType === MODAL_TYPE_ENUM.WARNING_DFE && <WarningDfeModal show={isModalActive} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag}/>}\r\n    {modalType === MODAL_TYPE_ENUM.TRAFFIC_IMAGE && <TrafficImageModal show={isModalActive} toggle={toggleModalOff} uri={getRandomImage()}/>}\r\n  </>)\r\n}"]},"metadata":{},"sourceType":"module"}