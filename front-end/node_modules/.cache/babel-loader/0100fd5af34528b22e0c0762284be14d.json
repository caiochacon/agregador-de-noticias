{"ast":null,"code":"import axios from \"axios\";\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\nimport { getUserLogin } from \"common/SessionUtils\";\nimport LOCK_ENUM from \"common/enumerators/LockEnum\";\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\nimport { EM_MONITORAMENTO, SEM_COMANDO_FISCAL } from \"common/model/Notification\";\nimport env from \"common/enviroment\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nconst lock_status = 'fiscal_notification_lock';\nconst lock_timestamp = 'fiscal_notification_lock_timestamp';\nconst warning_status = 'fiscal_notification_status';\nconst lock_user = 'fiscal_notification_lock_user';\nconst auditors = 'fiscal_action_auditors';\nconst homologation_auditor = 'fiscal_action_homologation_auditor';\nconst homologation_date = 'fiscal_action_homologation_date';\nconst designation_auditor = 'fiscal_action_designation_auditor';\nconst report = 'fiscal_action_report';\nconst timestamp_threshold = 300000;\nexport function evaluateStatus(warning) {\n  if (isEmpty(warning[auditors]) && isEmpty(warning[designation_auditor])) return NOTIFICATION_STATUS_ENUM.CRIADA;\n  if (isEmpty(warning[auditors]) && !isEmpty(warning[designation_auditor])) return NOTIFICATION_STATUS_ENUM.VISUALIZADA;\n  if (!isEmpty(warning[homologation_auditor]) && !isEmpty(warning[homologation_date]) && checkSemComandoFiscal(warning[auditors])) return NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA;\n  if (!isEmpty(warning[homologation_auditor]) && !isEmpty(warning[homologation_date])) return NOTIFICATION_STATUS_ENUM.HOMOLOGADA;\n  if (!isEmpty(warning[auditors]) && checkSemComandoFiscal(warning[auditors])) return NOTIFICATION_STATUS_ENUM.SEM_COMANDO;\n  if (!isEmpty(warning[auditors]) && !isEmpty(warning[designation_auditor]) && isEmpty(warning[report])) return NOTIFICATION_STATUS_ENUM.DESIGNADA;\n  if (!isEmpty(warning[auditors]) && !isEmpty(warning[designation_auditor]) && !isEmpty(warning[report])) return NOTIFICATION_STATUS_ENUM.REALIZADA;\n}\nexport function checkSemComandoFiscal(fiscal_action_auditors) {\n  let fiscalKeys = Object.keys(fiscal_action_auditors);\n  return fiscalKeys.includes(SEM_COMANDO_FISCAL) || fiscalKeys.includes(EM_MONITORAMENTO);\n}\nexport function evaluateNoDesignationStatus(fiscal_action_auditors) {\n  let fiscalKeys = Object.keys(fiscal_action_auditors);\n\n  if (fiscalKeys.includes(SEM_COMANDO_FISCAL)) {\n    return NOTIFICATION_STATUS_ENUM.SEM_COMANDO;\n  } else if (fiscalKeys.includes(EM_MONITORAMENTO)) {\n    return NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO;\n  }\n\n  return null;\n}\nexport default function allowLock(warning) {\n  if (!warning) {\n    return false;\n  }\n\n  if (warning[warning_status] > 1) {\n    //Se o status for maior que 1 (ja teve a designação para ação fiscal), nao é necessario bloquear\n    return false;\n  }\n\n  if (warning[lock_status] === LOCK_ENUM.UNLOCK) {\n    //Como está desbloqueado, então será possível bloquear.\n    return true;\n  }\n\n  if (warning[lock_status] === LOCK_ENUM.LOCK && warning[lock_user] === getUserLogin()) {\n    //Como o usuário logado já possuia o lock, então será possível bloquear.\n    return true;\n  }\n\n  if (warning[lock_status] === LOCK_ENUM.LOCK && warning[lock_timestamp] && isEmpty(warning[auditors])) {\n    //Como o usuário logado não possua o lock, mas o lock está mais antigo que 30min, será possivel sobreescrever o lock\n    let actual_date = new Date();\n    let miliseconds_diff = actual_date - new Date(warning[lock_timestamp]);\n\n    if (miliseconds_diff > timestamp_threshold) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function tryLock(warningData, pushNotificationWarnings) {\n  if (!warningData) return false;\n  let status = \"fiscal_notification_status\";\n  let warningID = warningData.id.toString();\n  console.log(\"nenca1\", warningData[status], warningData);\n  console.log(\"nenca2\", pushNotificationWarnings[warningID]); //se o status for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\n\n  if (warningData[status] >= NOTIFICATION_STATUS_ENUM.DESIGNADA) {\n    return false;\n  } //se tiver sido recebida por push notification e o status tb for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\n\n\n  if (pushNotificationWarnings[warningID].status >= NOTIFICATION_STATUS_ENUM.DESIGNADA) {\n    return false;\n  }\n\n  return true;\n}\nexport function tryMarkAsViewed(warningData, pushNotificationWarnings) {\n  if (!warningData) return false;\n  let status = \"fiscal_notification_status\";\n  let warningID = warningData.id.toString(); //se tiver sido recebida por push notification, quer dizer que alguém já visualizou. Então não é necessário marcá-la como visualizada. \n\n  if (pushNotificationWarnings[warningID]) {\n    return false;\n  } //se o status for diferente de visualizada, quer dizer também que alguém já visualizou. Então não é necessário marcá-la como visualizada\n\n\n  if (warningData[status] !== NOTIFICATION_STATUS_ENUM.NAO_VISUALIZADA) {\n    return false;\n  }\n\n  return true;\n}\nexport function allowUnlock(warningData, pushNotificationWarnings) {\n  if (!warningData) return false;\n  let status = \"fiscal_notification_status\";\n  let lock_status = \"fiscal_notification_lock\";\n  let warningID = warningData.id.toString(); //se o status for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\n\n  if (warningData[status] >= NOTIFICATION_STATUS_ENUM.DESIGNADA) {\n    return false;\n  } //se tiver sido recebida por push notification e o status tb for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\n\n\n  if (pushNotificationWarnings[warningID] && pushNotificationWarnings[warningID].status >= NOTIFICATION_STATUS_ENUM.DESIGNADA) {\n    return false;\n  }\n\n  if (warningData[lock_status] === LOCK_ENUM.LOCK && isEmpty(warningData[auditors])) {\n    //Se estiver bloqueado, e os auditores estiverem preechidos, não será possível desbloquear o alerta.\n    return true;\n  }\n\n  if (warningData[lock_status] === LOCK_ENUM.UNLOCK) {\n    return true;\n  }\n\n  return false;\n}\nexport function unlockWarning(warning, status, warningsViewed, setWarningsViewed) {\n  if (allowUnlock(warning, warningsViewed)) {\n    const axiosRetryProxy = axios.create(getTimeoutConfig());\n    axiosRetry(axiosRetryProxy, getRetryConfig());\n    let warning_id = warning['id'].toString();\n    let httpRequestBody = createBaseHttpRequestBody({\n      fiscal_notification_lock_user: null,\n      fiscal_notification_lock_timestamp: new Date(Date.now() - 1000 * (60 * 5)),\n      // 5min ago,\n      fiscal_notification_lock: LOCK_ENUM.UNLOCK,\n      fiscal_notification_status: status\n    });\n    axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/warnings/update_view/\").concat(warning_id), httpRequestBody).then(res => {\n      if (isSuccessStatusCode(res)) {\n        console.log('destravando alerta de id', warning_id);\n        setWarningsViewed(prevState => ({ ...prevState,\n          [warning_id]: { ...prevState[warning_id],\n            checked: false,\n            lock: 0,\n            status: httpRequestBody['fiscal_notification_status']\n          }\n        }));\n      }\n    }).catch(err => {\n      console.log('erro destravar alerta de id', warning_id, err);\n    });\n  }\n}\nexport function testAndUnlockWarning(warningsViewed, setWarningsViewed) {\n  let warningToUnlock = localStorage.getItem(\"warningToUnlock\");\n\n  if (isEmpty(warningToUnlock)) {\n    return;\n  }\n\n  console.log(\"UNLOCK0\", warningToUnlock);\n  warningToUnlock = JSON.parse(warningToUnlock);\n\n  if (isEmpty(warningToUnlock)) {\n    localStorage.removeItem(\"warningToUnlock\");\n    return;\n  }\n\n  unlockWarning(warningToUnlock, warningToUnlock['fiscal_notification_status'], warningsViewed, setWarningsViewed);\n  localStorage.removeItem(\"warningToUnlock\");\n}\nexport function compareLastTwoLogs(logs) {\n  const diffs = [];\n  const allKeys = new Set(logs.flatMap(log => Object.keys(log)));\n\n  for (let i = logs.length - 1; i > 0; i--) {\n    const l_a = logs[i];\n    const l_b = logs[i - 1];\n    const diff = {};\n    allKeys.forEach(key => {\n      if (l_a.hasOwnProperty(key) && l_b.hasOwnProperty(key)) {\n        if (JSON.stringify(l_a[key]) !== JSON.stringify(l_b[key])) {\n          diff[key] = [l_a[key], l_b[key]]; // [new, old]\n        }\n      }\n    });\n\n    if (Object.keys(diff).length > 0) {\n      diffs.push({\n        logIndexA: logs[i - 1],\n        logIndexB: logs[i],\n        // logIndexA is the older log, logIndexB is the newer log\n        diff\n      });\n    }\n  }\n\n  return diffs;\n}\n;\nexport function checkIfKeyIsInDiff(key, logA, logB, log_diff) {\n  return log_diff.some(diff => {\n    return diff.logIndexA === logA && diff.logIndexB === logB && diff.diff.hasOwnProperty(key);\n  });\n}","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/rules/NotificationRules.js"],"names":["axios","createBaseHttpRequestBody","getUserLogin","LOCK_ENUM","NOTIFICATION_STATUS_ENUM","EM_MONITORAMENTO","SEM_COMANDO_FISCAL","env","isEmpty","isSuccessStatusCode","axiosRetry","getTimeoutConfig","getRetryConfig","lock_status","lock_timestamp","warning_status","lock_user","auditors","homologation_auditor","homologation_date","designation_auditor","report","timestamp_threshold","evaluateStatus","warning","CRIADA","VISUALIZADA","checkSemComandoFiscal","SEM_COMANDO_HOMOLOGADA","HOMOLOGADA","SEM_COMANDO","DESIGNADA","REALIZADA","fiscal_action_auditors","fiscalKeys","Object","keys","includes","evaluateNoDesignationStatus","allowLock","UNLOCK","LOCK","actual_date","Date","miliseconds_diff","tryLock","warningData","pushNotificationWarnings","status","warningID","id","toString","console","log","tryMarkAsViewed","NAO_VISUALIZADA","allowUnlock","unlockWarning","warningsViewed","setWarningsViewed","axiosRetryProxy","create","warning_id","httpRequestBody","fiscal_notification_lock_user","fiscal_notification_lock_timestamp","now","fiscal_notification_lock","fiscal_notification_status","patch","apiAddress","then","res","prevState","checked","lock","catch","err","testAndUnlockWarning","warningToUnlock","localStorage","getItem","JSON","parse","removeItem","compareLastTwoLogs","logs","diffs","allKeys","Set","flatMap","i","length","l_a","l_b","diff","forEach","key","hasOwnProperty","stringify","push","logIndexA","logIndexB","checkIfKeyIsInDiff","logA","logB","log_diff","some"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { createBaseHttpRequestBody } from \"axios/AxiosUtils\";\r\nimport { getUserLogin } from \"common/SessionUtils\"\r\nimport LOCK_ENUM from \"common/enumerators/LockEnum\"\r\nimport NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\"\r\nimport { EM_MONITORAMENTO, SEM_COMANDO_FISCAL } from \"common/model/Notification\";\r\n\r\nimport env from \"common/enviroment\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { isSuccessStatusCode } from \"common/utils/errorTreatment\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\n\r\nconst lock_status = 'fiscal_notification_lock'\r\nconst lock_timestamp = 'fiscal_notification_lock_timestamp'\r\nconst warning_status = 'fiscal_notification_status'\r\nconst lock_user = 'fiscal_notification_lock_user'\r\nconst auditors = 'fiscal_action_auditors'\r\nconst homologation_auditor = 'fiscal_action_homologation_auditor'\r\nconst homologation_date = 'fiscal_action_homologation_date'\r\nconst designation_auditor = 'fiscal_action_designation_auditor'\r\nconst report = 'fiscal_action_report'\r\nconst timestamp_threshold = 300000\r\n\r\n\r\nexport function  evaluateStatus (warning) {\r\n  \r\n  if (isEmpty(warning[auditors]) && isEmpty(warning[designation_auditor]))\r\n    return NOTIFICATION_STATUS_ENUM.CRIADA\r\n\r\n  if (isEmpty(warning[auditors]) && !isEmpty(warning[designation_auditor]))\r\n    return NOTIFICATION_STATUS_ENUM.VISUALIZADA\r\n  \r\n  if (!isEmpty(warning[homologation_auditor]) && !isEmpty(warning[homologation_date]) && checkSemComandoFiscal(warning[auditors])  ) \r\n    return NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA\r\n  \r\n  if (!isEmpty(warning[homologation_auditor])  && !isEmpty(warning[homologation_date])) \r\n    return NOTIFICATION_STATUS_ENUM.HOMOLOGADA\r\n  \r\n  if (!isEmpty(warning[auditors]) && checkSemComandoFiscal(warning[auditors]))\r\n    return NOTIFICATION_STATUS_ENUM.SEM_COMANDO\r\n  \r\n  if (!isEmpty(warning[auditors]) && !isEmpty(warning[designation_auditor]) && isEmpty(warning[report]))\r\n    return NOTIFICATION_STATUS_ENUM.DESIGNADA\r\n\r\n  \r\n  if (!isEmpty(warning[auditors]) && !isEmpty(warning[designation_auditor]) && !isEmpty(warning[report]))\r\n    return NOTIFICATION_STATUS_ENUM.REALIZADA\r\n\r\n}\r\n\r\nexport function  checkSemComandoFiscal (fiscal_action_auditors) {\r\n  let fiscalKeys = Object.keys(fiscal_action_auditors)\r\n  return fiscalKeys.includes(SEM_COMANDO_FISCAL) || fiscalKeys.includes(EM_MONITORAMENTO) \r\n}\r\n\r\n\r\n\r\nexport function  evaluateNoDesignationStatus (fiscal_action_auditors) {\r\n  let fiscalKeys = Object.keys(fiscal_action_auditors)\r\n  if (fiscalKeys.includes(SEM_COMANDO_FISCAL)) {\r\n    return NOTIFICATION_STATUS_ENUM.SEM_COMANDO\r\n  } else if (fiscalKeys.includes(EM_MONITORAMENTO)) {\r\n    return NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO\r\n  }\r\n  return null\r\n}\r\n\r\nexport default function allowLock(warning) {\r\n\r\n  if (!warning) {\r\n    return false\r\n  }\r\n\r\n  if (warning[warning_status] > 1) { //Se o status for maior que 1 (ja teve a designação para ação fiscal), nao é necessario bloquear\r\n    return false\r\n  }\r\n\r\n  if (warning[lock_status] === LOCK_ENUM.UNLOCK) { //Como está desbloqueado, então será possível bloquear.\r\n    return true\r\n  }\r\n\r\n  if (warning[lock_status] === LOCK_ENUM.LOCK && warning[lock_user] === getUserLogin()) { //Como o usuário logado já possuia o lock, então será possível bloquear.\r\n    return true\r\n  }\r\n\r\n  if (warning[lock_status] === LOCK_ENUM.LOCK && warning[lock_timestamp] && isEmpty(warning[auditors])) { //Como o usuário logado não possua o lock, mas o lock está mais antigo que 30min, será possivel sobreescrever o lock\r\n\r\n    let actual_date = new Date()\r\n    let miliseconds_diff = actual_date - new Date(warning[lock_timestamp]);\r\n\r\n    if (miliseconds_diff > timestamp_threshold ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n\r\n  return false\r\n}\r\n\r\nexport function tryLock(warningData, pushNotificationWarnings ) {\r\n\r\n  \r\n  if (!warningData)\r\n    return false \r\n\r\n  let status = \"fiscal_notification_status\"\r\n  let warningID = warningData.id.toString()\r\n\r\n  console.log(\"nenca1\", warningData[status], warningData)\r\n  console.log(\"nenca2\",pushNotificationWarnings[warningID])\r\n  //se o status for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\r\n  if (warningData[status]  >= NOTIFICATION_STATUS_ENUM.DESIGNADA) {\r\n    return false\r\n  }\r\n\r\n  //se tiver sido recebida por push notification e o status tb for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\r\n  if (pushNotificationWarnings[warningID].status >= NOTIFICATION_STATUS_ENUM.DESIGNADA){\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n\r\nexport function tryMarkAsViewed(warningData, pushNotificationWarnings ) {\r\n\r\n  if (!warningData)\r\n    return false \r\n\r\n  let status = \"fiscal_notification_status\"\r\n  let warningID = warningData.id.toString()\r\n\r\n  //se tiver sido recebida por push notification, quer dizer que alguém já visualizou. Então não é necessário marcá-la como visualizada. \r\n  if (pushNotificationWarnings[warningID]){\r\n    return false\r\n  }\r\n\r\n  //se o status for diferente de visualizada, quer dizer também que alguém já visualizou. Então não é necessário marcá-la como visualizada\r\n  if (warningData[status]  !== NOTIFICATION_STATUS_ENUM.NAO_VISUALIZADA) {\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n\r\nexport function allowUnlock(warningData, pushNotificationWarnings) {\r\n\r\n  if (!warningData)\r\n    return false \r\n\r\n  let status = \"fiscal_notification_status\"\r\n  let lock_status = \"fiscal_notification_lock\"\r\n  let warningID = warningData.id.toString()\r\n\r\n  //se o status for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\r\n  if (warningData[status]  >= NOTIFICATION_STATUS_ENUM.DESIGNADA) {\r\n    return false\r\n  }\r\n\r\n  //se tiver sido recebida por push notification e o status tb for maior que designado, quer dizer também que alguém já realizou o tratamento do alerta, não sendo assim possível solicitar lock\r\n  if (pushNotificationWarnings[warningID] && pushNotificationWarnings[warningID].status >= NOTIFICATION_STATUS_ENUM.DESIGNADA){\r\n    return false\r\n  }\r\n\r\n  if (warningData[lock_status] === LOCK_ENUM.LOCK  && isEmpty(warningData[auditors]) ) { //Se estiver bloqueado, e os auditores estiverem preechidos, não será possível desbloquear o alerta.\r\n    return true\r\n  }\r\n\r\n  if (warningData[lock_status] === LOCK_ENUM.UNLOCK)  {\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function unlockWarning(warning, status, warningsViewed, setWarningsViewed) {\r\n    \r\n  if (allowUnlock(warning, warningsViewed)) {\r\n\r\n    const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n    axiosRetry(axiosRetryProxy, getRetryConfig())\r\n    \r\n    let warning_id = warning['id'].toString()\r\n\r\n    let httpRequestBody = createBaseHttpRequestBody({\r\n      fiscal_notification_lock_user: null,\r\n      fiscal_notification_lock_timestamp: new Date(Date.now() - 1000 * (60 * 5)), // 5min ago,\r\n      fiscal_notification_lock: LOCK_ENUM.UNLOCK,\r\n      fiscal_notification_status: status,\r\n\r\n      \r\n    })\r\n\r\n    axiosRetryProxy.patch(`${env.apiAddress}/warnings/update_view/${warning_id}`, httpRequestBody)\r\n      .then(res => {\r\n\r\n        if (isSuccessStatusCode(res)) {\r\n          console.log('destravando alerta de id', warning_id)\r\n\r\n          setWarningsViewed((prevState) => ({\r\n            ...prevState,\r\n            [warning_id]: { ...prevState[warning_id], checked: false, lock: 0,\r\n                            status: httpRequestBody['fiscal_notification_status']}\r\n          }))\r\n        }\r\n\r\n      }).catch(err => {\r\n        console.log('erro destravar alerta de id', warning_id, err)\r\n      })\r\n  }\r\n}\r\n\r\nexport function testAndUnlockWarning(warningsViewed, setWarningsViewed){\r\n  let warningToUnlock = localStorage.getItem(\"warningToUnlock\")\r\n  if(isEmpty(warningToUnlock)){\r\n    return \r\n  }\r\n\r\n  console.log(\"UNLOCK0\", warningToUnlock)\r\n  warningToUnlock = JSON.parse(warningToUnlock)\r\n  if(isEmpty(warningToUnlock)){\r\n    localStorage.removeItem(\"warningToUnlock\")\r\n    return \r\n  }\r\n\r\n  unlockWarning(warningToUnlock, warningToUnlock['fiscal_notification_status'], warningsViewed, setWarningsViewed)\r\n  localStorage.removeItem(\"warningToUnlock\")\r\n}\r\n\r\nexport function compareLastTwoLogs(logs){\r\n  const diffs = [];\r\n  const allKeys = new Set(logs.flatMap(log => Object.keys(log)));\r\n  for(let i = logs.length - 1; i > 0; i--) {\r\n      const l_a = logs[i];\r\n      const l_b = logs[i - 1];\r\n      const diff = {};\r\n\r\n      allKeys.forEach(key => {\r\n          if(l_a.hasOwnProperty(key) && l_b.hasOwnProperty(key)) {\r\n              if(JSON.stringify(l_a[key]) !== JSON.stringify(l_b[key])) {\r\n\r\n                  diff[key] = [l_a[key], l_b[key]]; // [new, old]\r\n              }\r\n          }\r\n      });\r\n\r\n      if (Object.keys(diff).length > 0) {\r\n          diffs.push({\r\n              logIndexA: logs[i - 1],\r\n              logIndexB: logs[i], // logIndexA is the older log, logIndexB is the newer log\r\n              diff\r\n      });\r\n      }\r\n  }\r\n  return diffs;\r\n};\r\n\r\nexport function checkIfKeyIsInDiff(key, logA, logB, log_diff){\r\n  return log_diff.some(diff => {\r\n    return diff.logIndexA === logA && diff.logIndexB === logB && diff.diff.hasOwnProperty(key);\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}