{"ast":null,"code":"import NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\";\nimport { getNotificationStatusLabel } from \"common/enumerators/NotificationStatus\";\nimport { REPORT_CPF_DRIVER } from \"common/model/Notification\";\nimport { REPORT_BOOKED_CPF } from \"common/model/Notification\";\nimport { FISCAL_ACTION_DATE } from \"common/model/Notification\";\nimport { FISCAL_NOTIFICATION_PARENT_ID } from \"common/model/Notification\";\nimport { HOMOLOGATION_AUDITOR } from \"common/model/Notification\";\nimport { MONITORING_USER_ID } from \"common/model/Notification\";\nimport { REPORT_DAR } from \"common/model/Notification\";\nimport { REPORT_PENALTY_VALUE } from \"common/model/Notification\";\nimport { REPORT_LATITUDE } from \"common/model/Notification\";\nimport { REPORT_PRODUCT_NAME } from \"common/model/Notification\";\nimport { FISCAL_ACTION_REPORT_DATE } from \"common/model/Notification\";\nimport { REPORT_ENABLED } from \"common/model/Notification\";\nimport { REPORT_LONGITUDE } from \"common/model/Notification\";\nimport { REPORT_BOOKED_IE } from \"common/model/Notification\";\nimport { REPORT_REVENUE_CODE } from \"common/model/Notification\";\nimport { REPORT_AI } from \"common/model/Notification\";\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\";\nimport { FISCAL_ACTION_REPORT } from \"common/model/Notification\";\nimport { VEHICLE_PLATE } from \"common/model/Notification\";\nimport { REPORT_BOOKED_CNPJ } from \"common/model/Notification\";\nimport { TRAILER_PLATE } from \"common/model/Notification\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { compareArray } from \"common/utils/collections\";\nimport { validateCNPJ } from \"common/utils/validate\";\nimport { validateCPF } from \"common/utils/validate\";\n\nfunction cleanText(str) {\n  if (str) {\n    return str.replace(/\\D/g, '');\n  } else {\n    return str;\n  }\n}\n\nexport const aiInput = {\n  placeholder: \"________.__.________/____-__\",\n  onChange: (state, setter) => e => {\n    const regex = /^\\d{8}[\\.]?\\d{2}[\\.]?\\d{8}[\\/]?\\d{4}[-]?\\d{2}$/;\n    let value = e.target.value;\n    if (value.length === 24 && regex.test(value)) setter(value.replace(/^(\\d{8})[\\.]?(\\d{2})[\\.]?(\\d{8})[\\/]?(\\d{4})[-]?(\\d{2})$/, \"$1.$2.$3/$4-$5\"));else if (state && value.length < state.length) // Caso estiver apagando, não é necessário fazer a checagem de regex\n      setter(value);else {\n      if (value.length === 9 || value.length === 12) // Adicionando os . e - automaticamente\n        value = \"\".concat(value.slice(0, -1), \".\").concat(value.slice(-1));\n      if (value.length === 21) value = \"\".concat(value.slice(0, -1), \"/\").concat(value.slice(-1));\n      if (value.length === 26) value = \"\".concat(value.slice(0, -1), \"-\").concat(value.slice(-1));\n      if (value === \"\" || /^\\d{1,8}(?:\\.\\d{1,2})?(?:\\.\\d{1,8})?(?:\\/\\d{1,4})?(?:-\\d{1,2})?$/.test(value)) // Finalmente testando o regex e atualizando\n        setter(value);\n    }\n  }\n};\nexport function validateData(obj) {\n  let result = [];\n\n  if (!isEmpty(obj[TRAILER_PLATE]) && obj[TRAILER_PLATE].length < 7) {\n    result.push(\"Placa do reboque está inválida\\n\");\n  }\n\n  if (!isEmpty(obj[REPORT_CPF_DRIVER]) && !validateCPF(cleanText(obj[REPORT_CPF_DRIVER]))) {\n    result.push(\"CPF do condutor está inválido\\n\");\n  }\n\n  if (!isEmpty(obj[REPORT_BOOKED_CPF]) && !validateCPF(cleanText(obj[REPORT_BOOKED_CPF]))) {\n    result.push(\"CPF do autuado está inválido\\n\");\n  }\n\n  if (!isEmpty(obj[REPORT_BOOKED_CNPJ]) && !validateCNPJ(cleanText(obj[REPORT_BOOKED_CNPJ]))) {\n    result.push(\"CNPJ do autuado está inválido\\n\");\n  } // if (!isEmpty(obj.report_ai) && !validateCNPJ(cleanText(obj.report_ai))) {\n  //   result.push(\"Nº do AI está inválido\\n\")\n  // }\n\n\n  if (obj[FISCAL_ACTION_DATE][0] && obj[FISCAL_ACTION_DATE][0]) {\n    const maxDate = new Date();\n    maxDate.setHours(0);\n    maxDate.setMinutes(1);\n    maxDate.setSeconds(0);\n    const date = new Date(\"\".concat(obj[FISCAL_ACTION_DATE][0], \"T\").concat(obj[FISCAL_ACTION_DATE][1]));\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n\n    if (date > maxDate) {\n      result.push(\"Data da Ação Fiscal não pode ser superior à data atual\\n\");\n    }\n  }\n\n  return result;\n}\nexport function getNotificationMostRecentStatus(id, fiscal_notification_status, warningsViewed) {\n  let key = id.toString();\n\n  if (fiscal_notification_status > NOTIFICATION_STATUS_ENUM.VISUALIZADA) {\n    return getNotificationStatusLabel(fiscal_notification_status);\n  } else if (Object.keys(warningsViewed).includes(key)) {\n    return getNotificationStatusLabel(NOTIFICATION_STATUS_ENUM.VISUALIZADA);\n  } else {\n    return getNotificationStatusLabel(fiscal_notification_status);\n  }\n}\nexport function alowPropagateNotificationData(notification) {\n  //As propagação de um estado só deve acontecer caso a configuração que gerou o alerta estiver relacionada a uma condição de placa e se ela tiver um parent_id configurado. \n  // Caso contrário, deve não deve haver propagação\n  let vehiclePlate = notification[VEHICLE_PLATE];\n\n  if (!vehiclePlate) {\n    return false;\n  }\n\n  if (isEmpty(notification[FISCAL_NOTIFICATION_PARENT_ID])) {\n    return false;\n  }\n\n  return true;\n}\nexport function compareWithOldValues(formData, oldFormData) {\n  if (formData[FISCAL_ACTION_REPORT] === oldFormData[FISCAL_ACTION_REPORT] && compareArray(formData[FISCAL_ACTION_DATE], oldFormData[FISCAL_ACTION_DATE]) && formData[MONITORING_USER_ID] === oldFormData[MONITORING_USER_ID] && oldFormData[HOMOLOGATION_AUDITOR] === formData[HOMOLOGATION_AUDITOR] && compareArray(oldFormData[FISCAL_ACTION_AUDITORS], formData[FISCAL_ACTION_AUDITORS]) && formData[REPORT_AI] === oldFormData[REPORT_AI] && formData[REPORT_DAR] === oldFormData[REPORT_PRODUCT_NAME] && formData[REPORT_REVENUE_CODE] === oldFormData[REPORT_REVENUE_CODE] && formData[REPORT_PENALTY_VALUE] === oldFormData[REPORT_PENALTY_VALUE] && formData[TRAILER_PLATE] === oldFormData[TRAILER_PLATE] && formData[REPORT_CPF_DRIVER] === oldFormData[REPORT_CPF_DRIVER] && formData[REPORT_BOOKED_IE] === oldFormData[REPORT_BOOKED_IE] && formData[REPORT_BOOKED_CPF] === oldFormData[REPORT_BOOKED_CPF] && formData[REPORT_BOOKED_CNPJ] === oldFormData[REPORT_BOOKED_CNPJ] && formData[REPORT_LATITUDE] === oldFormData[REPORT_LATITUDE] && formData[REPORT_LONGITUDE] === oldFormData[REPORT_LONGITUDE] && formData[REPORT_PRODUCT_NAME] === oldFormData[REPORT_PRODUCT_NAME]) {\n    return true;\n  }\n\n  return false;\n}\nexport function hasEmptyValues(obj) {\n  let bookedData = isEmpty(obj[REPORT_AI]) || isEmpty(obj[REPORT_PRODUCT_NAME]) || isEmpty(obj[REPORT_REVENUE_CODE]) || isEmpty(obj[REPORT_PENALTY_VALUE]) || isEmpty(obj[VEHICLE_PLATE]) || isEmpty(obj[TRAILER_PLATE]) || isEmpty(obj[REPORT_CPF_DRIVER]) || isEmpty(obj[REPORT_BOOKED_IE]) || isEmpty(obj[REPORT_BOOKED_CPF]) && isEmpty(obj[REPORT_BOOKED_CNPJ]) || //este aqui é um campo opcional ou preenche cpf ou cnpj\n  isEmpty(obj[REPORT_LATITUDE]) || isEmpty(obj[REPORT_LONGITUDE]) || isEmpty(obj[REPORT_PRODUCT_NAME]) || isEmpty(obj[HOMOLOGATION_AUDITOR]);\n  let hasBookedData = obj[REPORT_ENABLED];\n  if (isEmpty(obj[FISCAL_ACTION_REPORT]) || isEmpty(obj[FISCAL_ACTION_DATE]) || isEmpty(obj[FISCAL_ACTION_AUDITORS]) || isEmpty(obj[MONITORING_USER_ID] || hasBookedData && bookedData)) return true;\n  return false;\n}","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/components/modals/NotificationModal/utils/rules.js"],"names":["NOTIFICATION_STATUS_ENUM","getNotificationStatusLabel","REPORT_CPF_DRIVER","REPORT_BOOKED_CPF","FISCAL_ACTION_DATE","FISCAL_NOTIFICATION_PARENT_ID","HOMOLOGATION_AUDITOR","MONITORING_USER_ID","REPORT_DAR","REPORT_PENALTY_VALUE","REPORT_LATITUDE","REPORT_PRODUCT_NAME","FISCAL_ACTION_REPORT_DATE","REPORT_ENABLED","REPORT_LONGITUDE","REPORT_BOOKED_IE","REPORT_REVENUE_CODE","REPORT_AI","FISCAL_ACTION_AUDITORS","FISCAL_ACTION_REPORT","VEHICLE_PLATE","REPORT_BOOKED_CNPJ","TRAILER_PLATE","isEmpty","compareArray","validateCNPJ","validateCPF","cleanText","str","replace","aiInput","placeholder","onChange","state","setter","e","regex","value","target","length","test","slice","validateData","obj","result","push","maxDate","Date","setHours","setMinutes","setSeconds","date","getNotificationMostRecentStatus","id","fiscal_notification_status","warningsViewed","key","toString","VISUALIZADA","Object","keys","includes","alowPropagateNotificationData","notification","vehiclePlate","compareWithOldValues","formData","oldFormData","hasEmptyValues","bookedData","hasBookedData"],"mappings":"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","sourcesContent":["import NOTIFICATION_STATUS_ENUM from \"common/enumerators/NotificationStatus\"\r\nimport { getNotificationStatusLabel } from \"common/enumerators/NotificationStatus\"\r\nimport { REPORT_CPF_DRIVER } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_CPF } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_DATE } from \"common/model/Notification\"\r\nimport { FISCAL_NOTIFICATION_PARENT_ID } from \"common/model/Notification\"\r\nimport { HOMOLOGATION_AUDITOR } from \"common/model/Notification\"\r\nimport { MONITORING_USER_ID } from \"common/model/Notification\"\r\nimport { REPORT_DAR } from \"common/model/Notification\"\r\nimport { REPORT_PENALTY_VALUE } from \"common/model/Notification\"\r\nimport { REPORT_LATITUDE } from \"common/model/Notification\"\r\nimport { REPORT_PRODUCT_NAME } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_REPORT_DATE } from \"common/model/Notification\"\r\nimport { REPORT_ENABLED } from \"common/model/Notification\"\r\nimport { REPORT_LONGITUDE } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_IE } from \"common/model/Notification\"\r\nimport { REPORT_REVENUE_CODE } from \"common/model/Notification\"\r\nimport { REPORT_AI } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_AUDITORS } from \"common/model/Notification\"\r\nimport { FISCAL_ACTION_REPORT } from \"common/model/Notification\"\r\nimport { VEHICLE_PLATE } from \"common/model/Notification\"\r\nimport { REPORT_BOOKED_CNPJ } from \"common/model/Notification\"\r\nimport { TRAILER_PLATE } from \"common/model/Notification\"\r\nimport { isEmpty } from \"common/utils/collections\"\r\nimport { compareArray } from \"common/utils/collections\"\r\nimport { validateCNPJ } from \"common/utils/validate\"\r\nimport { validateCPF } from \"common/utils/validate\"\r\n\r\n\r\nfunction cleanText(str) {\r\n  if (str) {\r\n    return str.replace(/\\D/g, '')\r\n  } else {\r\n    return str\r\n  }\r\n}\r\n\r\nexport const aiInput = {\r\n  placeholder: \"________.__.________/____-__\",\r\n  onChange: (state, setter) => e => {\r\n    const regex = /^\\d{8}[\\.]?\\d{2}[\\.]?\\d{8}[\\/]?\\d{4}[-]?\\d{2}$/\r\n    let value = e.target.value\r\n    if (value.length === 24 && regex.test(value))\r\n      setter(value.replace(/^(\\d{8})[\\.]?(\\d{2})[\\.]?(\\d{8})[\\/]?(\\d{4})[-]?(\\d{2})$/, \"$1.$2.$3/$4-$5\"))\r\n    else if (state && value.length < state.length) // Caso estiver apagando, não é necessário fazer a checagem de regex\r\n      setter(value)\r\n    else {\r\n      if (value.length === 9 || value.length === 12)  // Adicionando os . e - automaticamente\r\n        value = `${value.slice(0, -1)}.${value.slice(-1)}`\r\n      if (value.length === 21)\r\n        value = `${value.slice(0, -1)}/${value.slice(-1)}`\r\n      if (value.length === 26)\r\n        value = `${value.slice(0, -1)}-${value.slice(-1)}`\r\n      if (value === \"\" || /^\\d{1,8}(?:\\.\\d{1,2})?(?:\\.\\d{1,8})?(?:\\/\\d{1,4})?(?:-\\d{1,2})?$/.test(value))   // Finalmente testando o regex e atualizando\r\n        setter(value)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function validateData(obj) {\r\n\r\n    let result = []\r\n    if (!isEmpty(obj[TRAILER_PLATE]) && obj[TRAILER_PLATE].length < 7) {\r\n      result.push(\"Placa do reboque está inválida\\n\")\r\n    }\r\n  \r\n    if (!isEmpty(obj[REPORT_CPF_DRIVER]) && !validateCPF(cleanText(obj[REPORT_CPF_DRIVER]))) {\r\n      result.push(\"CPF do condutor está inválido\\n\")\r\n    }\r\n  \r\n    if (!isEmpty(obj[REPORT_BOOKED_CPF]) && !validateCPF(cleanText(obj[REPORT_BOOKED_CPF]))) {\r\n      result.push(\"CPF do autuado está inválido\\n\")\r\n    }\r\n  \r\n    if (!isEmpty(obj[REPORT_BOOKED_CNPJ]) && !validateCNPJ(cleanText(obj[REPORT_BOOKED_CNPJ]))) {\r\n      result.push(\"CNPJ do autuado está inválido\\n\")\r\n    }\r\n\r\n    // if (!isEmpty(obj.report_ai) && !validateCNPJ(cleanText(obj.report_ai))) {\r\n  //   result.push(\"Nº do AI está inválido\\n\")\r\n  // }\r\n\r\n    if (obj[FISCAL_ACTION_DATE][0] &&  obj[FISCAL_ACTION_DATE][0]){\r\n      const maxDate = new Date()\r\n      maxDate.setHours(0);\r\n      maxDate.setMinutes(1);\r\n      maxDate.setSeconds(0);\r\n\r\n      const date = new Date(`${obj[FISCAL_ACTION_DATE][0]}T${obj[FISCAL_ACTION_DATE][1]}`)\r\n      date.setHours(0);\r\n      date.setMinutes(0);\r\n      date.setSeconds(0);\r\n\r\n    if (date > maxDate) {\r\n      result.push(\"Data da Ação Fiscal não pode ser superior à data atual\\n\")\r\n    }\r\n\r\n  }\r\n\r\n  return result\r\n\r\n}\r\n\r\nexport function getNotificationMostRecentStatus(id, fiscal_notification_status, warningsViewed) {\r\n  let key = id.toString()\r\n  if (fiscal_notification_status > NOTIFICATION_STATUS_ENUM.VISUALIZADA) {\r\n    return getNotificationStatusLabel(fiscal_notification_status)\r\n  } else if (Object.keys(warningsViewed).includes(key)) {\r\n    return getNotificationStatusLabel(NOTIFICATION_STATUS_ENUM.VISUALIZADA)\r\n  } else {\r\n    return getNotificationStatusLabel(fiscal_notification_status)\r\n  }\r\n}\r\n\r\n  export function alowPropagateNotificationData(notification){\r\n    \r\n    //As propagação de um estado só deve acontecer caso a configuração que gerou o alerta estiver relacionada a uma condição de placa e se ela tiver um parent_id configurado. \r\n    // Caso contrário, deve não deve haver propagação\r\n    let vehiclePlate = notification[VEHICLE_PLATE]\r\n    if (!vehiclePlate){\r\n      return false\r\n    }\r\n\r\n    if (isEmpty(notification[FISCAL_NOTIFICATION_PARENT_ID])){\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\nexport function compareWithOldValues(formData, oldFormData) {\r\n\r\n    if (formData[FISCAL_ACTION_REPORT] === oldFormData[FISCAL_ACTION_REPORT] &&\r\n      compareArray(formData[FISCAL_ACTION_DATE], oldFormData[FISCAL_ACTION_DATE]) &&\r\n      formData[MONITORING_USER_ID] === oldFormData[MONITORING_USER_ID] &&\r\n      oldFormData[HOMOLOGATION_AUDITOR] === formData[HOMOLOGATION_AUDITOR] &&\r\n      compareArray(oldFormData[FISCAL_ACTION_AUDITORS], formData[FISCAL_ACTION_AUDITORS]) &&\r\n      formData[REPORT_AI] === oldFormData[REPORT_AI] &&\r\n      formData[REPORT_DAR] === oldFormData[REPORT_PRODUCT_NAME] &&\r\n      formData[REPORT_REVENUE_CODE] === oldFormData[REPORT_REVENUE_CODE] &&\r\n      formData[REPORT_PENALTY_VALUE] === oldFormData[REPORT_PENALTY_VALUE] &&\r\n      formData[TRAILER_PLATE] === oldFormData[TRAILER_PLATE] &&\r\n      formData[REPORT_CPF_DRIVER] === oldFormData[REPORT_CPF_DRIVER] &&\r\n      formData[REPORT_BOOKED_IE] === oldFormData[REPORT_BOOKED_IE] &&\r\n      formData[REPORT_BOOKED_CPF] === oldFormData[REPORT_BOOKED_CPF] &&\r\n      formData[REPORT_BOOKED_CNPJ] === oldFormData[REPORT_BOOKED_CNPJ] &&\r\n      formData[REPORT_LATITUDE] === oldFormData[REPORT_LATITUDE] &&\r\n      formData[REPORT_LONGITUDE] === oldFormData[REPORT_LONGITUDE] &&\r\n      formData[REPORT_PRODUCT_NAME] === oldFormData[REPORT_PRODUCT_NAME]) {\r\n      return true\r\n    }\r\n\r\n  return false\r\n}\r\n\r\n  export function hasEmptyValues(obj) {\r\n    let bookedData = isEmpty(obj[REPORT_AI]) || isEmpty(obj[REPORT_PRODUCT_NAME]) ||\r\n      isEmpty(obj[REPORT_REVENUE_CODE]) || isEmpty(obj[REPORT_PENALTY_VALUE]) ||\r\n      isEmpty(obj[VEHICLE_PLATE]) || isEmpty(obj[TRAILER_PLATE]) ||\r\n      isEmpty(obj[REPORT_CPF_DRIVER]) || isEmpty(obj[REPORT_BOOKED_IE]) ||\r\n      (isEmpty(obj[REPORT_BOOKED_CPF]) && isEmpty(obj[REPORT_BOOKED_CNPJ])) || //este aqui é um campo opcional ou preenche cpf ou cnpj\r\n      isEmpty(obj[REPORT_LATITUDE]) || isEmpty(obj[REPORT_LONGITUDE]) ||\r\n      isEmpty(obj[REPORT_PRODUCT_NAME]) ||\r\n      isEmpty(obj[HOMOLOGATION_AUDITOR])\r\n\r\n    let hasBookedData = obj[REPORT_ENABLED]\r\n\r\n    if (isEmpty(obj[FISCAL_ACTION_REPORT]) || isEmpty(obj[FISCAL_ACTION_DATE]) ||\r\n      isEmpty(obj[FISCAL_ACTION_AUDITORS]) || isEmpty(obj[MONITORING_USER_ID] ||\r\n        (hasBookedData && bookedData))\r\n    )\r\n      return true\r\n\r\n  return false\r\n}"]},"metadata":{},"sourceType":"module"}