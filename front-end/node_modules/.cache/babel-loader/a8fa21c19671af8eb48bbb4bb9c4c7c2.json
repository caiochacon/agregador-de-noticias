{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\WarningDfeModal\\\\WarningDfeModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, ModalBody, ModalHeader, Spinner } from 'reactstrap';\nimport { isEmpty } from \"common/utils/collections\";\nimport readDfeData from \"axios/ReadDfeData\";\nimport ReadMdfeData from \"axios/ReadMdfeData\";\nimport useAsync from \"common/hooks/useAsync\";\nimport { Notification } from \"common/model/Notification\";\nimport MdfeTable from \"components/tables/MdfeTable\";\nimport BlankRowTable from \"components/tables/BlankRowTable\";\nimport NfeTable from \"components/tables/NfeTable\";\nimport CteTable from \"components/tables/CteTable\";\nimport CTE from \"common/model/Cte\";\nimport { CTE_LOWER_VALUE } from \"common/model/WarningConfig\";\nimport { NFE_LOWER_VALUE } from \"common/model/WarningConfig\";\nimport { NFE_TOTAL_VALUE } from \"common/model/Nfe\";\nimport { NFE_EMIT_CPF } from \"common/model/Nfe\";\nimport { NFE_EMIT_CNPJ } from \"common/model/Nfe\";\nimport { NFE_DEST_CNPJ } from \"common/model/Nfe\";\nimport { NFE_DEST_CPF } from \"common/model/Nfe\";\nimport { NFE_PLATE } from \"common/model/Nfe\";\nimport { NFE_TRAILER1 } from \"common/model/Nfe\";\nimport { NFE_TRAILER3 } from \"common/model/Nfe\";\nimport { NFE_TRAILER4 } from \"common/model/Nfe\";\nimport { NFE_TRAILER5 } from \"common/model/Nfe\";\nimport { NFE_TRAILER2 } from \"common/model/Nfe\";\nimport { VEHICLE_PLATE } from \"common/model/Notification\";\nimport { MDFE_DOC } from \"common/model/Mdfe\";\nimport { ATF_LINK } from \"common/enviroment\";\nimport { NFE_KEY } from \"common/model/Nfe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WarningDfeModal(_ref) {\n  _s();\n\n  let {\n    show,\n    toggle,\n    data,\n    fetchData\n  } = _ref;\n  const {\n    readDfeDataRequest\n  } = readDfeData();\n  const {\n    readMdfeDataRequest\n  } = ReadMdfeData();\n  const [nfeData, setNfeData] = React.useState(null);\n  const [cteData, setCteData] = React.useState(null);\n  const [mdfeData, setMdfeData] = React.useState(null);\n  const [relevantNfes, setRelevantNfes] = React.useState(null);\n  const [relevantCtes, setRelevantCtes] = React.useState(null);\n  const notificationObj = new Notification(data);\n  const eventObj = notificationObj.getEvent();\n  const mdfeOfInterest = notificationObj.isMdfeNotification() ? notificationObj.getMdfeKey() : null;\n  const nfeOfInterest = notificationObj.isNfeNotification() ? notificationObj.getNfeKey() : null;\n  const cteOfInterest = notificationObj.isCteNotification() ? notificationObj.getCteKey() : null;\n  const {\n    loading,\n    error,\n    value\n  } = useAsync(async () => {\n    if (isEmpty(data)) {\n      return;\n    }\n\n    let res = await readDfeDataRequest(eventObj.getEventId());\n\n    if (!isEmpty(res) && Array.isArray(res)) {\n      setMdfeData(res[0]);\n      setNfeData(res[1]);\n    }\n\n    if (notificationObj.isMdfeNotification()) {\n      res = await readMdfeDataRequest(notificationObj.getMdfeKey());\n\n      if (!isEmpty(res) && Array.isArray(res)) {\n        setRelevantNfes(mountNfeData(res));\n      }\n    }\n  }, [fetchData]);\n\n  function mountFilter(dict, label, value, column, filterType, upperValue) {\n    if (value && value !== 0) {\n      dict[label] = {\n        'value': value,\n        'upperValue': upperValue,\n        'filterType': filterType,\n        'column': column\n      };\n    }\n  }\n\n  function evalFilters(filters, nfe) {\n    let result = [];\n    Object.values(filters).forEach(_ref2 => {\n      let {\n        value,\n        upperValue,\n        column\n      } = _ref2;\n\n      //È um filtro de placa\n      if (data['filterType'] === 1) {\n        if (Array.isArray(column)) {\n          let plates = [value];\n\n          if (Array.isArray(value)) {\n            plates = value;\n          }\n\n          let plate_result = false;\n\n          for (const plate_value of plates) {\n            let plate = [nfe[NFE_PLATE], nfe[NFE_TRAILER1], nfe[NFE_TRAILER2], nfe[NFE_TRAILER3], nfe[NFE_TRAILER4], nfe[NFE_TRAILER5]].includes(plate_value);\n            plate_result = plate_result || plate;\n          }\n\n          result.push(plate_result);\n        } else {\n          result.push(value === nfe[column]);\n        } //È um filtro greater than\n\n      } else if (data['filterType'] === 2) {\n        result.push(value <= nfe[column]); //È um filtro de intervalo\n      } else if (data['filterType'] === 3) {\n        result.push(value <= nfe[column] && nfe[column] <= upperValue);\n      }\n    });\n    return !isEmpty(result) && result.every(v => v === true);\n  }\n\n  function mountNfeData(mdfeCompleteData) {\n    let result = [];\n    let filters = {};\n    let warningConfigObj = notificationObj.getWarningConfig();\n\n    if (isEmpty(warningConfigObj.getNfeUpperValue())) {\n      mountFilter(filters, NFE_LOWER_VALUE, warningConfigObj.getNfeLowerValue(), NFE_TOTAL_VALUE, 2);\n    } else {\n      mountFilter(filters, NFE_LOWER_VALUE, warningConfigObj.getNfeLowerValue(), NFE_TOTAL_VALUE, 3, warningConfigObj.getNfeUpperValue());\n    }\n\n    mountFilter(filters, NFE_EMIT_CPF, warningConfigObj.getCpfNfeIssuer(), NFE_EMIT_CPF, 1);\n    mountFilter(filters, NFE_EMIT_CNPJ, warningConfigObj.getCnpjNfeIssuer(), NFE_EMIT_CNPJ, 1);\n    mountFilter(filters, NFE_DEST_CNPJ, warningConfigObj.getCnpjRecipient(), NFE_DEST_CNPJ, 1);\n    mountFilter(filters, NFE_DEST_CPF, warningConfigObj.getCpfRecipient(), NFE_DEST_CPF, 1);\n    mountFilter(filters, VEHICLE_PLATE, warningConfigObj.getPlate(), [NFE_PLATE, NFE_TRAILER1, NFE_TRAILER2, NFE_TRAILER3, NFE_TRAILER4, NFE_TRAILER5], 1);\n\n    if (!mdfeCompleteData[0] || !mdfeCompleteData[0][MDFE_DOC]) {\n      return result;\n    }\n\n    for (let doc of mdfeCompleteData[0][MDFE_DOC]) {\n      let nfeData = doc['fatonfe'];\n\n      if (!nfeData || !nfeData[NFE_KEY]) {\n        continue; //pode ser uma cte, que ainda não é processada pelo sistema. Por isso, vem nula. \n      }\n\n      if (evalFilters(filters, nfeData)) {\n        result.push(nfeData);\n      }\n    }\n\n    return result;\n  }\n\n  function mountCteData(mdfeCompleteData) {\n    if (!mdfeCompleteData[0] || !mdfeCompleteData[0][MDFE_DOC]) return [];\n    let result = [];\n    let filters = {};\n    const warningConfigObj = notificationObj.getWarningConfig();\n    if (isEmpty(warningConfigObj.getNfeUpperValue())) mountFilter(filters, CTE_LOWER_VALUE, warningConfigObj.getCteLowerValue(), CTE.VALUE, 2);else mountFilter(filters, CTE_LOWER_VALUE, warningConfigObj.getCteLowerValue(), CTE.VALUE, 3, warningConfigObj.getCteUpperValue());\n    mountFilter(filters, CTE.EMIT_CPF, warningConfigObj.getCpfCteIssuer(), CTE.EMIT_CPF, 1);\n    mountFilter(filters, CTE.EMIT_CNPJ, warningConfigObj.getCnpjCteIssuer(), CTE.EMIT_CNPJ, 1);\n    mountFilter(filters, CTE.DEST_CNPJ, warningConfigObj.getCnpjRecipient(), CTE.DEST_CNPJ, 1);\n    mountFilter(filters, CTE.DEST_CPF, warningConfigObj.getCpfRecipient(), CTE.DEST_CPF, 1);\n\n    for (let doc of mdfeCompleteData[0][MDFE_DOC]) {\n      let currentCteData = doc['fatocte'];\n      if (!currentCteData || !currentCteData[CTE.KEY]) continue;\n\n      if (evalFilters(filters, currentCteData)) {\n        result.push(currentCteData);\n      }\n    }\n\n    return result;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: show,\n    toggle: toggle,\n    size: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Lista de DFes Relacionadas ao Evento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"info\",\n        style: {\n          width: \"4.0rem\",\n          height: \"4.0rem\",\n          margin: '4.0rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 20\n      }, this) : \"\", error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        color: \"info\",\n        children: \"N\\xE3o foi poss\\xEDvel recuperar os dados de DFE. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 18\n      }, this) : \"\", !isEmpty(value) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: \"red\"\n          },\n          children: [\"Necess\\xE1rio estar logado no\", /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: '#2322c8'\n            },\n            href: ATF_LINK,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"ATF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), \"para acessar link\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [!isEmpty(mdfeData) && /*#__PURE__*/_jsxDEV(MdfeTable, {\n          data: mdfeData,\n          headerText: \"Lista de MDFes no Ve\\xEDculo\",\n          mdfeOfInterest: mdfeOfInterest,\n          showBell: true,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 34\n        }, this), !isEmpty(relevantNfes) && /*#__PURE__*/_jsxDEV(BlankRowTable, {\n          margin: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 38\n        }, this), !isEmpty(relevantNfes) && /*#__PURE__*/_jsxDEV(NfeTable, {\n          data: relevantNfes,\n          headerText: \"Lista de NFEs referenciadas no MDFE \".concat(mdfeOfInterest, \" relevantes para o alerta\"),\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 38\n        }, this), !isEmpty(relevantCtes) && /*#__PURE__*/_jsxDEV(CteTable, {\n          data: relevantCtes,\n          headerText: \"Lista de CTEs referenciadas no MDFE \".concat(mdfeOfInterest, \" relevantes para o alerta\"),\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 38\n        }, this), !isEmpty(mdfeData) && !isEmpty(nfeData) && /*#__PURE__*/_jsxDEV(BlankRowTable, {\n          margin: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 55\n        }, this), !isEmpty(nfeData) && /*#__PURE__*/_jsxDEV(NfeTable, {\n          data: nfeData,\n          headerText: \"Lista de NFEs Avulsas no Ve\\xEDculo\",\n          nfeOfInterest: nfeOfInterest,\n          showBell: true,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }, this), !isEmpty(cteData) && /*#__PURE__*/_jsxDEV(CteTable, {\n          data: cteData,\n          headerText: \"Lista de CTEs Avulsas no Ve\\xEDculo\",\n          nfeOfInterest: cteOfInterest,\n          showBell: true,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WarningDfeModal, \"S376n7NASWHBDWWQeRNEkLlD5tI=\", false, function () {\n  return [useAsync];\n});\n\n_c = WarningDfeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WarningDfeModal\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/modals/WarningDfeModal/WarningDfeModal.js"],"names":["React","Modal","ModalBody","ModalHeader","Spinner","isEmpty","readDfeData","ReadMdfeData","useAsync","Notification","MdfeTable","BlankRowTable","NfeTable","CteTable","CTE","CTE_LOWER_VALUE","NFE_LOWER_VALUE","NFE_TOTAL_VALUE","NFE_EMIT_CPF","NFE_EMIT_CNPJ","NFE_DEST_CNPJ","NFE_DEST_CPF","NFE_PLATE","NFE_TRAILER1","NFE_TRAILER3","NFE_TRAILER4","NFE_TRAILER5","NFE_TRAILER2","VEHICLE_PLATE","MDFE_DOC","ATF_LINK","NFE_KEY","WarningDfeModal","show","toggle","data","fetchData","readDfeDataRequest","readMdfeDataRequest","nfeData","setNfeData","useState","cteData","setCteData","mdfeData","setMdfeData","relevantNfes","setRelevantNfes","relevantCtes","setRelevantCtes","notificationObj","eventObj","getEvent","mdfeOfInterest","isMdfeNotification","getMdfeKey","nfeOfInterest","isNfeNotification","getNfeKey","cteOfInterest","isCteNotification","getCteKey","loading","error","value","res","getEventId","Array","isArray","mountNfeData","mountFilter","dict","label","column","filterType","upperValue","evalFilters","filters","nfe","result","Object","values","forEach","plates","plate_result","plate_value","plate","includes","push","every","v","mdfeCompleteData","warningConfigObj","getWarningConfig","getNfeUpperValue","getNfeLowerValue","getCpfNfeIssuer","getCnpjNfeIssuer","getCnpjRecipient","getCpfRecipient","getPlate","doc","mountCteData","getCteLowerValue","VALUE","getCteUpperValue","EMIT_CPF","getCpfCteIssuer","EMIT_CNPJ","getCnpjCteIssuer","DEST_CNPJ","DEST_CPF","currentCteData","KEY","width","height","margin","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Spinner,\r\n\r\n} from 'reactstrap';\r\n\r\n\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport readDfeData from \"axios/ReadDfeData\";\r\nimport ReadMdfeData from \"axios/ReadMdfeData\";\r\nimport useAsync from \"common/hooks/useAsync\";\r\nimport { Notification } from \"common/model/Notification\";\r\nimport MdfeTable from \"components/tables/MdfeTable\";\r\nimport BlankRowTable from \"components/tables/BlankRowTable\";\r\nimport NfeTable from \"components/tables/NfeTable\";\r\nimport CteTable from \"components/tables/CteTable\";\r\nimport CTE from \"common/model/Cte\";\r\nimport { CTE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { NFE_LOWER_VALUE } from \"common/model/WarningConfig\";\r\nimport { NFE_TOTAL_VALUE } from \"common/model/Nfe\";\r\nimport { NFE_EMIT_CPF } from \"common/model/Nfe\";\r\nimport { NFE_EMIT_CNPJ } from \"common/model/Nfe\";\r\nimport { NFE_DEST_CNPJ } from \"common/model/Nfe\";\r\nimport { NFE_DEST_CPF } from \"common/model/Nfe\";\r\nimport { NFE_PLATE } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER1 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER3 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER4 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER5 } from \"common/model/Nfe\";\r\nimport { NFE_TRAILER2 } from \"common/model/Nfe\";\r\nimport { VEHICLE_PLATE } from \"common/model/Notification\";\r\nimport { MDFE_DOC } from \"common/model/Mdfe\";\r\nimport { ATF_LINK } from \"common/enviroment\";\r\nimport { NFE_KEY } from \"common/model/Nfe\";\r\n\r\n\r\n\r\nexport default function WarningDfeModal({ show, toggle, data, fetchData }) {\r\n  const { readDfeDataRequest } = readDfeData()\r\n\r\n  const { readMdfeDataRequest } = ReadMdfeData()\r\n\r\n  const [nfeData, setNfeData] = React.useState(null)\r\n  const [cteData, setCteData] = React.useState(null)\r\n  const [mdfeData, setMdfeData] = React.useState(null)\r\n  const [relevantNfes, setRelevantNfes] = React.useState(null)\r\n  const [relevantCtes, setRelevantCtes] = React.useState(null)\r\n\r\n  const notificationObj = new Notification(data)\r\n  const eventObj = notificationObj.getEvent()\r\n\r\n  const mdfeOfInterest = notificationObj.isMdfeNotification() ? notificationObj.getMdfeKey() : null\r\n  const nfeOfInterest = notificationObj.isNfeNotification() ? notificationObj.getNfeKey() : null\r\n  const cteOfInterest = notificationObj.isCteNotification() ? notificationObj.getCteKey() : null\r\n\r\n\r\n  const { loading, error, value } = useAsync(async () => {\r\n    if (isEmpty(data)) {\r\n      return\r\n    }\r\n\r\n    let res = await readDfeDataRequest(eventObj.getEventId())\r\n    if (!isEmpty(res) && Array.isArray(res)) {\r\n      setMdfeData(res[0])\r\n      setNfeData(res[1])\r\n    }\r\n\r\n    if (notificationObj.isMdfeNotification()) {\r\n      res = await readMdfeDataRequest(notificationObj.getMdfeKey())\r\n      if (!isEmpty(res) && Array.isArray(res)) {\r\n        setRelevantNfes(mountNfeData(res))\r\n      }\r\n    }\r\n\r\n  }, [fetchData]);\r\n\r\n\r\n  function mountFilter(dict, label, value, column, filterType, upperValue) {\r\n    if (value && value !== 0) {\r\n      dict[label] = { 'value': value, 'upperValue': upperValue, 'filterType': filterType, 'column': column }\r\n    }\r\n  }\r\n\r\n  function evalFilters(filters, nfe) {\r\n    let result = []\r\n\r\n    Object.values(filters).forEach(({ value, upperValue, column }) => {\r\n      //È um filtro de placa\r\n      if (data['filterType'] === 1) {\r\n        if (Array.isArray(column)) {\r\n\r\n          let plates = [value]\r\n          if (Array.isArray(value)) {\r\n            plates = value\r\n          }\r\n\r\n          let plate_result = false\r\n          for (const plate_value of plates) {\r\n            let plate = [nfe[NFE_PLATE], nfe[NFE_TRAILER1], nfe[NFE_TRAILER2], nfe[NFE_TRAILER3], nfe[NFE_TRAILER4], nfe[NFE_TRAILER5]].includes(plate_value)\r\n            plate_result = plate_result || plate\r\n          }\r\n\r\n          result.push(plate_result)\r\n        } else {\r\n          result.push(value === nfe[column])\r\n        }\r\n        //È um filtro greater than\r\n      } else if (data['filterType'] === 2) {\r\n        result.push(value <= nfe[column])\r\n        //È um filtro de intervalo\r\n      } else if (data['filterType'] === 3) {\r\n        result.push(value <= nfe[column] && nfe[column] <= upperValue)\r\n      }\r\n    })\r\n\r\n    return !isEmpty(result) && result.every(v => v === true)\r\n  }\r\n\r\n  function mountNfeData(mdfeCompleteData) {\r\n    let result = []\r\n    let filters = {}\r\n    let warningConfigObj = notificationObj.getWarningConfig()\r\n    if (isEmpty(warningConfigObj.getNfeUpperValue())) {\r\n      mountFilter(filters, NFE_LOWER_VALUE, warningConfigObj.getNfeLowerValue(), NFE_TOTAL_VALUE, 2)\r\n    } else {\r\n      mountFilter(filters, NFE_LOWER_VALUE, warningConfigObj.getNfeLowerValue(), NFE_TOTAL_VALUE, 3, warningConfigObj.getNfeUpperValue())\r\n    }\r\n\r\n    mountFilter(filters, NFE_EMIT_CPF, warningConfigObj.getCpfNfeIssuer(), NFE_EMIT_CPF, 1)\r\n    mountFilter(filters, NFE_EMIT_CNPJ, warningConfigObj.getCnpjNfeIssuer(), NFE_EMIT_CNPJ, 1)\r\n    mountFilter(filters, NFE_DEST_CNPJ, warningConfigObj.getCnpjRecipient(), NFE_DEST_CNPJ, 1)\r\n    mountFilter(filters, NFE_DEST_CPF, warningConfigObj.getCpfRecipient(), NFE_DEST_CPF, 1)\r\n    mountFilter(filters, VEHICLE_PLATE, warningConfigObj.getPlate(), [NFE_PLATE, NFE_TRAILER1, NFE_TRAILER2,\r\n      NFE_TRAILER3, NFE_TRAILER4, NFE_TRAILER5], 1)\r\n\r\n    if (!mdfeCompleteData[0] || !mdfeCompleteData[0][MDFE_DOC]) {\r\n      return result\r\n    }\r\n\r\n    for (let doc of mdfeCompleteData[0][MDFE_DOC]) {\r\n      let nfeData = doc['fatonfe']\r\n      if (!nfeData || !nfeData[NFE_KEY]) {\r\n        continue //pode ser uma cte, que ainda não é processada pelo sistema. Por isso, vem nula. \r\n      }\r\n      if (evalFilters(filters, nfeData)) {\r\n        result.push(nfeData)\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  function mountCteData(mdfeCompleteData) {\r\n    if (!mdfeCompleteData[0] || !mdfeCompleteData[0][MDFE_DOC])\r\n      return []\r\n\r\n    let result = []\r\n    let filters = {}\r\n    const warningConfigObj = notificationObj.getWarningConfig()\r\n\r\n    if (isEmpty(warningConfigObj.getNfeUpperValue()))\r\n      mountFilter(filters, CTE_LOWER_VALUE, warningConfigObj.getCteLowerValue(), CTE.VALUE, 2)\r\n    else\r\n      mountFilter(filters, CTE_LOWER_VALUE, warningConfigObj.getCteLowerValue(), CTE.VALUE, 3, warningConfigObj.getCteUpperValue())\r\n\r\n    mountFilter(filters, CTE.EMIT_CPF, warningConfigObj.getCpfCteIssuer(), CTE.EMIT_CPF, 1)\r\n    mountFilter(filters, CTE.EMIT_CNPJ, warningConfigObj.getCnpjCteIssuer(), CTE.EMIT_CNPJ, 1)\r\n    mountFilter(filters, CTE.DEST_CNPJ, warningConfigObj.getCnpjRecipient(), CTE.DEST_CNPJ, 1)\r\n    mountFilter(filters, CTE.DEST_CPF, warningConfigObj.getCpfRecipient(), CTE.DEST_CPF, 1)\r\n\r\n    for (let doc of mdfeCompleteData[0][MDFE_DOC]) {\r\n      let currentCteData = doc['fatocte']\r\n      if (!currentCteData || !currentCteData[CTE.KEY])\r\n        continue\r\n      if (evalFilters(filters, currentCteData)) {\r\n        result.push(currentCteData)\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal isOpen={show} toggle={toggle} size=\"xl\">\r\n      <ModalHeader toggle={toggle}>Lista de DFes Relacionadas ao Evento</ModalHeader>\r\n\r\n      <ModalBody>\r\n        {loading ? <Spinner color=\"info\" style={{ width: \"4.0rem\", height: \"4.0rem\", margin: '4.0rem' }} /> : \"\"}\r\n        {error ? <h1 color=\"info\" >Não foi possível recuperar os dados de DFE. </h1> : \"\"}\r\n        {!isEmpty(value) && (\r\n          <>\r\n            <br />\r\n            <small style={{ color: \"red\" }}>\r\n              Necessário estar logado no\r\n              <a\r\n                style={{ color: '#2322c8' }}\r\n                href={ATF_LINK}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                ATF\r\n              </a>\r\n              para acessar link\r\n            </small>\r\n          </>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {!isEmpty(mdfeData) && <MdfeTable data={mdfeData} headerText=\"Lista de MDFes no Veículo\" mdfeOfInterest={mdfeOfInterest} showBell loading={loading} />}\r\n          {!isEmpty(relevantNfes) && <BlankRowTable margin={20} />}\r\n          {!isEmpty(relevantNfes) && <NfeTable data={relevantNfes} headerText={`Lista de NFEs referenciadas no MDFE ${mdfeOfInterest} relevantes para o alerta`} loading={loading} />}\r\n          {!isEmpty(relevantCtes) && <CteTable data={relevantCtes} headerText={`Lista de CTEs referenciadas no MDFE ${mdfeOfInterest} relevantes para o alerta`} loading={loading} />}\r\n          {!isEmpty(mdfeData) && !isEmpty(nfeData) && <BlankRowTable margin={20} />}\r\n          {!isEmpty(nfeData) && <NfeTable data={nfeData} headerText=\"Lista de NFEs Avulsas no Veículo\" nfeOfInterest={nfeOfInterest} showBell loading={loading} />}\r\n          {!isEmpty(cteData) && <CteTable data={cteData} headerText=\"Lista de CTEs Avulsas no Veículo\" nfeOfInterest={cteOfInterest} showBell loading={loading} />}\r\n        </div>\r\n\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}