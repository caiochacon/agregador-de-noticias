{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Warnings\\\\panels\\\\WarningConfigPanel.js\";\nimport React from \"react\";\nimport { Input, Col, Label, Form, FormGroup } from 'reactstrap';\nimport { isEmpty } from \"common/utils/collections\";\nimport { getConfigStatusLabel } from \"common/enumerators/StatusEnum\";\nimport { getNowDateTimeString } from \"common/utils/validate\";\nimport { hourInput } from \"components/tags/filterPresets\";\nimport { isAdmin } from \"common/SessionUtils\";\nimport { isSubgerente } from \"common/SessionUtils\";\nimport { isMonitoramento } from \"common/SessionUtils\";\nimport { CONFIG_TYPE_CONDITIONS, SEVERITY_CONDITIONS } from \"common/rules/WarningConfigRules\";\nimport GroupsInput from \"components/group/GroupsInput\";\nimport { TAG_INPUT_OPTIONS } from \"../utils/filters\";\nimport WarningTagsInput from \"components/tags/WarningTagsInput\";\nimport { maxClosingDate } from \"common/rules/WarningConfigRules\";\nimport { compareGroups } from \"common/rules/WarningConfigRules\";\nimport { FISCAL_ACTION } from \"common/model/WarningConfig\";\nimport { SEVERITY } from \"common/model/WarningConfig\";\nimport { VISIBILITY_GROUP } from \"common/model/WarningConfig\";\nimport { TYPE } from \"common/model/WarningConfig\";\nimport { CLOSING_DATE } from \"common/model/WarningConfig\";\nimport { DESCRIPTION } from \"common/model/WarningConfig\";\nimport { NAME } from \"common/model/WarningConfig\";\nimport { ID_CONFIG } from \"common/model/WarningConfig\"; //TODO remover estas referencias a groupsConditons e groupsValues. Isso deve vir do context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WarningConfigPanel(_ref) {\n  let {\n    data,\n    setData,\n    oldData,\n    formTags,\n    setFormTags,\n    readOnly,\n    invalid,\n    groupsConditions,\n    groupsValues\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: \"5px 0px 10px 0px\"\n      },\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleEmail\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"N\\xBA Alerta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: data[ID_CONFIG],\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"input\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: getConfigStatusLabel(data),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleEmail\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Alerta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: data[NAME],\n            readOnly: readOnly,\n            maxLength: \"50\",\n            invalid: invalid && (data[NAME].trim() === \"\" || data[NAME] === oldData[NAME]),\n            onChange: e => setData({ ...data,\n              [NAME]: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"exampleEmail\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Descri\\xE7\\xE3o do Alerta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            readOnly: readOnly,\n            rows: \"4\",\n            maxLength: \"1024\",\n            value: data[DESCRIPTION],\n            invalid: invalid && (data[DESCRIPTION].trim() === \"\" || data[DESCRIPTION] === oldData[DESCRIPTION]),\n            onChange: e => setData({ ...data,\n              [DESCRIPTION]: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"input\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Data de Fechamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            value: data[CLOSING_DATE][0],\n            min: getNowDateTimeString(),\n            max: maxClosingDate(),\n            step: \"1\",\n            readOnly: readOnly,\n            invalid: invalid && (data[CLOSING_DATE][0] === \"\" || data[CLOSING_DATE][0] === oldData[CLOSING_DATE][0]),\n            onChange: e => {\n              setData({ ...data,\n                [CLOSING_DATE]: [e.target.value, data[CLOSING_DATE][1]]\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"input\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Hor\\xE1rio de Fechamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: data[CLOSING_DATE][1],\n            placeholder: hourInput.placeholder,\n            min: getNowDateTimeString(),\n            step: \"1\",\n            readOnly: readOnly,\n            invalid: invalid && (data[CLOSING_DATE][1] === \"\" || data[CLOSING_DATE][1] === oldData[CLOSING_DATE][1]),\n            onChange: hourInput.onChange(data[CLOSING_DATE][1], value => setData({ ...data,\n              [CLOSING_DATE]: [data[CLOSING_DATE][0], value]\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), (isAdmin() || isSubgerente() || isMonitoramento()) && /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"input\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Tipo de Configura\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            value: data[TYPE],\n            readOnly: readOnly,\n            disabled: readOnly,\n            invalid: invalid && (data[TYPE] === \"\" || data[TYPE] === oldData[TYPE]),\n            onChange: e => setData({ ...data,\n              [TYPE]: e.target.value\n            }),\n            children: Object.entries(CONFIG_TYPE_CONDITIONS).map(key_value => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key_value[1],\n                children: key_value[0]\n              }, key_value[1], false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(GroupsInput, {\n        readOnly: readOnly,\n        disabled: readOnly,\n        invalid: invalid && (isEmpty(data[VISIBILITY_GROUP]) || compareGroups(data, oldData)),\n        data: data,\n        fieldName: VISIBILITY_GROUP,\n        setData: setData,\n        conditions: groupsConditions,\n        groups: groupsValues,\n        first: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"input\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Condi\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WarningTagsInput, {\n          tags: formTags,\n          setTags: setFormTags,\n          columns: TAG_INPUT_OPTIONS,\n          invalid: invalid,\n          readOnly: readOnly,\n          disabled: readOnly,\n          size: \"lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"input\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Prioridade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          readOnly: readOnly,\n          disabled: readOnly,\n          invalid: invalid && (data[SEVERITY] === \"\" || data[SEVERITY] === oldData[SEVERITY]),\n          value: data[SEVERITY],\n          onChange: e => {\n            setData({ ...data,\n              [SEVERITY]: e.target.value\n            });\n          },\n          children: Object.entries(SEVERITY_CONDITIONS).map(key_value => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key_value[1],\n              children: key_value[0]\n            }, key_value[1], false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"exampleEmail\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"A\\xE7\\xE3o Fiscal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            value: data[FISCAL_ACTION],\n            readOnly: readOnly,\n            rows: \"4\",\n            maxLength: \"2048\",\n            invalid: invalid && (data[FISCAL_ACTION].trim() === \"\" || data[FISCAL_ACTION] === oldData[FISCAL_ACTION]),\n            onChange: e => {\n              setData({ ...data,\n                [FISCAL_ACTION]: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = WarningConfigPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"WarningConfigPanel\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/views/Warnings/panels/WarningConfigPanel.js"],"names":["React","Input","Col","Label","Form","FormGroup","isEmpty","getConfigStatusLabel","getNowDateTimeString","hourInput","isAdmin","isSubgerente","isMonitoramento","CONFIG_TYPE_CONDITIONS","SEVERITY_CONDITIONS","GroupsInput","TAG_INPUT_OPTIONS","WarningTagsInput","maxClosingDate","compareGroups","FISCAL_ACTION","SEVERITY","VISIBILITY_GROUP","TYPE","CLOSING_DATE","DESCRIPTION","NAME","ID_CONFIG","WarningConfigPanel","data","setData","oldData","formTags","setFormTags","readOnly","invalid","groupsConditions","groupsValues","margin","e","preventDefault","trim","target","value","placeholder","onChange","Object","entries","map","key_value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Input,\r\n  Col,\r\n  Label,\r\n  Form,\r\n  FormGroup,\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nimport { isEmpty } from \"common/utils/collections\";\r\nimport { getConfigStatusLabel } from \"common/enumerators/StatusEnum\";\r\nimport { getNowDateTimeString } from \"common/utils/validate\";\r\nimport { hourInput } from \"components/tags/filterPresets\";\r\nimport { isAdmin } from \"common/SessionUtils\";\r\nimport { isSubgerente } from \"common/SessionUtils\";\r\nimport { isMonitoramento } from \"common/SessionUtils\";\r\nimport { CONFIG_TYPE_CONDITIONS, SEVERITY_CONDITIONS } from \"common/rules/WarningConfigRules\";\r\nimport GroupsInput from \"components/group/GroupsInput\";\r\nimport { TAG_INPUT_OPTIONS } from \"../utils/filters\";\r\nimport WarningTagsInput from \"components/tags/WarningTagsInput\";\r\nimport { maxClosingDate } from \"common/rules/WarningConfigRules\";\r\nimport { compareGroups } from \"common/rules/WarningConfigRules\";\r\nimport { FISCAL_ACTION } from \"common/model/WarningConfig\";\r\nimport { SEVERITY } from \"common/model/WarningConfig\";\r\nimport { VISIBILITY_GROUP } from \"common/model/WarningConfig\";\r\nimport { TYPE } from \"common/model/WarningConfig\";\r\nimport { CLOSING_DATE } from \"common/model/WarningConfig\";\r\nimport { DESCRIPTION } from \"common/model/WarningConfig\";\r\nimport { NAME } from \"common/model/WarningConfig\";\r\nimport { ID_CONFIG } from \"common/model/WarningConfig\";\r\n\r\n//TODO remover estas referencias a groupsConditons e groupsValues. Isso deve vir do context\r\nexport default function WarningConfigPanel({ data, setData, oldData, formTags, setFormTags, readOnly, invalid, groupsConditions, groupsValues }) {\r\n\r\n\r\n  return (<><Form style={{ margin: \"5px 0px 10px 0px\" }} onSubmit={e => { e.preventDefault(); }}>\r\n        <FormGroup row>\r\n          <Col sm={4}>\r\n            <Label for=\"exampleEmail\"><b>Nº Alerta</b></Label>\r\n            <Input value={data[ID_CONFIG]} readOnly={true} />\r\n          </Col>\r\n          <Col sm={6}>\r\n            <Label for=\"input\"><b>Status</b></Label>\r\n            <Input value={getConfigStatusLabel(data)} readOnly={true} />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n\r\n        <FormGroup row>\r\n          <Col sm={12}>\r\n            <Label for=\"exampleEmail\"><b>Alerta</b></Label>\r\n            <Input\r\n              value={data[NAME]}\r\n              readOnly={readOnly}\r\n              maxLength=\"50\"\r\n              invalid={invalid && (data[NAME].trim() === \"\" || data[NAME] === oldData[NAME])}\r\n              onChange={e => setData({ ...data, [NAME]: e.target.value })}\r\n            />\r\n          </Col>\r\n\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label for=\"exampleEmail\" sm={6}><b>Descrição do Alerta</b></Label>\r\n          <Col sm={12}>\r\n            <Input\r\n              type=\"textarea\"\r\n              readOnly={readOnly}\r\n              rows=\"4\"\r\n              maxLength=\"1024\"\r\n              value={data[DESCRIPTION]}\r\n              invalid={invalid && (data[DESCRIPTION].trim() === \"\" || data[DESCRIPTION] === oldData[DESCRIPTION])}\r\n              onChange={e => setData({ ...data, [DESCRIPTION]: e.target.value })}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Col>\r\n            <Label for=\"input\"><b>Data de Fechamento</b></Label>\r\n            <Input\r\n              type='date'\r\n              value={data[CLOSING_DATE][0]}\r\n              min={getNowDateTimeString()}\r\n              max={maxClosingDate()}\r\n              step=\"1\"\r\n              \r\n              readOnly={readOnly}\r\n              invalid={invalid && (data[CLOSING_DATE][0] === \"\" || data[CLOSING_DATE][0] === oldData[CLOSING_DATE][0])}\r\n              onChange={e => { setData({ ...data, [CLOSING_DATE]: [e.target.value, data[CLOSING_DATE][1]] }) }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Label for=\"input\"><b>Horário de Fechamento</b></Label>\r\n            <Input\r\n              value={data[CLOSING_DATE][1]}\r\n              placeholder={hourInput.placeholder}\r\n              min={getNowDateTimeString()}\r\n              step=\"1\"\r\n              readOnly={readOnly}\r\n              invalid={invalid && (data[CLOSING_DATE][1] === \"\" || data[CLOSING_DATE][1] === oldData[CLOSING_DATE][1])}\r\n              onChange={hourInput.onChange(data[CLOSING_DATE][1], (value) => setData({ ...data, [CLOSING_DATE]: [data[CLOSING_DATE][0], value] }))}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n\r\n        {(isAdmin() || isSubgerente() || isMonitoramento()) && <FormGroup row>\r\n          <Col sm={12}>\r\n            <Label for=\"input\"><b>Tipo de Configuração</b></Label>\r\n            <Input\r\n              type=\"select\"\r\n              value={data[TYPE]}\r\n              readOnly={readOnly}\r\n              disabled={readOnly}\r\n              invalid={invalid && (data[TYPE] === \"\" || data[TYPE] === oldData[TYPE])}\r\n              onChange={e => setData({ ...data, [TYPE]: e.target.value })}\r\n            >\r\n\r\n              {Object.entries(CONFIG_TYPE_CONDITIONS).map((key_value) => {\r\n                return (\r\n                  <option key={key_value[1]} value={key_value[1]}>{key_value[0]}</option>\r\n                )\r\n              })\r\n              }\r\n            </Input>\r\n          </Col>\r\n        </FormGroup>}\r\n\r\n        <GroupsInput\r\n          readOnly={readOnly}\r\n          disabled={readOnly}\r\n          invalid={invalid && (isEmpty(data[VISIBILITY_GROUP]) || compareGroups(data, oldData)) }\r\n          data={data}\r\n          fieldName={VISIBILITY_GROUP}\r\n          setData={setData}\r\n          conditions={groupsConditions}\r\n          groups={groupsValues}\r\n          first\r\n        />\r\n\r\n        <FormGroup>\r\n          <Label for=\"input\"><b>Condições</b></Label>\r\n          <WarningTagsInput\r\n            tags={formTags}\r\n            setTags={setFormTags}\r\n            columns={TAG_INPUT_OPTIONS}\r\n            invalid={invalid}\r\n            readOnly={readOnly} disabled={readOnly}\r\n            size={\"lg\"}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label for=\"input\"><b>Prioridade</b></Label>\r\n\r\n          <Input\r\n            type=\"select\" readOnly={readOnly} disabled={readOnly}\r\n            invalid={invalid && (data[SEVERITY] === \"\" || data[SEVERITY] === oldData[SEVERITY])}\r\n            value={data[SEVERITY]}\r\n            onChange={e => { setData({ ...data, [SEVERITY]: e.target.value }) }}\r\n          >\r\n            {Object.entries(SEVERITY_CONDITIONS).map((key_value) => {\r\n              return (\r\n                <option value={key_value[1]} key={key_value[1]}>{key_value[0]}</option>\r\n              )\r\n            })\r\n            }\r\n          </Input>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label for=\"exampleEmail\" sm={6}><b>Ação Fiscal</b></Label>\r\n          <Col sm={12}>\r\n            <Input\r\n              type=\"textarea\"\r\n              value={data[FISCAL_ACTION]}\r\n              readOnly={readOnly}\r\n              rows=\"4\"\r\n              maxLength=\"2048\"\r\n              invalid={invalid && (data[FISCAL_ACTION].trim() === \"\" || data[FISCAL_ACTION] === oldData[FISCAL_ACTION])}\r\n              onChange={e => { setData({ ...data, [FISCAL_ACTION]: e.target.value }) }}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <br />\r\n\r\n      </Form>\r\n    </>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}