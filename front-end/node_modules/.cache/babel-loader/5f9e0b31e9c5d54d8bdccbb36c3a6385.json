{"ast":null,"code":"import { isMonitoramento } from \"common/SessionUtils\";\nimport { isExternalUser } from \"common/SessionUtils\";\nimport { getLDAPRoles } from \"common/SessionUtils\";\nimport { isCOE } from \"common/SessionUtils\";\nimport { isSubgerente } from \"common/SessionUtils\";\nimport { isAdmin } from \"common/SessionUtils\";\nimport FILTERS_ENUM from \"common/enumerators/FiltersEnum\";\nimport MASK_ENUM from \"common/enumerators/MaskEnum\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { removeMask } from \"common/utils/mask\";\nimport { createFilters } from \"components/ViewFiltersOptions\";\nimport deepEqual from \"deep-equal\";\nexport const PLACA = \"Placa\";\nexport const CPF_CONDUTOR = \"CPF Condutor (MDFe)\";\nexport const CNPJ_EMITENTE = \"CNPJ Emitente (MDFe)\";\nexport const CPF_EMITENTE = \"CPF Emitente (MDFe)\";\nexport const VALOR_MDFE = \"Valor do Documento (MDFe)\";\nexport const CPF_EMITENTE_NFE = \"CPF Emitente (NFe)\";\nexport const CNPJ_EMITENTE_NFE = \"CNPJ Emitente (NFe)\";\nexport const CPF_DESTINATARIO_NFE = \"CPF Destinatário (NFe)\";\nexport const CNPJ_DESTINATARIO_NFE = \"CNPJ Destinatário (NFe)\";\nexport const VALOR_NFE = \"Valor do Documento (NFE)\";\nexport const VALOR_AGREGADO = \"Valor Agregado de DFes\";\nexport const BLANK_WARNING_CONFIG_FORM_DATA = {\n  id_config: \"\",\n  nome: \"\",\n  criador: \"\",\n  descricao: \"\",\n  visibility_groups: [],\n  procedimentos: \"\",\n  data_fechamento: [\"\", \"\"],\n  severidade: \"\",\n  config_type: \"\",\n  history: \"\",\n  config_pause_timestamp: null\n};\nexport const COMMON_DROPDOWN_FILTERS = [FILTERS_ENUM.cpf_condutor, FILTERS_ENUM.cpf_emitente, FILTERS_ENUM.cnpj_emitente, FILTERS_ENUM.placa, FILTERS_ENUM.valor];\nexport const ADMIN_DROPDOWN_FILTERS = [...COMMON_DROPDOWN_FILTERS, FILTERS_ENUM.cpf_destinatario, FILTERS_ENUM.cpf_emitente_nfe, FILTERS_ENUM.cnpj_destinatario, FILTERS_ENUM.cnpj_emitente_nfe, FILTERS_ENUM.valor_nfe, FILTERS_ENUM.valor_agregado];\nexport const CONFIG_TYPE_CONDITIONS = {\n  \"Selecione uma opção\": \"\",\n  'Todos (Passagens com e sem DFE, Emissões de MDFE e NFE)': 0,\n  'Apenas Passagens sem DFE': 1,\n  'Apenas Passagens com DFE': 5,\n  'Apenas Passagens com DFE e Emissões de MDFE/NFE': 2,\n  'Apenas Emissões de MDFE': 4,\n  'Apenas Emissões de NFE': 3\n};\nexport const CONFIG_TYPE_CONDITIONS_REVERSE = {\n  0: 'Todos (Passagens com e sem DFE, Emissões de MDFE e NFE)',\n  1: 'Apenas Passagens sem DFE',\n  5: 'Apenas Passagens com DFE',\n  2: 'Apenas Passagens com DFE e Emissões de MDFE/NFE',\n  4: 'Apenas Emissões de MDFE',\n  3: 'Apenas Emissões de NFE'\n};\nexport const TAGS_ENUM = {\n  \"Placa\": {\n    column: \"placa\",\n    mask: \"plate\"\n  },\n  \"CPF Condutor (MDFe)\": {\n    column: \"cpf_condutor\",\n    mask: \"cpf\"\n  },\n  \"CNPJ Emitente (MDFe)\": {\n    column: \"cnpj_emitente\",\n    mask: \"cnpj\"\n  },\n  \"CPF Emitente (MDFe)\": {\n    column: \"cpf_emitente\",\n    mask: \"cpf\"\n  },\n  \"Valor do Documento (MDFe)\": {\n    column: \"valor\",\n    mask: \"coin\"\n  },\n  \"CPF Emitente (NFe)\": {\n    column: \"cpf_emitente_nfe\",\n    mask: \"cpf\"\n  },\n  \"CNPJ Emitente (NFe)\": {\n    column: \"cnpj_emitente_nfe\",\n    mask: \"cnpj\"\n  },\n  \"CPF Destinatário (NFe)\": {\n    column: \"cpf_destinatario\",\n    mask: \"cpf\"\n  },\n  \"CNPJ Destinatário (NFe)\": {\n    column: \"cnpj_destinatario\",\n    mask: \"cnpj\"\n  },\n  \"Valor do Documento (NFE)\": {\n    column: \"valor_nfe\",\n    mask: \"coin\"\n  },\n  \"Valor Agregado de DFes\": {\n    column: \"valor_agregado\",\n    mask: \"coin\"\n  }\n};\nconst COMMON_SEVERITY_CONDITIONS = {\n  \"Selecione uma opção\": \"\",\n  \"Baixa\": 1,\n  \"Média\": 2,\n  \"Alta\": 3\n};\nconst ADMIN_SEVERITY_CONDITIONS = { ...COMMON_SEVERITY_CONDITIONS,\n  \"COE\": 4\n};\nexport const DROPDOWN_CONDITIONS = isAdmin() || isSubgerente() || isMonitoramento() ? createFilters(ADMIN_DROPDOWN_FILTERS) : createFilters(COMMON_DROPDOWN_FILTERS);\nexport const SEVERITY_CONDITIONS = isAdmin() || isCOE() ? ADMIN_SEVERITY_CONDITIONS : COMMON_SEVERITY_CONDITIONS;\nexport const allowDuplication = () => {\n  const ldapRoles = getLDAPRoles();\n  const allowed_duplicate_warning = ['ADMIN', 'COE', 'GECOF', 'ATIF'];\n\n  for (const allowedRole of allowed_duplicate_warning) {\n    if (ldapRoles.includes(allowedRole)) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport function maxClosingDate() {\n  const timeZone = new Date().getTimezoneOffset() * 60000;\n  const localISOTime = new Date(Date.now() - timeZone);\n  let numberOfDaysToAdd = 30;\n  localISOTime.setDate(localISOTime.getDate() + numberOfDaysToAdd);\n  return localISOTime.getDate();\n}\nexport const hasEmptyValues = (formData, tagsInput) => {\n  validateData(formData);\n  if (formData.nome.trim() === \"\" || formData.descricao.trim() === \"\" || Object.keys(tagsInput).length === 0 || isEmpty(formData.visibility_groups) || formData.config_type === \"\" && !isExternalUser() || formData.procedimentos.trim() === \"\" || formData.data_fechamento[0] === \"\" || formData.data_fechamento[1] === \"\" || formData.severidade === \"\") return true;\n  return false;\n};\nexport const compareGroups = (formData, oldFormData) => {\n  let sortedGroups = formData.visibility_groups.sort();\n  let sortedOldGroups = oldFormData.visibility_groups.sort();\n  return sortedGroups.join(\",\") === sortedOldGroups.join(\",\");\n};\n\nfunction addUnmaskedConditions(map, key, value, mask) {\n  if (value !== null && value !== undefined) {\n    map[key] = removeMask(value, mask);\n  }\n}\n\nfunction mountUnmaskedConditions(conditions) {\n  let result = {};\n  addUnmaskedConditions(result, 'cpf_destinatario', conditions[CPF_DESTINATARIO_NFE], MASK_ENUM.CPF);\n  addUnmaskedConditions(result, 'cpf_emitente', conditions[CPF_EMITENTE], MASK_ENUM.CPF);\n  addUnmaskedConditions(result, 'cpf_emitente_nfe', conditions[CPF_EMITENTE_NFE], MASK_ENUM.CPF);\n  addUnmaskedConditions(result, 'cpf_condutor', conditions[CPF_CONDUTOR], MASK_ENUM.CPF);\n  addUnmaskedConditions(result, 'cnpj_destinatario', conditions[CNPJ_DESTINATARIO_NFE], MASK_ENUM.CNPJ);\n  addUnmaskedConditions(result, 'cnpj_emitente', conditions[CNPJ_EMITENTE], MASK_ENUM.CNPJ);\n  addUnmaskedConditions(result, 'cnpj_emitente_nfe', conditions[CNPJ_EMITENTE_NFE], MASK_ENUM.CNPJ);\n  addUnmaskedConditions(result, 'placa', conditions[PLACA], MASK_ENUM.PLATE);\n  addUnmaskedConditions(result, 'valor', conditions[VALOR_MDFE], MASK_ENUM.MONEY);\n  addUnmaskedConditions(result, 'valor_nfe', conditions[VALOR_NFE], MASK_ENUM.MONEY);\n  addUnmaskedConditions(result, 'valor_agregado', conditions[VALOR_AGREGADO], MASK_ENUM.MONEY);\n  return result;\n}\n\nexport const compareWithOldValues = (formData, oldFormData, formTags, oldFormTags) => {\n  if (formData.nome === oldFormData.nome && formData.descricao === oldFormData.descricao && compareGroups(formData, oldFormData) && formData.procedimentos === oldFormData.procedimentos && formData.severidade === oldFormData.severidade && formData.config_type === oldFormData.config_type && formData.data_fechamento[0] === oldFormData.data_fechamento[0] && formData.data_fechamento[1] === oldFormData.data_fechamento[1] && deepEqual(mountUnmaskedConditions(formTags), mountUnmaskedConditions(oldFormTags), {\n    strict: true\n  })) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const validateData = data => {\n  let result = [];\n\n  if (data[\"data_fechamento\"] && data[\"data_fechamento\"][0]) {\n    const maxDate = new Date();\n    maxDate.setDate(maxDate.getDate() + 31);\n    maxDate.setHours(0);\n    maxDate.setMinutes(0);\n    maxDate.setSeconds(0);\n    const minDate = new Date();\n    minDate.setHours(0);\n    minDate.setMinutes(0);\n    minDate.setSeconds(0);\n    const date = new Date(\"\".concat(data.data_fechamento[0], \"T\").concat(data.data_fechamento[1]));\n    date.setHours(0);\n    date.setMinutes(1);\n    date.setSeconds(0);\n\n    if (date < minDate) {\n      result.push(\"Data de Fechamento não pode ser anterior ao dia atual\");\n    }\n\n    if (date > maxDate) {\n      result.push(\"Data de Fechamento não pode ultrapassar o limite de 30 dias\");\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/rules/WarningConfigRules.js"],"names":["isMonitoramento","isExternalUser","getLDAPRoles","isCOE","isSubgerente","isAdmin","FILTERS_ENUM","MASK_ENUM","isEmpty","removeMask","createFilters","deepEqual","PLACA","CPF_CONDUTOR","CNPJ_EMITENTE","CPF_EMITENTE","VALOR_MDFE","CPF_EMITENTE_NFE","CNPJ_EMITENTE_NFE","CPF_DESTINATARIO_NFE","CNPJ_DESTINATARIO_NFE","VALOR_NFE","VALOR_AGREGADO","BLANK_WARNING_CONFIG_FORM_DATA","id_config","nome","criador","descricao","visibility_groups","procedimentos","data_fechamento","severidade","config_type","history","config_pause_timestamp","COMMON_DROPDOWN_FILTERS","cpf_condutor","cpf_emitente","cnpj_emitente","placa","valor","ADMIN_DROPDOWN_FILTERS","cpf_destinatario","cpf_emitente_nfe","cnpj_destinatario","cnpj_emitente_nfe","valor_nfe","valor_agregado","CONFIG_TYPE_CONDITIONS","CONFIG_TYPE_CONDITIONS_REVERSE","TAGS_ENUM","column","mask","COMMON_SEVERITY_CONDITIONS","ADMIN_SEVERITY_CONDITIONS","DROPDOWN_CONDITIONS","SEVERITY_CONDITIONS","allowDuplication","ldapRoles","allowed_duplicate_warning","allowedRole","includes","maxClosingDate","timeZone","Date","getTimezoneOffset","localISOTime","now","numberOfDaysToAdd","setDate","getDate","hasEmptyValues","formData","tagsInput","validateData","trim","Object","keys","length","compareGroups","oldFormData","sortedGroups","sort","sortedOldGroups","join","addUnmaskedConditions","map","key","value","undefined","mountUnmaskedConditions","conditions","result","CPF","CNPJ","PLATE","MONEY","compareWithOldValues","formTags","oldFormTags","strict","data","maxDate","setHours","setMinutes","setSeconds","minDate","date","push"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,YAAY,GAAG,qBAArB;AACP,OAAO,MAAMC,aAAa,GAAG,sBAAtB;AACP,OAAO,MAAMC,YAAY,GAAG,qBAArB;AACP,OAAO,MAAMC,UAAU,GAAG,2BAAnB;AACP,OAAO,MAAMC,gBAAgB,GAAG,oBAAzB;AACP,OAAO,MAAMC,iBAAiB,GAAG,qBAA1B;AACP,OAAO,MAAMC,oBAAoB,GAAG,wBAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAG,yBAA9B;AACP,OAAO,MAAMC,SAAS,GAAG,0BAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,wBAAvB;AAIP,OAAO,MAAMC,8BAA8B,GAAG;AAC5CC,EAAAA,SAAS,EAAE,EADiC;AAE5CC,EAAAA,IAAI,EAAE,EAFsC;AAG5CC,EAAAA,OAAO,EAAE,EAHmC;AAI5CC,EAAAA,SAAS,EAAE,EAJiC;AAK5CC,EAAAA,iBAAiB,EAAE,EALyB;AAM5CC,EAAAA,aAAa,EAAE,EAN6B;AAO5CC,EAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,EAAL,CAP2B;AAQ5CC,EAAAA,UAAU,EAAE,EARgC;AAS5CC,EAAAA,WAAW,EAAE,EAT+B;AAU5CC,EAAAA,OAAO,EAAE,EAVmC;AAW5CC,EAAAA,sBAAsB,EAAE;AAXoB,CAAvC;AAcP,OAAO,MAAMC,uBAAuB,GAAG,CACrC7B,YAAY,CAAC8B,YADwB,EAErC9B,YAAY,CAAC+B,YAFwB,EAGrC/B,YAAY,CAACgC,aAHwB,EAIrChC,YAAY,CAACiC,KAJwB,EAKrCjC,YAAY,CAACkC,KALwB,CAAhC;AAQP,OAAO,MAAMC,sBAAsB,GAAG,CACpC,GAAGN,uBADiC,EAEpC7B,YAAY,CAACoC,gBAFuB,EAGpCpC,YAAY,CAACqC,gBAHuB,EAIpCrC,YAAY,CAACsC,iBAJuB,EAKpCtC,YAAY,CAACuC,iBALuB,EAMpCvC,YAAY,CAACwC,SANuB,EAOpCxC,YAAY,CAACyC,cAPuB,CAA/B;AAUP,OAAO,MAAMC,sBAAsB,GAAG;AACpC,yBAAuB,EADa;AAEpC,6DAA2D,CAFvB;AAGpC,8BAA4B,CAHQ;AAIpC,8BAA4B,CAJQ;AAKpC,qDAAmD,CALf;AAMpC,6BAA2B,CANS;AAOpC,4BAA0B;AAPU,CAA/B;AAUP,OAAO,MAAMC,8BAA8B,GAAG;AAC5C,KAAG,yDADyC;AAE5C,KAAG,0BAFyC;AAG5C,KAAG,0BAHyC;AAI5C,KAAG,iDAJyC;AAK5C,KAAG,yBALyC;AAM5C,KAAG;AANyC,CAAvC;AASP,OAAO,MAAMC,SAAS,GAAG;AACvB,WAAS;AAAEC,IAAAA,MAAM,EAAE,OAAV;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GADc;AAEvB,yBAAuB;AAAED,IAAAA,MAAM,EAAE,cAAV;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAFA;AAGvB,0BAAwB;AAAED,IAAAA,MAAM,EAAE,eAAV;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAHD;AAIvB,yBAAuB;AAAED,IAAAA,MAAM,EAAE,cAAV;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAJA;AAKvB,+BAA6B;AAAED,IAAAA,MAAM,EAAE,OAAV;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GALN;AAMvB,wBAAsB;AAAED,IAAAA,MAAM,EAAE,kBAAV;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GANC;AAOvB,yBAAuB;AAAED,IAAAA,MAAM,EAAE,mBAAV;AAA+BC,IAAAA,IAAI,EAAE;AAArC,GAPA;AAQvB,4BAA0B;AAAED,IAAAA,MAAM,EAAE,kBAAV;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GARH;AASvB,6BAA2B;AAAED,IAAAA,MAAM,EAAE,mBAAV;AAA+BC,IAAAA,IAAI,EAAE;AAArC,GATJ;AAUvB,8BAA4B;AAAED,IAAAA,MAAM,EAAE,WAAV;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAVL;AAWvB,4BAA0B;AAAED,IAAAA,MAAM,EAAE,gBAAV;AAA4BC,IAAAA,IAAI,EAAE;AAAlC;AAXH,CAAlB;AAcP,MAAMC,0BAA0B,GAAG;AACjC,yBAAuB,EADU;AAEjC,WAAS,CAFwB;AAGjC,WAAS,CAHwB;AAIjC,UAAQ;AAJyB,CAAnC;AAOA,MAAMC,yBAAyB,GAAG,EAChC,GAAGD,0BAD6B;AAEhC,SAAQ;AAFwB,CAAlC;AAKA,OAAO,MAAME,mBAAmB,GAAIlD,OAAO,MAAMD,YAAY,EAAzB,IAA+BJ,eAAe,EAA/C,GAAqDU,aAAa,CAAC+B,sBAAD,CAAlE,GAA6F/B,aAAa,CAACyB,uBAAD,CAAtI;AAEP,OAAO,MAAMqB,mBAAmB,GAAInD,OAAO,MAAMF,KAAK,EAAnB,GAAyBmD,yBAAzB,GAAqDD,0BAAjF;AAIP,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AACpC,QAAMC,SAAS,GAAGxD,YAAY,EAA9B;AACA,QAAMyD,yBAAyB,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB,EAA0B,MAA1B,CAAlC;;AACA,OAAK,MAAMC,WAAX,IAA0BD,yBAA1B,EAAqD;AACnD,QAAID,SAAS,CAACG,QAAV,CAAmBD,WAAnB,CAAJ,EAAqC;AACnC,aAAO,IAAP;AACD;AAEF;;AACD,SAAO,KAAP;AACD,CAVM;AAYP,OAAO,SAASE,cAAT,GAAyB;AAC9B,QAAMC,QAAQ,GAAI,IAAIC,IAAJ,EAAD,CAAaC,iBAAb,KAAmC,KAApD;AACA,QAAMC,YAAY,GAAI,IAAIF,IAAJ,CAASA,IAAI,CAACG,GAAL,KAAaJ,QAAtB,CAAtB;AACA,MAAIK,iBAAiB,GAAG,EAAxB;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqBH,YAAY,CAACI,OAAb,KAAyBF,iBAA9C;AAEA,SAAOF,YAAY,CAACI,OAAb,EAAP;AACD;AAED,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrDC,EAAAA,YAAY,CAACF,QAAD,CAAZ;AACA,MACEA,QAAQ,CAAC/C,IAAT,CAAckD,IAAd,OAAyB,EAAzB,IACGH,QAAQ,CAAC7C,SAAT,CAAmBgD,IAAnB,OAA8B,EADjC,IAEGC,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,MAAvB,KAAkC,CAFrC,IAGGtE,OAAO,CAACgE,QAAQ,CAAC5C,iBAAV,CAHV,IAII4C,QAAQ,CAACxC,WAAT,KAAyB,EAAzB,IAA+B,CAAC/B,cAAc,EAJlD,IAKGuE,QAAQ,CAAC3C,aAAT,CAAuB8C,IAAvB,OAAkC,EALrC,IAMGH,QAAQ,CAAC1C,eAAT,CAAyB,CAAzB,MAAgC,EANnC,IAOG0C,QAAQ,CAAC1C,eAAT,CAAyB,CAAzB,MAAgC,EAPnC,IAQG0C,QAAQ,CAACzC,UAAT,KAAwB,EAT7B,EAWE,OAAO,IAAP;AAEF,SAAO,KAAP;AACD,CAhBM;AAkBP,OAAO,MAAMgD,aAAa,GAAG,CAACP,QAAD,EAAWQ,WAAX,KAA2B;AAEtD,MAAIC,YAAY,GAAGT,QAAQ,CAAC5C,iBAAT,CAA2BsD,IAA3B,EAAnB;AACA,MAAIC,eAAe,GAAGH,WAAW,CAACpD,iBAAZ,CAA8BsD,IAA9B,EAAtB;AAEA,SAAOD,YAAY,CAACG,IAAb,CAAkB,GAAlB,MAA2BD,eAAe,CAACC,IAAhB,CAAqB,GAArB,CAAlC;AACD,CANM;;AAQP,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDpC,IAAhD,EAAsD;AACpD,MAAIoC,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAAhC,EAA2C;AACzCH,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAW9E,UAAU,CAAC+E,KAAD,EAAQpC,IAAR,CAArB;AACD;AACF;;AAID,SAASsC,uBAAT,CAAiCC,UAAjC,EAA6C;AAE3C,MAAIC,MAAM,GAAG,EAAb;AACAP,EAAAA,qBAAqB,CAACO,MAAD,EAAS,kBAAT,EAA6BD,UAAU,CAACxE,oBAAD,CAAvC,EAA+DZ,SAAS,CAACsF,GAAzE,CAArB;AACAR,EAAAA,qBAAqB,CAACO,MAAD,EAAS,cAAT,EAAyBD,UAAU,CAAC5E,YAAD,CAAnC,EAAmDR,SAAS,CAACsF,GAA7D,CAArB;AACAR,EAAAA,qBAAqB,CAACO,MAAD,EAAS,kBAAT,EAA6BD,UAAU,CAAC1E,gBAAD,CAAvC,EAA2DV,SAAS,CAACsF,GAArE,CAArB;AACAR,EAAAA,qBAAqB,CAACO,MAAD,EAAS,cAAT,EAAyBD,UAAU,CAAC9E,YAAD,CAAnC,EAAmDN,SAAS,CAACsF,GAA7D,CAArB;AACAR,EAAAA,qBAAqB,CAACO,MAAD,EAAS,mBAAT,EAA8BD,UAAU,CAACvE,qBAAD,CAAxC,EAAiEb,SAAS,CAACuF,IAA3E,CAArB;AACAT,EAAAA,qBAAqB,CAACO,MAAD,EAAS,eAAT,EAA0BD,UAAU,CAAC7E,aAAD,CAApC,EAAqDP,SAAS,CAACuF,IAA/D,CAArB;AACAT,EAAAA,qBAAqB,CAACO,MAAD,EAAS,mBAAT,EAA8BD,UAAU,CAACzE,iBAAD,CAAxC,EAA6DX,SAAS,CAACuF,IAAvE,CAArB;AACAT,EAAAA,qBAAqB,CAACO,MAAD,EAAS,OAAT,EAAkBD,UAAU,CAAC/E,KAAD,CAA5B,EAAqCL,SAAS,CAACwF,KAA/C,CAArB;AACAV,EAAAA,qBAAqB,CAACO,MAAD,EAAS,OAAT,EAAkBD,UAAU,CAAC3E,UAAD,CAA5B,EAA0CT,SAAS,CAACyF,KAApD,CAArB;AACAX,EAAAA,qBAAqB,CAACO,MAAD,EAAS,WAAT,EAAsBD,UAAU,CAACtE,SAAD,CAAhC,EAA6Cd,SAAS,CAACyF,KAAvD,CAArB;AACAX,EAAAA,qBAAqB,CAACO,MAAD,EAAS,gBAAT,EAA2BD,UAAU,CAACrE,cAAD,CAArC,EAAuDf,SAAS,CAACyF,KAAjE,CAArB;AAEA,SAAOJ,MAAP;AACD;;AAED,OAAO,MAAMK,oBAAoB,GAAG,CAACzB,QAAD,EAAWQ,WAAX,EAAwBkB,QAAxB,EAAkCC,WAAlC,KAAkD;AACpF,MACE3B,QAAQ,CAAC/C,IAAT,KAAkBuD,WAAW,CAACvD,IAA9B,IACG+C,QAAQ,CAAC7C,SAAT,KAAuBqD,WAAW,CAACrD,SADtC,IAEGoD,aAAa,CAACP,QAAD,EAAWQ,WAAX,CAFhB,IAGGR,QAAQ,CAAC3C,aAAT,KAA2BmD,WAAW,CAACnD,aAH1C,IAIG2C,QAAQ,CAACzC,UAAT,KAAwBiD,WAAW,CAACjD,UAJvC,IAKGyC,QAAQ,CAACxC,WAAT,KAAyBgD,WAAW,CAAChD,WALxC,IAMGwC,QAAQ,CAAC1C,eAAT,CAAyB,CAAzB,MAAgCkD,WAAW,CAAClD,eAAZ,CAA4B,CAA5B,CANnC,IAOG0C,QAAQ,CAAC1C,eAAT,CAAyB,CAAzB,MAAgCkD,WAAW,CAAClD,eAAZ,CAA4B,CAA5B,CAPnC,IAQGnB,SAAS,CAAC+E,uBAAuB,CAACQ,QAAD,CAAxB,EAAoCR,uBAAuB,CAACS,WAAD,CAA3D,EAA0E;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA1E,CATd,EAUE;AACA,WAAO,IAAP;AACD,GAZD,MAYO;AACL,WAAO,KAAP;AACD;AAEF,CAjBM;AAoBP,OAAO,MAAM1B,YAAY,GAAI2B,IAAD,IAAU;AACpC,MAAIT,MAAM,GAAG,EAAb;;AACA,MAAIS,IAAI,CAAC,iBAAD,CAAJ,IAA4BA,IAAI,CAAC,iBAAD,CAAJ,CAAwB,CAAxB,CAAhC,EAA2D;AACzD,UAAMC,OAAO,GAAG,IAAItC,IAAJ,EAAhB;AACAsC,IAAAA,OAAO,CAACjC,OAAR,CAAgBiC,OAAO,CAAChC,OAAR,KAAoB,EAApC;AACAgC,IAAAA,OAAO,CAACC,QAAR,CAAiB,CAAjB;AACAD,IAAAA,OAAO,CAACE,UAAR,CAAmB,CAAnB;AACAF,IAAAA,OAAO,CAACG,UAAR,CAAmB,CAAnB;AAGA,UAAMC,OAAO,GAAG,IAAI1C,IAAJ,EAAhB;AACA0C,IAAAA,OAAO,CAACH,QAAR,CAAiB,CAAjB;AACAG,IAAAA,OAAO,CAACF,UAAR,CAAmB,CAAnB;AACAE,IAAAA,OAAO,CAACD,UAAR,CAAmB,CAAnB;AAEA,UAAME,IAAI,GAAG,IAAI3C,IAAJ,WAAYqC,IAAI,CAACvE,eAAL,CAAqB,CAArB,CAAZ,cAAuCuE,IAAI,CAACvE,eAAL,CAAqB,CAArB,CAAvC,EAAb;AACA6E,IAAAA,IAAI,CAACJ,QAAL,CAAc,CAAd;AACAI,IAAAA,IAAI,CAACH,UAAL,CAAgB,CAAhB;AACAG,IAAAA,IAAI,CAACF,UAAL,CAAgB,CAAhB;;AAEA,QAAIE,IAAI,GAAGD,OAAX,EAAoB;AAClBd,MAAAA,MAAM,CAACgB,IAAP,CAAY,uDAAZ;AACD;;AAED,QAAID,IAAI,GAAGL,OAAX,EAAoB;AAClBV,MAAAA,MAAM,CAACgB,IAAP,CAAY,6DAAZ;AACD;AAEF;;AACD,SAAOhB,MAAP;AACD,CA9BM","sourcesContent":["import { isMonitoramento } from \"common/SessionUtils\"\r\nimport { isExternalUser } from \"common/SessionUtils\"\r\nimport { getLDAPRoles } from \"common/SessionUtils\"\r\nimport { isCOE } from \"common/SessionUtils\"\r\nimport { isSubgerente } from \"common/SessionUtils\"\r\nimport { isAdmin } from \"common/SessionUtils\"\r\nimport FILTERS_ENUM from \"common/enumerators/FiltersEnum\"\r\nimport MASK_ENUM from \"common/enumerators/MaskEnum\"\r\nimport { isEmpty } from \"common/utils/collections\"\r\nimport { removeMask } from \"common/utils/mask\"\r\nimport { createFilters } from \"components/ViewFiltersOptions\"\r\nimport deepEqual from \"deep-equal\"\r\n\r\nexport const PLACA = \"Placa\"\r\nexport const CPF_CONDUTOR = \"CPF Condutor (MDFe)\"\r\nexport const CNPJ_EMITENTE = \"CNPJ Emitente (MDFe)\"\r\nexport const CPF_EMITENTE = \"CPF Emitente (MDFe)\"\r\nexport const VALOR_MDFE = \"Valor do Documento (MDFe)\"\r\nexport const CPF_EMITENTE_NFE = \"CPF Emitente (NFe)\"\r\nexport const CNPJ_EMITENTE_NFE = \"CNPJ Emitente (NFe)\"\r\nexport const CPF_DESTINATARIO_NFE = \"CPF Destinatário (NFe)\"\r\nexport const CNPJ_DESTINATARIO_NFE = \"CNPJ Destinatário (NFe)\"\r\nexport const VALOR_NFE = \"Valor do Documento (NFE)\"\r\nexport const VALOR_AGREGADO = \"Valor Agregado de DFes\"\r\n\r\n\r\n\r\nexport const BLANK_WARNING_CONFIG_FORM_DATA = {\r\n  id_config: \"\",\r\n  nome: \"\",\r\n  criador: \"\",\r\n  descricao: \"\",\r\n  visibility_groups: [],\r\n  procedimentos: \"\",\r\n  data_fechamento: [\"\", \"\"],\r\n  severidade: \"\",\r\n  config_type: \"\",\r\n  history: \"\",\r\n  config_pause_timestamp: null\r\n}\r\n\r\nexport const COMMON_DROPDOWN_FILTERS = [\r\n  FILTERS_ENUM.cpf_condutor,\r\n  FILTERS_ENUM.cpf_emitente,\r\n  FILTERS_ENUM.cnpj_emitente,\r\n  FILTERS_ENUM.placa,\r\n  FILTERS_ENUM.valor\r\n]\r\n\r\nexport const ADMIN_DROPDOWN_FILTERS = [\r\n  ...COMMON_DROPDOWN_FILTERS,\r\n  FILTERS_ENUM.cpf_destinatario,\r\n  FILTERS_ENUM.cpf_emitente_nfe,\r\n  FILTERS_ENUM.cnpj_destinatario,\r\n  FILTERS_ENUM.cnpj_emitente_nfe,\r\n  FILTERS_ENUM.valor_nfe,\r\n  FILTERS_ENUM.valor_agregado\r\n]\r\n\r\nexport const CONFIG_TYPE_CONDITIONS = {\r\n  \"Selecione uma opção\": \"\",\r\n  'Todos (Passagens com e sem DFE, Emissões de MDFE e NFE)': 0,\r\n  'Apenas Passagens sem DFE': 1,\r\n  'Apenas Passagens com DFE': 5,\r\n  'Apenas Passagens com DFE e Emissões de MDFE/NFE': 2,\r\n  'Apenas Emissões de MDFE': 4,\r\n  'Apenas Emissões de NFE': 3\r\n}\r\n\r\nexport const CONFIG_TYPE_CONDITIONS_REVERSE = {\r\n  0: 'Todos (Passagens com e sem DFE, Emissões de MDFE e NFE)',\r\n  1: 'Apenas Passagens sem DFE',\r\n  5: 'Apenas Passagens com DFE',\r\n  2: 'Apenas Passagens com DFE e Emissões de MDFE/NFE',\r\n  4: 'Apenas Emissões de MDFE',\r\n  3: 'Apenas Emissões de NFE'\r\n}\r\n\r\nexport const TAGS_ENUM = {\r\n  \"Placa\": { column: \"placa\", mask: \"plate\" },\r\n  \"CPF Condutor (MDFe)\": { column: \"cpf_condutor\", mask: \"cpf\" },\r\n  \"CNPJ Emitente (MDFe)\": { column: \"cnpj_emitente\", mask: \"cnpj\" },\r\n  \"CPF Emitente (MDFe)\": { column: \"cpf_emitente\", mask: \"cpf\" },\r\n  \"Valor do Documento (MDFe)\": { column: \"valor\", mask: \"coin\" },\r\n  \"CPF Emitente (NFe)\": { column: \"cpf_emitente_nfe\", mask: \"cpf\" },\r\n  \"CNPJ Emitente (NFe)\": { column: \"cnpj_emitente_nfe\", mask: \"cnpj\" },\r\n  \"CPF Destinatário (NFe)\": { column: \"cpf_destinatario\", mask: \"cpf\" },\r\n  \"CNPJ Destinatário (NFe)\": { column: \"cnpj_destinatario\", mask: \"cnpj\" },\r\n  \"Valor do Documento (NFE)\": { column: \"valor_nfe\", mask: \"coin\" },\r\n  \"Valor Agregado de DFes\" :{ column: \"valor_agregado\", mask: \"coin\" },\r\n}\r\n\r\nconst COMMON_SEVERITY_CONDITIONS = {\r\n  \"Selecione uma opção\": \"\",\r\n  \"Baixa\": 1,\r\n  \"Média\": 2,\r\n  \"Alta\": 3\r\n}\r\n\r\nconst ADMIN_SEVERITY_CONDITIONS = {\r\n  ...COMMON_SEVERITY_CONDITIONS,\r\n  \"COE\" : 4\r\n}\r\n\r\nexport const DROPDOWN_CONDITIONS = (isAdmin() || isSubgerente() || isMonitoramento()) ? createFilters(ADMIN_DROPDOWN_FILTERS) : createFilters(COMMON_DROPDOWN_FILTERS)\r\n\r\nexport const SEVERITY_CONDITIONS = (isAdmin() || isCOE()) ? ADMIN_SEVERITY_CONDITIONS : COMMON_SEVERITY_CONDITIONS\r\n\r\n\r\n\r\nexport const allowDuplication = () => {\r\n  const ldapRoles = getLDAPRoles()\r\n  const allowed_duplicate_warning = ['ADMIN', 'COE', 'GECOF', 'ATIF'];\r\n  for (const allowedRole of allowed_duplicate_warning) {\r\n    if (ldapRoles.includes(allowedRole)) {\r\n      return true\r\n    }\r\n\r\n  }\r\n  return false\r\n}\r\n\r\nexport function maxClosingDate(){\r\n  const timeZone = (new Date()).getTimezoneOffset() * 60000;\r\n  const localISOTime = (new Date(Date.now() - timeZone));\r\n  let numberOfDaysToAdd = 30;\r\n  localISOTime.setDate(localISOTime.getDate() + numberOfDaysToAdd); \r\n\r\n  return localISOTime.getDate()\r\n}\r\n\r\nexport const hasEmptyValues = (formData, tagsInput) => {\r\n  validateData(formData)\r\n  if (\r\n    formData.nome.trim() === \"\"\r\n    || formData.descricao.trim() === \"\"\r\n    || Object.keys(tagsInput).length === 0\r\n    || isEmpty(formData.visibility_groups)\r\n    || (formData.config_type === \"\" && !isExternalUser())\r\n    || formData.procedimentos.trim() === \"\"\r\n    || formData.data_fechamento[0] === \"\"\r\n    || formData.data_fechamento[1] === \"\"\r\n    || formData.severidade === \"\"\r\n  )\r\n    return true\r\n\r\n  return false\r\n}\r\n\r\nexport const compareGroups = (formData, oldFormData) => {\r\n\r\n  let sortedGroups = formData.visibility_groups.sort()\r\n  let sortedOldGroups = oldFormData.visibility_groups.sort()\r\n\r\n  return sortedGroups.join(\",\") === sortedOldGroups.join(\",\")\r\n}\r\n\r\nfunction addUnmaskedConditions(map, key, value, mask) {\r\n  if (value !== null && value !== undefined) {\r\n    map[key] = removeMask(value, mask)\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction mountUnmaskedConditions(conditions) {\r\n\r\n  let result = {}\r\n  addUnmaskedConditions(result, 'cpf_destinatario', conditions[CPF_DESTINATARIO_NFE], MASK_ENUM.CPF)\r\n  addUnmaskedConditions(result, 'cpf_emitente', conditions[CPF_EMITENTE], MASK_ENUM.CPF)\r\n  addUnmaskedConditions(result, 'cpf_emitente_nfe', conditions[CPF_EMITENTE_NFE], MASK_ENUM.CPF)\r\n  addUnmaskedConditions(result, 'cpf_condutor', conditions[CPF_CONDUTOR], MASK_ENUM.CPF)\r\n  addUnmaskedConditions(result, 'cnpj_destinatario', conditions[CNPJ_DESTINATARIO_NFE], MASK_ENUM.CNPJ)\r\n  addUnmaskedConditions(result, 'cnpj_emitente', conditions[CNPJ_EMITENTE], MASK_ENUM.CNPJ)\r\n  addUnmaskedConditions(result, 'cnpj_emitente_nfe', conditions[CNPJ_EMITENTE_NFE], MASK_ENUM.CNPJ)\r\n  addUnmaskedConditions(result, 'placa', conditions[PLACA], MASK_ENUM.PLATE)\r\n  addUnmaskedConditions(result, 'valor', conditions[VALOR_MDFE], MASK_ENUM.MONEY)\r\n  addUnmaskedConditions(result, 'valor_nfe', conditions[VALOR_NFE], MASK_ENUM.MONEY)\r\n  addUnmaskedConditions(result, 'valor_agregado', conditions[VALOR_AGREGADO], MASK_ENUM.MONEY)\r\n\r\n  return result;\r\n}\r\n\r\nexport const compareWithOldValues = (formData, oldFormData, formTags, oldFormTags) => {\r\n  if (\r\n    formData.nome === oldFormData.nome\r\n    && formData.descricao === oldFormData.descricao\r\n    && compareGroups(formData, oldFormData)\r\n    && formData.procedimentos === oldFormData.procedimentos\r\n    && formData.severidade === oldFormData.severidade\r\n    && formData.config_type === oldFormData.config_type\r\n    && formData.data_fechamento[0] === oldFormData.data_fechamento[0]\r\n    && formData.data_fechamento[1] === oldFormData.data_fechamento[1]\r\n    && deepEqual(mountUnmaskedConditions(formTags), mountUnmaskedConditions(oldFormTags), { strict: true })\r\n  ) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const validateData = (data) => {\r\n  let result = []\r\n  if (data[\"data_fechamento\"] &&  data[\"data_fechamento\"][0]){\r\n    const maxDate = new Date()\r\n    maxDate.setDate(maxDate.getDate() + 31); \r\n    maxDate.setHours(0);\r\n    maxDate.setMinutes(0);\r\n    maxDate.setSeconds(0);\r\n\r\n\r\n    const minDate = new Date()\r\n    minDate.setHours(0);\r\n    minDate.setMinutes(0);\r\n    minDate.setSeconds(0);\r\n\r\n    const date = new Date(`${data.data_fechamento[0]}T${data.data_fechamento[1]}`)\r\n    date.setHours(0);\r\n    date.setMinutes(1);\r\n    date.setSeconds(0);\r\n\r\n    if (date < minDate) {\r\n      result.push(\"Data de Fechamento não pode ser anterior ao dia atual\")\r\n    }\r\n\r\n    if (date > maxDate) {\r\n      result.push(\"Data de Fechamento não pode ultrapassar o limite de 30 dias\")\r\n    }\r\n\r\n  }\r\n  return result\r\n}"]},"metadata":{},"sourceType":"module"}