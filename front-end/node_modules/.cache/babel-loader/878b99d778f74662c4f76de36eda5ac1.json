{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Auditors.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardBody, Form, FormGroup, Label, Input, Button, Modal, ModalBody, ModalHeader, Col } from 'reactstrap';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport { useHistory } from \"react-router-dom\";\nimport { NavigationContext } from 'context/NavigationContext';\nimport { WarningsContext } from 'context/WarningsContext';\nimport env from 'common/enviroment';\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\nimport GROUP_TYPE_ENUM from 'common/enumerators/GroupTypeEnum';\nimport Tabs from 'components/Tabs';\nimport TagsInput from 'components/tags/TagsInput';\nimport Table from 'components/tables/Table';\nimport EditionButtons from 'components/buttons/EditionButtons';\nimport ModalEditionButtons from 'components/buttons/ModalEditionButtons';\nimport ConfirmationModal from 'components/modals/ConfirmationModal ';\nimport MessageModal from 'components/modals/MessageModal';\nimport RevisionModal from 'components/modals/RevisionModal';\nimport { NumericFilter } from 'common/utils/filters';\nimport { isAdmin, isLoggedIn } from 'common/SessionUtils';\nimport { createRevisionModalData } from 'components/modals/RevisionModal';\nimport { ERROR, EXCLUSION, CREATION, EDITION } from 'components/modals/ModalConsts';\nimport { createBaseHttpRequestBody, createBaseHttpRequestBody as createEditionHttpRequestBody, createQueryHttpRequestBody, createOrderByClause, createSimpleFilterClause } from 'axios/AxiosUtils';\nimport { ViewsContext } from 'context/ViewsContext';\nimport { createCompositeFilterClause } from 'axios/AxiosUtils';\nimport { OR_FILTER } from 'axios/AxiosUtils';\nimport { isEmpty } from 'common/utils/collections';\nimport { treatResponse } from 'common/utils/errorTreatment';\nimport treatError from 'common/utils/errorTreatment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BLANK_FORM_DATA = {\n  \"user_id\": \"\",\n  \"user_name\": \"\",\n  \"user_registration_id\": \"\",\n  \"user_login\": \"\",\n  \"user_role\": \"\",\n  \"user_department\": \"\",\n  \"user_phone\": \"\"\n};\nconst GERENCIA_OPTIONS = {\n  \"Selecione uma opção\": \"\",\n  \"GR1 - JOÃO PESSOA\": \"2\",\n  \"GR2 - GUARABIRA\": \"3\",\n  \"GR3 - CAMPINA GRANDE\": \"4\",\n  \"GR4 - PATOS\": \"5\",\n  \"GR5 - CAJAZEIRAS\": \"6\",\n  \"COE\": \"7\",\n  \"GECOF\": \"GECOF\",\n  \"GEOFMT\": \"GEOFMT\",\n  \"SEFAZ\": \"SEFAZ\",\n  \"---------------------\": \"  \",\n  \"USUÁRIO EXTERNO\": \"USUÁRIO EXTERNO\"\n};\nexport default function Auditors() {\n  _s();\n\n  const history = useHistory();\n  const {\n    refresh,\n    refreshFlag,\n    auditorsFilters,\n    setAuditorsFilters\n  } = React.useContext(ViewsContext);\n  const {\n    startSSE,\n    wasReloaded,\n    setWasReloaded\n  } = React.useContext(WarningsContext);\n  const {\n    setIsMap\n  } = React.useContext(NavigationContext);\n  const [spinner, setSpinner] = React.useState(false);\n  const [isloading, setIsLoading] = React.useState(false);\n  const [pageIndex, setPageIndex] = React.useState(0);\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const [filters, setFilters] = React.useState([]);\n  const [formData, setFormData] = React.useState(BLANK_FORM_DATA);\n  const [oldFormData, setOldFormData] = React.useState(BLANK_FORM_DATA);\n  const [invalid, setInvalid] = React.useState(false);\n  const [modalReadonlyMode, setModalReadonlyMode] = React.useState(true);\n  const [modalType, setModalType] = React.useState(-1);\n  const [isModalActive, setIsModalActive] = React.useState(false);\n  const [modalData, setModalData] = React.useState({});\n\n  const toggleModalOn = type => {\n    setModalType(type);\n    setIsModalActive(true);\n  };\n\n  const toggleModalOff = () => {\n    setModalType(MODAL_TYPE_ENUM.NONE);\n    setIsModalActive(false);\n  };\n\n  const [isEditionModalActive, setEditionModal] = React.useState(false);\n\n  const toggleEditionModal = () => setEditionModal(prev => !prev);\n\n  const [groupsOptions, setGroupsOptions] = React.useState(GERENCIA_OPTIONS);\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n\n  const mountRetrievalFilters = filters => {\n    let orClauses = [];\n    orClauses.push(createSimpleFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.INSTITUCIONAL));\n    orClauses.push(createSimpleFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.SIGILOSO));\n    let groupsFilter = createCompositeFilterClause(\"group_type\", OR_FILTER, orClauses);\n    filters.push(groupsFilter);\n  };\n\n  React.useEffect(() => {\n    let filters = []; //filters.push(createNotFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.CACTO)) //Este comentário deve assumir o lugar do código abaixo caso seja necessário cadastrar usuários que não sejam da sefaz    \n\n    mountRetrievalFilters(filters);\n    let orderBy = createOrderByClause(\"group_id\", \"asc\");\n    let httpRequestBody = createQueryHttpRequestBody(filters, orderBy);\n    axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/group/read_all\"), httpRequestBody).then(res => {\n      let create_options = {};\n      create_options['0'] = {\n        group_id: 0,\n        group_description: \"SEFAZ\",\n        group_name: \"SEFAZ\"\n      };\n\n      for (let group in res.data) {\n        create_options[res.data[group].group_id] = {\n          group_id: res.data[group].group_id,\n          group_description: res.data[group].group_description,\n          group_name: res.data[group].group_name\n        };\n      }\n\n      setGroupsOptions(create_options);\n    }).catch(err => {}); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    if (isLoggedIn()) {\n      setIsMap(false);\n      refresh();\n\n      if (wasReloaded) {\n        startSSE();\n        setWasReloaded(false);\n      }\n\n      if (tabIndex === 1) {\n        if (filters && filters.length > 0) setIsLoading(true);\n        setPageIndex(() => 0);\n      } else if (tabIndex === 0) {\n        cleanInputs();\n        setModalReadonlyMode(false);\n      }\n    } else {\n      history.push('/login');\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [filters, pageIndex]);\n\n  const hasEmptyValues = obj => Object.values({ ...obj,\n    \"user_id\": 1,\n    \"user_phone\": '1'\n  }).some(x => typeof x === 'string' && x.trim() === \"\");\n\n  const isEqual = (obj1, obj2) => {\n    for (let key in obj1) {\n      if (obj1[key] !== obj2[key]) return false;\n    }\n\n    return true;\n  };\n\n  function mountGroupNameText(groupID) {\n    if (groupsOptions && groupsOptions[groupID]) {\n      return groupsOptions[groupID].group_name;\n    }\n\n    return \"\";\n  }\n\n  const cleanInputs = () => {\n    setFormData(BLANK_FORM_DATA);\n    setOldFormData(BLANK_FORM_DATA);\n  };\n\n  const openEditionModal = function (data) {\n    let readOnlyMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (data) {\n      setOldFormData(data);\n      setFormData(data);\n      setInvalid(false);\n      setModalReadonlyMode(readOnlyMode);\n      setEditionModal(true);\n    }\n  };\n\n  const openRevisionModal = () => {\n    if (hasEmptyValues(formData)) {\n      setInvalid(true);\n    } else {\n      setInvalid(false);\n      let data = createRevisionModalData(\"Revise os Dados do Auditor Fiscal\", ['Matrícula', 'Nome', 'Login', 'Cargo', 'Gerência', 'Telefone'], [formData.user_registration_id, formData.user_name, formData.user_login, formData.user_role, formData.user_department, formData.user_phone]);\n      setModalData(data);\n      toggleModalOn(MODAL_TYPE_ENUM.REVISION);\n    }\n  };\n\n  const openConfirmationModal = () => {\n    if (hasEmptyValues(formData)) {\n      setInvalid(true);\n    } else if (isEqual(formData, oldFormData)) {\n      setInvalid(true);\n      setModalData({\n        operation: EDITION,\n        messageType: ERROR,\n        message: \"Não há alterações a serem salvas para este auditor fiscal!\"\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    } else {\n      setInvalid(false);\n      setModalData({\n        entity: \"e Auditor\",\n        operation: EDITION\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\n    }\n  };\n\n  const openDeleteModal = (id, name) => {\n    if (id) {\n      setFormData({ ...formData,\n        \"user_id\": id\n      });\n      setModalData({\n        entity: \"e Auditor \",\n        operation: EXCLUSION,\n        id: id\n      });\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION);\n    }\n  };\n\n  const createReadHttpRequestBody = () => {\n    let orderBy = createOrderByClause(\"user_name\", \"asc\");\n    let httpRequestBody = createQueryHttpRequestBody(filters, orderBy);\n    return httpRequestBody;\n  };\n\n  const createCountHttpRequestBody = () => {\n    let httpRequestBody = createBaseHttpRequestBody();\n    httpRequestBody['filters'] = filters;\n    return httpRequestBody;\n  };\n\n  const createAuditor = () => {\n    const httpRequestBody = createEditionHttpRequestBody();\n    httpRequestBody['user_name'] = formData.user_name;\n    httpRequestBody['user_registration_id'] = formData.user_registration_id;\n    httpRequestBody['user_login'] = formData.user_login;\n    httpRequestBody['user_role'] = formData.user_role;\n    httpRequestBody['user_department'] = formData.user_department;\n    httpRequestBody['user_phone'] = isEmpty(formData.user_phone) ? \"\" : formData.user_phone;\n    setSpinner(true);\n    let entity = \"do Auditor\";\n    axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/auditor/create\"), httpRequestBody).then(res => {\n      treatResponse(entity, CREATION, 'user_id', res, setModalData, refresh);\n    }).catch(err => {\n      setModalData(treatError(err, entity, CREATION));\n      console.log(err);\n    }).finally(() => {\n      cleanInputs();\n      setSpinner(false);\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n    });\n  };\n\n  const deleteAuditor = id => {\n    let httpRequestBody = createEditionHttpRequestBody();\n    setSpinner(true);\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n\n    if (isEditionModalActive) {\n      toggleEditionModal();\n    }\n\n    let entity = \"do Auditor\";\n    axiosRetryProxy.delete(\"\".concat(env.apiAddress, \"/auditor/delete/\").concat(id), {\n      data: httpRequestBody\n    }).then(res => {\n      treatResponse(entity, EXCLUSION, 'user_id', res, setModalData, refresh);\n    }).catch(err => {\n      setModalData(treatError(err, entity, EXCLUSION));\n    }).finally(() => {\n      setSpinner(false);\n    });\n  };\n\n  const updateAuditor = () => {\n    if (hasEmptyValues(formData)) setInvalid(true);else {\n      setSpinner(true);\n      toggleEditionModal();\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE);\n      const httpRequestBody = createEditionHttpRequestBody();\n      httpRequestBody['user_name'] = formData.user_name;\n      httpRequestBody['user_registration_id'] = formData.user_registration_id;\n      httpRequestBody['user_login'] = formData.user_login;\n      httpRequestBody['user_role'] = formData.user_role;\n      httpRequestBody['user_department'] = formData.user_department;\n      httpRequestBody['user_phone'] = isEmpty(formData.user_phone) ? \"\" : formData.user_phone;\n      let entity = \"do Auditor\";\n      axiosRetryProxy.patch(\"\".concat(env.apiAddress, \"/auditor/update/\").concat(formData.user_id), httpRequestBody).then(res => {\n        treatResponse(entity, EDITION, 'user_id', res, setModalData, refresh);\n      }).catch(err => {\n        setModalData(treatError(err, entity, EDITION));\n      }).finally(() => {\n        setSpinner(false);\n        cleanInputs();\n      });\n    }\n  };\n\n  const isDisabled = () => {\n    return !isAdmin();\n  };\n\n  const toInputUppercase = e => {\n    e.target.value = (\"\" + e.target.value).toUpperCase();\n  };\n\n  const EditionForm = props => {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: \"5px 0px 10px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"exampleEmail\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Matr\\xEDcula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: formData.user_registration_id,\n            readOnly: modalReadonlyMode,\n            maxLength: \"15\",\n            onChange: e => setFormData({ ...formData,\n              'user_registration_id': e.target.value\n            }),\n            invalid: invalid && formData.user_registration_id.trim() === \"\"\n          }, \"A0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"exampleEmail\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: formData.user_name,\n            readOnly: modalReadonlyMode,\n            maxLength: \"70\",\n            onInput: toInputUppercase,\n            onKeyPress: event => {\n              NumericFilter(event);\n            },\n            onChange: e => setFormData({ ...formData,\n              'user_name': e.target.value\n            }),\n            invalid: invalid && formData.user_name.trim() === \"\"\n          }, \"A1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"exampleEmail\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: formData.user_login,\n            readOnly: modalReadonlyMode,\n            maxLength: \"70\",\n            onKeyPress: event => {\n              NumericFilter(event);\n            },\n            onChange: e => setFormData({ ...formData,\n              'user_login': e.target.value\n            }),\n            invalid: invalid && formData.user_login.trim() === \"\"\n          }, \"A2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"exampleEmail\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cargo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: formData.user_role,\n            readOnly: modalReadonlyMode,\n            maxLength: \"50\",\n            onChange: e => setFormData({ ...formData,\n              'user_role': e.target.value\n            }),\n            invalid: invalid && formData.user_role.trim() === \"\"\n          }, \"A3\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"selectGerencia\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Ger\\xEAncia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            name: \"selectGerencia\",\n            id: \"selectGerencia\",\n            readOnly: modalReadonlyMode,\n            disabled: modalReadonlyMode,\n            value: formData.user_department //defaultValue = {groups}\n            ,\n            invalid: invalid && formData.user_department.trim() === \"\",\n            onChange: e => setFormData({ ...formData,\n              'user_department': e.target.value\n            }),\n            multiple: false,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione uma op\\xE7\\xE3o\"\n            }, \"\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 13\n            }, this), Object.entries(groupsOptions).map(key_value => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key_value[0],\n                children: key_value[1].group_description\n              }, key_value[0], false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"-1\",\n              children: \"Usu\\xE1rio Externo\"\n            }, \"-1\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 13\n            }, this)]\n          }, \"A4\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"exampleEmail\",\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Telefone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: formData.user_phone,\n            readOnly: modalReadonlyMode,\n            maxLength: \"16\",\n            onChange: e => setFormData({ ...formData,\n              'user_phone': e.target.value\n            }),\n            invalid: invalid && formData.user_phone.trim() === \"\"\n          }, \"A5\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 7\n      }, this), props.isCreationForm ? /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: () => {\n          openRevisionModal();\n        },\n        style: {\n          marginTop: '2rem'\n        },\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(ModalEditionButtons, {\n        id: formData.user_id,\n        data: formData,\n        modalReadonlyMode: modalReadonlyMode,\n        setModalReadonlyMode: setModalReadonlyMode,\n        isDisabled: isDisabled,\n        editionAction: setModalReadonlyMode,\n        deleteAction: openDeleteModal,\n        saveAction: openConfirmationModal,\n        cancelAction: toggleEditionModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this)]\n    }, \"A\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        names: ['Cadastrar Novo Auditor Fiscal', 'Gerenciamento de Auditores Fiscais'],\n        index: [tabIndex, setTabIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        style: {\n          borderTopLeftRadius: '0px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [tabIndex === 0 && EditionForm({\n            isCreationForm: true,\n            isModal: false\n          }), tabIndex === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TagsInput, {\n              tagsState: [auditorsFilters, setAuditorsFilters],\n              setQuery: setFilters,\n              columns: {\n                \"Matrícula do Auditor\": {\n                  field: \"user_registration_id\",\n                  column_type: \"char\",\n                  size: 8,\n                  only_numbers_filter_input: true\n                },\n                \"Nome do Auditor\": {\n                  field: \"user_name\",\n                  column_type: \"varying\",\n                  size: 70,\n                  only_letters_filter_input: true\n                },\n                \"Cargo do Auditor\": {\n                  field: \"user_role\",\n                  column_type: \"varying\",\n                  size: 20,\n                  only_letters_filter_input: true\n                },\n                \"Gerencia do Auditor\": {\n                  field: \"user_department\",\n                  column_type: \"varying\",\n                  size: 20,\n                  accent_filter_input: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              dataUrl: '/auditor/read_all',\n              countUrl: \"/auditor/count_auditors\",\n              requestBody: createReadHttpRequestBody,\n              countRequestBody: createCountHttpRequestBody,\n              tags: filters,\n              fillData: true,\n              retrieveData: data => data,\n              refresh: refreshFlag,\n              trProps: row => {\n                return {\n                  onDoubleClick: e => {\n                    openEditionModal(row, true);\n                  }\n                };\n              },\n              loading: [isloading, setIsLoading],\n              columns: {\n                \"Matrícula\": {\n                  args: \"user_registration_id\",\n                  tdStyle: {\n                    wordBreak: 'break-word'\n                  }\n                },\n                \"Nome\": {\n                  args: \"user_name\",\n                  tdStyle: {\n                    wordBreak: 'break-word'\n                  }\n                },\n                \"Login\": {\n                  args: \"user_login\",\n                  tdStyle: {\n                    wordBreak: 'break-word'\n                  }\n                },\n                \"Cargo\": {\n                  args: \"user_role\",\n                  thStyle: {\n                    textAlign: 'center'\n                  },\n                  tdStyle: {\n                    wordBreak: 'break-word',\n                    'textAlign': 'center'\n                  }\n                },\n                \"Gerência\": {\n                  args: \"user_department\",\n                  thStyle: {\n                    textAlign: 'center'\n                  },\n                  tdStyle: {\n                    wordBreak: 'break-word',\n                    'textAlign': 'center'\n                  },\n                  func: group => mountGroupNameText(group)\n                },\n                \"Telefone\": {\n                  args: \"user_phone\",\n                  thStyle: {\n                    textAlign: 'center'\n                  },\n                  tdStyle: {\n                    wordBreak: 'break-word',\n                    'textAlign': 'center'\n                  }\n                },\n                \"Ações\": {\n                  args: [\"user_id\", \"user_name\"],\n                  tdStyle: {\n                    textAlign: 'center'\n                  },\n                  thStyle: {\n                    textAlign: 'center'\n                  },\n                  Func: _ref => {\n                    let {\n                      data,\n                      row_data\n                    } = _ref;\n                    return /*#__PURE__*/_jsxDEV(EditionButtons, {\n                      isModal: false,\n                      data: row_data,\n                      id: data[0],\n                      modalReadonlyMode: modalReadonlyMode,\n                      setModalReadonlyMode: setModalReadonlyMode,\n                      isDisabled: isDisabled,\n                      editionAction: openEditionModal,\n                      deleteAction: openDeleteModal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 53\n                    }, this);\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), isEditionModalActive && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isEditionModalActive,\n      toggle: () => {\n        cleanInputs();\n        toggleEditionModal();\n      },\n      style: {\n        maxWidth: '70%'\n      },\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          cleanInputs();\n          toggleEditionModal();\n        },\n        children: \"Auditor Fiscal Cadastrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        style: {\n          justifyContent: 'center',\n          alignContent: 'center',\n          padding: '0.5rem'\n        },\n        children: EditionForm({\n          isCreationForm: false,\n          isModal: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 9\n    }, this), modalType === MODAL_TYPE_ENUM.CONFIRMATION && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData,\n      actionMethods: [undefined, updateAuditor, deleteAuditor]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 54\n    }, this), modalType === MODAL_TYPE_ENUM.MESSAGE && /*#__PURE__*/_jsxDEV(MessageModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData,\n      spinner: spinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 49\n    }, this), modalType === MODAL_TYPE_ENUM.REVISION && /*#__PURE__*/_jsxDEV(RevisionModal, {\n      show: isModalActive,\n      toggle: toggleModalOff,\n      data: modalData,\n      actionMethod: createAuditor,\n      spinner: spinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Auditors, \"Fb1HvlRvdlZ8laZMIRJ1fi2aN1w=\", false, function () {\n  return [useHistory];\n});\n\n_c = Auditors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auditors\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/views/Auditors.js"],"names":["React","Card","CardBody","Form","FormGroup","Label","Input","Button","Modal","ModalBody","ModalHeader","Col","axios","axiosRetry","getTimeoutConfig","getRetryConfig","useHistory","NavigationContext","WarningsContext","env","MODAL_TYPE_ENUM","GROUP_TYPE_ENUM","Tabs","TagsInput","Table","EditionButtons","ModalEditionButtons","ConfirmationModal","MessageModal","RevisionModal","NumericFilter","isAdmin","isLoggedIn","createRevisionModalData","ERROR","EXCLUSION","CREATION","EDITION","createBaseHttpRequestBody","createEditionHttpRequestBody","createQueryHttpRequestBody","createOrderByClause","createSimpleFilterClause","ViewsContext","createCompositeFilterClause","OR_FILTER","isEmpty","treatResponse","treatError","BLANK_FORM_DATA","GERENCIA_OPTIONS","Auditors","history","refresh","refreshFlag","auditorsFilters","setAuditorsFilters","useContext","startSSE","wasReloaded","setWasReloaded","setIsMap","spinner","setSpinner","useState","isloading","setIsLoading","pageIndex","setPageIndex","tabIndex","setTabIndex","filters","setFilters","formData","setFormData","oldFormData","setOldFormData","invalid","setInvalid","modalReadonlyMode","setModalReadonlyMode","modalType","setModalType","isModalActive","setIsModalActive","modalData","setModalData","toggleModalOn","type","toggleModalOff","NONE","isEditionModalActive","setEditionModal","toggleEditionModal","prev","groupsOptions","setGroupsOptions","axiosRetryProxy","create","mountRetrievalFilters","orClauses","push","INSTITUCIONAL","SIGILOSO","groupsFilter","useEffect","orderBy","httpRequestBody","post","apiAddress","then","res","create_options","group_id","group_description","group_name","group","data","catch","err","length","cleanInputs","hasEmptyValues","obj","Object","values","some","x","trim","isEqual","obj1","obj2","key","mountGroupNameText","groupID","openEditionModal","readOnlyMode","openRevisionModal","user_registration_id","user_name","user_login","user_role","user_department","user_phone","REVISION","openConfirmationModal","operation","messageType","message","MESSAGE","entity","CONFIRMATION","openDeleteModal","id","name","createReadHttpRequestBody","createCountHttpRequestBody","createAuditor","console","log","finally","deleteAuditor","delete","updateAuditor","patch","user_id","isDisabled","toInputUppercase","e","target","value","toUpperCase","EditionForm","props","margin","event","entries","map","key_value","isCreationForm","marginTop","borderTopLeftRadius","isModal","field","column_type","size","only_numbers_filter_input","only_letters_filter_input","accent_filter_input","row","onDoubleClick","args","tdStyle","wordBreak","thStyle","textAlign","func","Func","row_data","maxWidth","justifyContent","alignContent","padding","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NavigationContext } from 'context/NavigationContext'\r\nimport { WarningsContext } from 'context/WarningsContext';\r\n\r\nimport env from 'common/enviroment'\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\nimport GROUP_TYPE_ENUM from 'common/enumerators/GroupTypeEnum'\r\n\r\nimport Tabs from 'components/Tabs';\r\nimport TagsInput from 'components/tags/TagsInput';\r\nimport Table from 'components/tables/Table';\r\nimport EditionButtons from 'components/buttons/EditionButtons';\r\nimport ModalEditionButtons from 'components/buttons/ModalEditionButtons';\r\n\r\nimport ConfirmationModal from 'components/modals/ConfirmationModal ';\r\nimport MessageModal from 'components/modals/MessageModal';\r\nimport RevisionModal from 'components/modals/RevisionModal';\r\n\r\nimport { NumericFilter } from 'common/utils/filters';\r\nimport { isAdmin, isLoggedIn } from 'common/SessionUtils';\r\nimport { createRevisionModalData } from 'components/modals/RevisionModal';\r\nimport { ERROR, EXCLUSION, CREATION, EDITION } from 'components/modals/ModalConsts';\r\nimport { createBaseHttpRequestBody, createBaseHttpRequestBody as createEditionHttpRequestBody, createQueryHttpRequestBody, createOrderByClause, createSimpleFilterClause} from 'axios/AxiosUtils';\r\nimport { ViewsContext } from 'context/ViewsContext';\r\nimport { createCompositeFilterClause } from 'axios/AxiosUtils';\r\nimport { OR_FILTER } from 'axios/AxiosUtils';\r\nimport { isEmpty } from 'common/utils/collections';\r\nimport { treatResponse } from 'common/utils/errorTreatment';\r\nimport treatError from 'common/utils/errorTreatment';\r\n\r\n\r\n\r\n\r\n\r\nconst BLANK_FORM_DATA = {\r\n  \"user_id\": \"\",\r\n  \"user_name\": \"\",\r\n  \"user_registration_id\": \"\",\r\n  \"user_login\": \"\",\r\n  \"user_role\": \"\",\r\n  \"user_department\": \"\",\r\n  \"user_phone\": \"\"\r\n}\r\n\r\nconst GERENCIA_OPTIONS = {\r\n  \"Selecione uma opção\": \"\",\r\n  \"GR1 - JOÃO PESSOA\": \"2\",\r\n  \"GR2 - GUARABIRA\": \"3\",\r\n  \"GR3 - CAMPINA GRANDE\": \"4\",\r\n  \"GR4 - PATOS\": \"5\",\r\n  \"GR5 - CAJAZEIRAS\": \"6\",\r\n  \"COE\": \"7\",\r\n  \"GECOF\": \"GECOF\",\r\n  \"GEOFMT\": \"GEOFMT\",\r\n  \"SEFAZ\": \"SEFAZ\",\r\n  \"---------------------\": \"  \",\r\n  \"USUÁRIO EXTERNO\": \"USUÁRIO EXTERNO\",\r\n}\r\n\r\n\r\nexport default function Auditors() {\r\n  const history = useHistory()\r\n\r\n  const { refresh, refreshFlag, auditorsFilters, setAuditorsFilters } = React.useContext(ViewsContext)\r\n  const { startSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n  const { setIsMap } = React.useContext(NavigationContext);\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n  const [isloading, setIsLoading] = React.useState(false)\r\n  const [pageIndex, setPageIndex] = React.useState(0)\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n\r\n  const [filters, setFilters] = React.useState([])\r\n  const [formData, setFormData] = React.useState(BLANK_FORM_DATA)\r\n  const [oldFormData, setOldFormData] = React.useState(BLANK_FORM_DATA)\r\n  const [invalid, setInvalid] = React.useState(false)\r\n\r\n  const [modalReadonlyMode, setModalReadonlyMode] = React.useState(true);\r\n  const [modalType, setModalType] = React.useState(-1);\r\n  const [isModalActive, setIsModalActive] = React.useState(false);\r\n  const [modalData, setModalData] = React.useState({});\r\n  const toggleModalOn = (type) => { setModalType(type); setIsModalActive(true); };\r\n  const toggleModalOff = () => { setModalType(MODAL_TYPE_ENUM.NONE); setIsModalActive(false); }\r\n  const [isEditionModalActive, setEditionModal] = React.useState(false);\r\n  const toggleEditionModal = () => setEditionModal(prev => !prev);\r\n  const [groupsOptions, setGroupsOptions] = React.useState(GERENCIA_OPTIONS)\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  const mountRetrievalFilters = (filters) => {\r\n    let orClauses = []\r\n    \r\n    orClauses.push(createSimpleFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.INSTITUCIONAL))\r\n    orClauses.push(createSimpleFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.SIGILOSO))\r\n    \r\n\r\n    let groupsFilter = createCompositeFilterClause(\"group_type\", OR_FILTER, orClauses)\r\n    filters.push(groupsFilter)  \r\n    \r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    let filters = []\r\n    //filters.push(createNotFilterClause(\"group_type\", \"int\", \"equal\", GROUP_TYPE_ENUM.CACTO)) //Este comentário deve assumir o lugar do código abaixo caso seja necessário cadastrar usuários que não sejam da sefaz    \r\n    mountRetrievalFilters(filters)\r\n\r\n    let orderBy = createOrderByClause(\"group_id\", \"asc\")\r\n    let httpRequestBody = createQueryHttpRequestBody(filters, orderBy)\r\n\r\n    axiosRetryProxy.post(`${env.apiAddress}/group/read_all`, httpRequestBody)\r\n      .then(res => {\r\n\r\n        let create_options  = {}\r\n        create_options['0'] = {group_id: 0, group_description: \"SEFAZ\", group_name: \"SEFAZ\"}\r\n        \r\n\r\n        for (let group in res.data){\r\n          create_options[res.data[group].group_id] = {group_id: res.data[group].group_id, group_description: res.data[group].group_description, group_name: res.data[group].group_name}\r\n        }\r\n\r\n        setGroupsOptions(create_options)\r\n\r\n      }).catch(err => {\r\n\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n      setIsMap(false);\r\n      refresh()\r\n      if (wasReloaded) {\r\n        startSSE()\r\n        setWasReloaded(false)\r\n      }\r\n\r\n      if (tabIndex === 1) {\r\n        if (filters && filters.length > 0)\r\n          setIsLoading(true)\r\n\r\n        setPageIndex(() => (0))\r\n      } else if (tabIndex === 0) {\r\n        cleanInputs();\r\n        setModalReadonlyMode(false);\r\n      }\r\n\r\n\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filters, pageIndex])\r\n\r\n\r\n  const hasEmptyValues = (obj) => Object.values({ ...obj, \"user_id\": 1, \"user_phone\" : '1' }).some(x => typeof x === 'string' && x.trim() === \"\")\r\n\r\n  const isEqual = (obj1, obj2) => {\r\n    for (let key in obj1) {\r\n      if (obj1[key] !== obj2[key])\r\n        return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  function mountGroupNameText(groupID) {\r\n    if (groupsOptions && groupsOptions[groupID]) {\r\n      return groupsOptions[groupID].group_name\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const cleanInputs = () => {\r\n    setFormData(BLANK_FORM_DATA)\r\n    setOldFormData(BLANK_FORM_DATA)\r\n  }\r\n\r\n  const openEditionModal = (data, readOnlyMode = false) => {\r\n    if (data) {\r\n      setOldFormData(data)\r\n      setFormData(data)\r\n      setInvalid(false);\r\n\r\n      setModalReadonlyMode(readOnlyMode);\r\n      setEditionModal(true)\r\n    }\r\n  }\r\n\r\n  const openRevisionModal = () => {\r\n    if (hasEmptyValues(formData)) {\r\n      setInvalid(true)\r\n    }\r\n    else {\r\n      setInvalid(false)\r\n\r\n      let data = createRevisionModalData(\"Revise os Dados do Auditor Fiscal\",\r\n        ['Matrícula', 'Nome', 'Login', 'Cargo', 'Gerência', 'Telefone'],\r\n        [formData.user_registration_id, formData.user_name, formData.user_login, formData.user_role, formData.user_department, formData.user_phone])\r\n      setModalData(data)\r\n      toggleModalOn(MODAL_TYPE_ENUM.REVISION)\r\n    }\r\n  };\r\n\r\n  const openConfirmationModal = () => {\r\n    if (hasEmptyValues(formData)) {\r\n      setInvalid(true)\r\n    }\r\n    else if (isEqual(formData, oldFormData)) {\r\n      setInvalid(true)\r\n      setModalData({ operation: EDITION, messageType: ERROR, message: \"Não há alterações a serem salvas para este auditor fiscal!\" });\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n    }\r\n    else {\r\n      setInvalid(false)\r\n      setModalData({ entity: \"e Auditor\", operation: EDITION });\r\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n    }\r\n  }\r\n\r\n\r\n  const openDeleteModal = (id, name) => {\r\n    if (id) {\r\n      setFormData({ ...formData, \"user_id\": id });\r\n      setModalData({ entity: \"e Auditor \", operation: EXCLUSION, id: id });\r\n      toggleModalOn(MODAL_TYPE_ENUM.CONFIRMATION)\r\n    }\r\n  }\r\n\r\n\r\n  const createReadHttpRequestBody = () => {\r\n    let orderBy = createOrderByClause(\"user_name\", \"asc\")\r\n    let httpRequestBody = createQueryHttpRequestBody(filters, orderBy)\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createCountHttpRequestBody = () => {\r\n    let httpRequestBody = createBaseHttpRequestBody()\r\n    httpRequestBody['filters'] = filters\r\n\r\n    return httpRequestBody\r\n  }\r\n\r\n  const createAuditor = () => {\r\n\r\n    const httpRequestBody = createEditionHttpRequestBody()\r\n\r\n    httpRequestBody['user_name'] = formData.user_name\r\n    httpRequestBody['user_registration_id'] = formData.user_registration_id\r\n    httpRequestBody['user_login'] = formData.user_login\r\n    httpRequestBody['user_role'] = formData.user_role\r\n    httpRequestBody['user_department'] = formData.user_department\r\n    httpRequestBody['user_phone'] = isEmpty(formData.user_phone) ? \"\" : formData.user_phone\r\n\r\n    setSpinner(true)\r\n    let entity = \"do Auditor\"\r\n    axiosRetryProxy.post(`${env.apiAddress}/auditor/create`, httpRequestBody)\r\n      .then(res => {\r\n        treatResponse(entity, CREATION, 'user_id', res,  setModalData, refresh)\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, CREATION));\r\n        console.log(err)\r\n      }).finally(() => {\r\n        cleanInputs();\r\n        setSpinner(false)\r\n        toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n      })\r\n  }\r\n\r\n\r\n  const deleteAuditor = (id) => {\r\n    let httpRequestBody = createEditionHttpRequestBody()\r\n\r\n    setSpinner(true)\r\n    toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n    if (isEditionModalActive) {\r\n      toggleEditionModal()\r\n    }\r\n\r\n    let entity = \"do Auditor\"\r\n    axiosRetryProxy.delete(`${env.apiAddress}/auditor/delete/${id}`, { data: httpRequestBody })\r\n      .then(res => {\r\n        treatResponse(entity, EXCLUSION, 'user_id', res,  setModalData, refresh)\r\n      }).catch(err => {\r\n        setModalData(treatError(err, entity, EXCLUSION));\r\n      }).finally(() => {\r\n        setSpinner(false)\r\n      })\r\n  }\r\n\r\n  const updateAuditor = () => {\r\n    if (hasEmptyValues(formData))\r\n      setInvalid(true)\r\n    else {\r\n\r\n\r\n      setSpinner(true)\r\n      toggleEditionModal()\r\n      toggleModalOn(MODAL_TYPE_ENUM.MESSAGE)\r\n\r\n      const httpRequestBody = createEditionHttpRequestBody()\r\n\r\n      httpRequestBody['user_name'] = formData.user_name\r\n      httpRequestBody['user_registration_id'] = formData.user_registration_id\r\n      httpRequestBody['user_login'] = formData.user_login\r\n      httpRequestBody['user_role'] = formData.user_role\r\n      httpRequestBody['user_department'] = formData.user_department\r\n      httpRequestBody['user_phone'] = isEmpty(formData.user_phone) ? \"\" : formData.user_phone\r\n\r\n      let entity = \"do Auditor\"\r\n      axiosRetryProxy.patch(`${env.apiAddress}/auditor/update/${formData.user_id}`, httpRequestBody)\r\n        .then(res => {\r\n          treatResponse(entity, EDITION, 'user_id', res,  setModalData, refresh)\r\n        }).catch(err => {\r\n          setModalData(treatError(err, entity, EDITION));\r\n        }).finally(() => {\r\n          setSpinner(false)\r\n          cleanInputs()\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  const isDisabled = () => {\r\n    return !isAdmin()\r\n  }\r\n\r\n  const toInputUppercase = e => {\r\n    e.target.value = (\"\" + e.target.value).toUpperCase();\r\n  };\r\n\r\n\r\n  const EditionForm = (props) => {\r\n    return (<Form key={\"A\"} style={{ margin: \"5px 0px 10px 0px\" }} >\r\n      <FormGroup row>\r\n        <Label for=\"exampleEmail\" sm={6}><b>Matrícula</b></Label>\r\n        <Col sm={12}>\r\n          <Input key={\"A0\"}\r\n            value={formData.user_registration_id}\r\n            readOnly={modalReadonlyMode}\r\n            maxLength=\"15\"\r\n            onChange={e => setFormData({ ...formData, 'user_registration_id': e.target.value })}\r\n            invalid={invalid && (formData.user_registration_id.trim() === \"\")}\r\n          />\r\n        </Col >\r\n      </FormGroup >\r\n\r\n      <FormGroup row>\r\n        <Label for=\"exampleEmail\" sm={6}><b>Nome</b></Label>\r\n        <Col sm={12}>\r\n          <Input key={\"A1\"}\r\n            value={formData.user_name}\r\n            readOnly={modalReadonlyMode}\r\n            maxLength=\"70\"\r\n            onInput={toInputUppercase}\r\n            onKeyPress={event => { NumericFilter(event) }}\r\n            onChange={e => setFormData({ ...formData, 'user_name': e.target.value })}\r\n            invalid={invalid && (formData.user_name.trim() === \"\")}\r\n          />\r\n        </Col >\r\n      </FormGroup >\r\n\r\n      <FormGroup row>\r\n        <Label for=\"exampleEmail\" sm={6}><b>Login</b></Label>\r\n        <Col sm={12}>\r\n          <Input\r\n            key={\"A2\"}\r\n            value={formData.user_login}\r\n            readOnly={modalReadonlyMode}\r\n            maxLength=\"70\"\r\n            onKeyPress={event => { NumericFilter(event) }}\r\n            onChange={e => setFormData({ ...formData, 'user_login': e.target.value })}\r\n            invalid={invalid && (formData.user_login.trim() === \"\")}\r\n          />\r\n        </Col >\r\n      </FormGroup >\r\n\r\n      <FormGroup row>\r\n        <Label for=\"exampleEmail\" sm={6}><b>Cargo</b></Label>\r\n        <Col sm={12}>\r\n          <Input\r\n            key={\"A3\"}\r\n            value={formData.user_role}\r\n            readOnly={modalReadonlyMode}\r\n            maxLength=\"50\"\r\n            onChange={e => setFormData({ ...formData, 'user_role': e.target.value })}\r\n            invalid={invalid && (formData.user_role.trim() === \"\")}\r\n          />\r\n        </Col >\r\n      </FormGroup >\r\n\r\n\r\n      <FormGroup row>\r\n        <Label for=\"selectGerencia\" sm={6}><b>Gerência</b></Label>\r\n        <Col sm={12}>\r\n          <Input\r\n            type=\"select\" key={\"A4\"}\r\n            name=\"selectGerencia\"\r\n            id=\"selectGerencia\"\r\n            readOnly={modalReadonlyMode} disabled={modalReadonlyMode}\r\n            value={formData.user_department}\r\n            //defaultValue = {groups}\r\n            invalid={invalid && formData.user_department.trim() === \"\"}\r\n            onChange={e => setFormData({ ...formData, 'user_department': e.target.value })}\r\n            multiple={false}\r\n          >\r\n            <option key={\"\"} value={\"\"}>Selecione uma opção</option>\r\n            <option disabled>───────────────────</option>\r\n            \r\n        \r\n            {Object.entries(groupsOptions).map((key_value) => {\r\n              return (\r\n                <option key={key_value[0]} value={key_value[0]}>{key_value[1].group_description}</option>\r\n              )\r\n            })\r\n            }\r\n            <option disabled>───────────────────</option>\r\n            \r\n            <option key={\"-1\"} value={\"-1\"}>Usuário Externo</option>\r\n                       \r\n\r\n          </Input>\r\n        </Col>\r\n      </FormGroup>\r\n\r\n      <FormGroup row>\r\n        <Label for=\"exampleEmail\" sm={6}><b>Telefone</b></Label>\r\n        <Col sm={12}>\r\n          <Input\r\n            key={\"A5\"}\r\n            value={formData.user_phone}\r\n            readOnly={modalReadonlyMode}\r\n            maxLength=\"16\"\r\n            onChange={e => setFormData({ ...formData, 'user_phone': e.target.value })}\r\n            invalid={invalid && (formData.user_phone.trim() === \"\")}\r\n          />\r\n        </Col>\r\n      </FormGroup>\r\n\r\n\r\n      {(props.isCreationForm) ?\r\n        <Button color=\"primary\" onClick={() => { openRevisionModal() }} style={{ marginTop: '2rem' }}>Cadastrar</Button>\r\n        : <ModalEditionButtons\r\n          id={formData.user_id} data={formData}\r\n          modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} isDisabled={isDisabled}\r\n          editionAction={setModalReadonlyMode} deleteAction={openDeleteModal}\r\n          saveAction={openConfirmationModal} cancelAction={toggleEditionModal}\r\n        />\r\n      }\r\n\r\n    </Form >\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Tabs names={['Cadastrar Novo Auditor Fiscal', 'Gerenciamento de Auditores Fiscais']} index={[tabIndex, setTabIndex]} />\r\n        <Card className=\"card\" style={{ borderTopLeftRadius: '0px' }}>\r\n          <CardBody>\r\n            {tabIndex === 0 &&\r\n              EditionForm({ isCreationForm: true, isModal: false })\r\n            }\r\n            {tabIndex === 1 &&\r\n              <>\r\n                <TagsInput\r\n                  tagsState={[auditorsFilters, setAuditorsFilters,]}\r\n                  setQuery={setFilters}\r\n                  columns={{\r\n                    \"Matrícula do Auditor\": {\r\n                      field: \"user_registration_id\",\r\n                      column_type: \"char\",\r\n                      size: 8,\r\n                      only_numbers_filter_input : true\r\n                    },\r\n                    \"Nome do Auditor\": {\r\n                      field: \"user_name\",\r\n                      column_type: \"varying\",\r\n                      size: 70,\r\n                      only_letters_filter_input : true\r\n                    },\r\n                    \"Cargo do Auditor\": {\r\n                      field: \"user_role\",\r\n                      column_type: \"varying\",\r\n                      size: 20,\r\n                      only_letters_filter_input : true\r\n                    },\r\n                    \"Gerencia do Auditor\": {\r\n                      field: \"user_department\",\r\n                      column_type: \"varying\",\r\n                      size: 20,\r\n                      accent_filter_input: true\r\n                    },\r\n                  }} />\r\n                <Table\r\n                  dataUrl={'/auditor/read_all'}\r\n                  countUrl=\"/auditor/count_auditors\"\r\n                  requestBody={createReadHttpRequestBody}\r\n                  countRequestBody={createCountHttpRequestBody}\r\n                  tags={filters}\r\n                  fillData\r\n                  retrieveData={(data) => data}\r\n                  refresh={refreshFlag}\r\n                  trProps={row => { return { onDoubleClick: (e) => { openEditionModal(row, true) } } }}\r\n                  loading={[isloading, setIsLoading]}\r\n                  columns={{\r\n                    \"Matrícula\": {\r\n                      args: \"user_registration_id\",\r\n                      tdStyle: { wordBreak: 'break-word' }\r\n                    },\r\n                    \"Nome\": {\r\n                      args: \"user_name\",\r\n                      tdStyle: { wordBreak: 'break-word' },\r\n                    },\r\n                    \"Login\": {\r\n                      args: \"user_login\",\r\n                      tdStyle: { wordBreak: 'break-word' }\r\n                    },\r\n                    \"Cargo\": {\r\n                      args: \"user_role\",\r\n                      thStyle: { textAlign: 'center' },\r\n                      tdStyle: { wordBreak: 'break-word', 'textAlign': 'center' }\r\n                    },\r\n                    \"Gerência\": {\r\n                      args: \"user_department\",\r\n                      thStyle: { textAlign: 'center' },\r\n                      tdStyle: { wordBreak: 'break-word', 'textAlign': 'center' },\r\n                      func: group => mountGroupNameText(group)\r\n                      \r\n                    },\r\n                    \"Telefone\": {\r\n                      args: \"user_phone\",\r\n                      thStyle: { textAlign: 'center' },\r\n                      tdStyle: { wordBreak: 'break-word', 'textAlign': 'center' }\r\n                    },\r\n                    \"Ações\": {\r\n                      args: [\"user_id\", \"user_name\"],\r\n                      tdStyle: { textAlign: 'center' },\r\n                      thStyle: { textAlign: 'center' },\r\n                      Func: ({ data, row_data }) => <EditionButtons isModal={false} data={row_data} id={data[0]}\r\n                        modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} isDisabled={isDisabled}\r\n                        editionAction={openEditionModal} deleteAction={openDeleteModal} />\r\n\r\n                    }\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n\r\n\r\n\r\n          </CardBody >\r\n        </Card >\r\n      </div >\r\n      {isEditionModalActive &&\r\n        <Modal\r\n          isOpen={isEditionModalActive} toggle={() => { cleanInputs(); toggleEditionModal() }}\r\n          style={{ maxWidth: '70%' }}\r\n          size=\"lg\"\r\n        >\r\n          <ModalHeader toggle={() => { cleanInputs(); toggleEditionModal() }}>Auditor Fiscal Cadastrado</ModalHeader>\r\n          <ModalBody style={{ justifyContent: 'center', alignContent: 'center', padding: '0.5rem' }}>\r\n            {EditionForm({ isCreationForm: false, isModal: true })}\r\n          </ModalBody>\r\n        </Modal>\r\n      }\r\n\r\n      {modalType === MODAL_TYPE_ENUM.CONFIRMATION && <ConfirmationModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethods={[undefined, updateAuditor, deleteAuditor]} />}\r\n      {modalType === MODAL_TYPE_ENUM.MESSAGE && <MessageModal show={isModalActive} toggle={toggleModalOff} data={modalData} spinner={spinner} />}\r\n      {modalType === MODAL_TYPE_ENUM.REVISION && <RevisionModal show={isModalActive} toggle={toggleModalOff} data={modalData} actionMethod={createAuditor} spinner={spinner} />}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}