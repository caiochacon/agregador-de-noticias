{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\modals\\\\MessageModal.js\";\nimport React from \"react\";\nimport { Modal, ModalBody, ModalHeader, Spinner } from 'reactstrap';\nimport { FcOk, FcCancel, FcHighPriority } from \"react-icons/fc\";\nimport { CANCEL, ERROR, OK } from \"./ModalConsts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VALID_MESSAGE_TYPES = [OK, CANCEL, ERROR];\nconst ENTITY_TOKEN = \"#ENTITY_TOKEN#\";\nconst OPERATION_TOKEN = \"#OPERATION_TOKEN#\";\nconst BASE_MESSAGES = [\"Cadastro #ENTITY_TOKEN# #OPERATION_TOKEN#!\", \"\", \"Falha na #OPERATION_TOKEN# #ENTITY_TOKEN#!\"];\nconst ICON_MESSAGES = [/*#__PURE__*/_jsxDEV(FcOk, {\n  size: '6.5rem'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 24\n}, this), /*#__PURE__*/_jsxDEV(FcCancel, {\n  size: '6.5rem'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 49\n}, this), /*#__PURE__*/_jsxDEV(FcHighPriority, {\n  size: '6.5rem'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 78\n}, this)];\nconst ERROR_OPERATIONS = [\"criação\", \"atualização\", \"exclusão\"];\nconst OK_OPERATIONS = [\"realizado com Sucesso\", \"atualizado com Sucesso\", \"excluído com Sucesso\"];\nexport default function MessageModal(_ref) {\n  let {\n    show,\n    toggle,\n    data,\n    spinner = false\n  } = _ref;\n\n  const mountMessage = () => {\n    if (data.message) return data.message;\n    if (!VALID_MESSAGE_TYPES.includes(data.messageType)) return \"\";\n    let msg = BASE_MESSAGES[data.messageType];\n    msg = msg.replace(ENTITY_TOKEN, data.entity);\n\n    if (data.messageType === OK) {\n      msg = msg.replace(OPERATION_TOKEN, OK_OPERATIONS[data.operation]);\n    } else if (data.messageType === ERROR) {\n      msg = msg.replace(OPERATION_TOKEN, ERROR_OPERATIONS[data.operation]);\n    }\n\n    return msg;\n  };\n\n  const mountIconTag = () => {\n    if (VALID_MESSAGE_TYPES.includes(data.messageType)) {\n      return ICON_MESSAGES[data.messageType];\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: show,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      style: {\n        'textAlign': 'center'\n      },\n      children: spinner ? /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"info\",\n        style: {\n          width: \"4.0rem\",\n          height: \"4.0rem\",\n          margin: '4.0rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [mountIconTag(), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: mountMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), data.instructions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n_c = MessageModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageModal\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/modals/MessageModal.js"],"names":["React","Modal","ModalBody","ModalHeader","Spinner","FcOk","FcCancel","FcHighPriority","CANCEL","ERROR","OK","VALID_MESSAGE_TYPES","ENTITY_TOKEN","OPERATION_TOKEN","BASE_MESSAGES","ICON_MESSAGES","ERROR_OPERATIONS","OK_OPERATIONS","MessageModal","show","toggle","data","spinner","mountMessage","message","includes","messageType","msg","replace","entity","operation","mountIconTag","width","height","margin","whiteSpace","instructions"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport { FcOk, FcCancel, FcHighPriority } from \"react-icons/fc\";\r\nimport { CANCEL, ERROR, OK } from \"./ModalConsts\";\r\n\r\nconst VALID_MESSAGE_TYPES = [OK, CANCEL, ERROR]\r\n\r\nconst ENTITY_TOKEN = \"#ENTITY_TOKEN#\"\r\nconst OPERATION_TOKEN = \"#OPERATION_TOKEN#\"\r\n\r\nconst BASE_MESSAGES = [\"Cadastro #ENTITY_TOKEN# #OPERATION_TOKEN#!\", \"\", \"Falha na #OPERATION_TOKEN# #ENTITY_TOKEN#!\"]\r\nconst ICON_MESSAGES = [<FcOk size={'6.5rem'}/>, <FcCancel size={'6.5rem'}/>, <FcHighPriority size={'6.5rem'}/>]\r\n\r\nconst ERROR_OPERATIONS = [\"criação\", \"atualização\", \"exclusão\"]\r\nconst OK_OPERATIONS = [\"realizado com Sucesso\", \"atualizado com Sucesso\", \"excluído com Sucesso\"]\r\n\r\nexport default function MessageModal({ show, toggle, data, spinner = false }) {\r\n\r\n  const mountMessage = () => {\r\n    if (data.message)\r\n      return data.message\r\n\r\n    if (!VALID_MESSAGE_TYPES.includes(data.messageType))\r\n      return \"\"\r\n\r\n    let msg = BASE_MESSAGES[data.messageType]\r\n    msg = msg.replace(ENTITY_TOKEN, data.entity)\r\n    if (data.messageType === OK) {\r\n      msg = msg.replace(OPERATION_TOKEN, OK_OPERATIONS[data.operation])\r\n    } else if (data.messageType === ERROR) {\r\n      msg = msg.replace(OPERATION_TOKEN, ERROR_OPERATIONS[data.operation])\r\n    }\r\n\r\n    return msg\r\n  }\r\n\r\n  const mountIconTag = () => {\r\n    if (VALID_MESSAGE_TYPES.includes(data.messageType) ) {\r\n      return ICON_MESSAGES[data.messageType]\r\n    } else {\r\n      return \"\"\r\n    }\r\n  }\r\n\r\n  return <Modal isOpen={show} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}></ModalHeader>\r\n    <ModalBody style={{ 'textAlign': 'center' }}>\r\n      {\r\n        spinner ?\r\n          <Spinner color=\"info\" style={{ width: \"4.0rem\", height: \"4.0rem\", margin: '4.0rem' }} />\r\n          :\r\n            <div>\r\n              {mountIconTag()}\r\n              <h3 style={{ whiteSpace: 'pre-wrap' }} >{mountMessage()}</h3>\r\n              {data.instructions}\r\n            </div>            \r\n      }\r\n    </ModalBody>\r\n  </Modal>;\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}