{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Maps.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport { useJsApiLoader } from '@react-google-maps/api';\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Row, Col, Input, Button, Modal, ModalHeader, ModalBody, ListGroup, ListGroupItem, Spinner, Alert, InputGroupText, InputGroup } from \"reactstrap\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport axios from \"axios\";\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport mapOptions from 'common/mapOptions.js';\nimport env from 'common/enviroment.js';\nimport USER_ID_ENUM from 'common/enumerators/UserIdEnum';\nimport Table from 'components/tables/Table';\nimport Tabs from 'components/Tabs';\nimport MapLegend from 'components/MapLegend';\nimport { MapsContext } from 'context/MapsContext';\nimport { WarningsContext } from 'context/WarningsContext';\nimport { VehicleContext } from 'context/VehicleContext';\nimport { AuditorsContext } from 'context/AuditorsContext';\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\nimport { isLoggedIn } from 'common/SessionUtils';\nimport { getCortexToken } from 'common/SessionUtils';\nimport { getUserRole } from 'common/SessionUtils';\nimport WarningModal from 'components/modals/WarningModal/WarningModal';\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\nimport { getUserLogin } from 'common/SessionUtils';\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\nimport { isLocked } from 'common/enumerators/LockEnum';\nimport { isTreated } from 'common/enumerators/NotificationStatus';\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL } from \"common/model/Notification\";\nimport { hasUserLoggedData } from 'common/SessionUtils';\nimport { getUserRegistrationID } from 'common/SessionUtils';\nimport { getUserID } from 'common/SessionUtils';\nimport { getUserName } from 'common/SessionUtils';\nimport { Notification } from \"common/model/Notification\";\nimport { isEmpty } from 'common/utils/collections';\nimport { getNowDateTimeString } from 'common/utils/validate';\nimport LocationTrackingModal from 'components/modals/LocationTrackingModal/LocationTrackingModal';\nimport useToggle from 'common/hooks/useToogle';\nimport { useModalWithData } from 'common/hooks/useModalWithData';\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Maps(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const body = {\n    'cortex_token': getCortexToken(),\n    'role': getUserRole()\n  };\n  const history = useHistory();\n  const {\n    setplaca\n  } = React.useContext(VehicleContext);\n  const {\n    warnings,\n    traffic,\n    changeVisto,\n    printIsMap,\n    startSSE,\n    wasReloaded,\n    setWasReloaded\n  } = React.useContext(WarningsContext);\n  const {\n    getAuditorRegistry\n  } = React.useContext(AuditorsContext);\n  const {\n    activeCameras,\n    pointsData,\n    setPointsData,\n    getCamerasData\n  } = React.useContext(MapsContext);\n  const {\n    warningsViewed,\n    setWarningsViewed\n  } = React.useContext(WarningsUpdateContext);\n  const [spinner, setSpinner] = React.useState(false); //const [modalMaps, setModalMaps] = React.useState(false)\n\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const [index, setIndex] = useState(0); //const toggleMapsModal = () => setModalMaps(!modalMaps)\n\n  const [modalPlaca, setModalPlaca] = React.useState(false);\n\n  const toggleModalPlaca = () => setModalPlaca(!modalPlaca);\n\n  const [warningModalData, setWarningModalData] = React.useState({});\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA);\n  const [activeModal, setActiveModal] = React.useState(-1);\n\n  const toggleModal = function () {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    setActiveModal(i);\n  };\n\n  const [reload, setReload] = React.useState(false);\n\n  const toggleReload = () => setReload(!reload);\n\n  const [fetchDataFlag, toggleFetchData] = useToggle(false);\n  const {\n    modalData,\n    setModalData,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff\n  } = useModalWithData();\n  const [selectedFilter, setSelectedFilter] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const [isSearchEnabled, setIsSearchEnabled] = useState(false);\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  const {\n    isLoaded: googleMapLoaded,\n    loadError: googleMapError\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: env.googleApiKey\n  });\n  const [typeCameraFilters, setTypeCameraFilters] = React.useState({\n    'DNIT': true,\n    'PRF': true,\n    'SEMOB': true,\n    'Estadual': true\n  });\n  const filterOptions = [{\n    value: 'passagem',\n    label: 'Passagem'\n  }, {\n    value: 'local',\n    label: 'Local'\n  }, {\n    value: 'uf',\n    label: 'UF'\n  }, {\n    value: 'placa',\n    label: 'Placa'\n  }, {\n    value: 'veiculo',\n    label: 'Veículo'\n  }, {\n    value: 'modelo',\n    label: 'Modelo'\n  }, {\n    value: 'alerta',\n    label: 'Alerta'\n  }];\n  const displayLegend = {\n    \"DNIT\": \"DNIT\",\n    \"EQUIPAMENTOS PRF\": \"PRF\",\n    \"Pontos Estado\": \"ESTADO\" //\"SUGESTÕES\": \"SUGESTÕES\"\n\n  };\n  const colors = {\n    \"DNIT\": \"#0f9d58\",\n    \"EQUIPAMENTOS PRF\": \"#0288d1\",\n    \"Pontos Estado\": \"#ffd600\" //\"SUGESTÕES\": \"#801e0f\"\n\n  };\n  const categories = Object.keys(colors);\n  const [activeMarkers, setActiveMarkers] = React.useState(new Array(categories.length));\n\n  const titleCase = text => {\n    return text.toLowerCase().split(' ').map(word => {\n      return word[0].toUpperCase() + word.slice(1);\n    }).join(' ');\n  };\n\n  const handleFilterChange = value => {\n    setSelectedFilter(value);\n    setIsSearchEnabled(true);\n    console.log(\"Filtro selecionado: \".concat(value));\n  };\n\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const ChangeKey = nome => {\n    let mudar = [];\n    nome.split('').forEach((letra, index) => {\n      if (nome[index] === \"\".concat(nome[index].toUpperCase())) {\n        mudar.push(nome[index]);\n      }\n    });\n    mudar.forEach(function (letra) {\n      nome = nome.replace(\"\".concat(letra), \" \".concat(letra.toLowerCase()));\n    });\n    return titleCase(nome);\n  };\n\n  const pointClick = index => {\n    return () => {\n      let points = [...pointsData];\n      points[index] = { ...points[index],\n        active: !points[index].active\n      };\n      setPointsData(points);\n    };\n  };\n\n  const markerClick = index => () => {\n    let markers = [...activeMarkers];\n    markers[index] = !markers[index];\n    setActiveMarkers(markers);\n  }; //verificar props do container\n  //Aparentemente tem um valor 'auto' para ajustar automaticamente o tamanho da altura para caber\n\n\n  const containerStyle = {\n    width: '100%',\n    height: 'auto'\n  };\n\n  const setEditionDataOLD = (warning, data) => {\n    const auditorData = getAuditorRegistry(getUserLogin(), USER_ID_ENUM.USER_LOGIN);\n\n    if (warning) {\n      if (warning['fiscal_action_auditors']) {\n        let auditors = {};\n\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_NAME);\n        }\n\n        data[\"fiscal_action_auditors\"] = auditors;\n      }\n\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_report_auditor\"], USER_ID_ENUM.USER_ID);\n\n      if (monitoringAuditor && Object.keys(monitoringAuditor).length > 0) {\n        data[\"monitoring_user_id\"] = monitoringAuditor['user_id'];\n        data[\"monitoring_user_name\"] = monitoringAuditor['user_name'];\n        data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id'];\n      } else {\n        data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\";\n\n        if (auditorData) {\n          data[\"monitoring_user_registration_id\"] = auditorData.user_registration_id;\n          data[\"monitoring_user_id\"] = auditorData.user_id;\n          data[\"monitoring_user_name\"] = auditorData.user_name;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  const setEditionData = (warning, data) => {\n    if (!warning) return data;\n    let status = warning.fiscal_notification_status;\n    data['fiscal_action_designation_report'] = isEmpty(warning['fiscal_action_designation_report']) ? \"\" : warning['fiscal_action_designation_report']; //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS. \n\n    if (isTreated(warning) || isLocked(warning)) {\n      if (!isEmpty(warning.fiscal_action_auditors)) {\n        let homologationAuditor = getAuditorRegistry(warning[\"fiscal_action_homologation_auditor\"], USER_ID_ENUM.USER_LOGIN);\n        data[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id'];\n      }\n\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_designation_auditor\"], USER_ID_ENUM.USER_LOGIN);\n      data[\"monitoring_user_id\"] = monitoringAuditor['user_id'];\n      data[\"monitoring_user_name\"] = monitoringAuditor['user_name'];\n      data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id'];\n      data[\"monitoring_user_login\"] = monitoringAuditor['user_login'];\n      data[\"fiscal_action_designation_date\"] = getNowDateTimeString();\n      data[\"fiscal_action_designation_auditor\"] = monitoringAuditor['user_name'];\n      let auditors = {}; //Tratamento para os casos de designação sem comando fiscal. \n\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO) {\n        auditors[EM_MONITORAMENTO] = {\n          'user_name': EM_MONITORAMENTO_LABEL,\n          'user_login': EM_MONITORAMENTO_LABEL\n        };\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\n        auditors[SEM_COMANDO_FISCAL] = {\n          'user_name': SEM_COMANDO_FISCAL_LABEL,\n          'user_login': SEM_COMANDO_FISCAL_LABEL\n        };\n      } else if (warning['fiscal_action_auditors']) {\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN);\n        }\n      }\n\n      data[\"fiscal_action_auditors\"] = auditors;\n    } else {\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA E O LOCK ESTÁ DESATIVADO, TODOS OS CAMPOS ESTÃO VAZIOS E O USUÁRIO LOGADO PASSARÁ A SER RESPONSÁVEL PELO MONITORAMENTO\n      data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\";\n\n      if (hasUserLoggedData()) {\n        data[\"monitoring_user_registration_id\"] = getUserRegistrationID();\n        data[\"monitoring_user_id\"] = getUserID();\n        data[\"monitoring_user_name\"] = getUserName();\n        data[\"monitoring_user_login\"] = getUserLogin();\n      }\n    }\n\n    return data;\n  };\n\n  const openWarningModal = warning => {\n    let data = { ...DESIGNATION_FORM_DATA,\n      fiscal_action_auditors: {}\n    };\n    let notificationObj = new Notification(warning);\n    setFormData(setEditionData(warning, data));\n    setWarningModalData(notificationObj);\n    toggleModal(0);\n  };\n\n  const openMapModal = (plate, location) => {\n    let modalData = {\n      plate: plate,\n      location: location\n    };\n    setModalData(modalData);\n    toggleModalOn(MODAL_TYPE_ENUM.MAP, modalData);\n    toggleFetchData();\n  };\n\n  const Local = props => {\n    if (props && props.event_json) {\n      let placa = props.event_json['evento_infevento_nrplaca'];\n      let local = props.event_json['evento_infevento_dsreflocal'];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: props.location !== \"null\" && \"underlined_text\",\n          onClick: () => {\n            openMapModal(placa, local);\n          },\n          style: {\n            cursor: props.location !== \"null\" && \"pointer\",\n            color: '#2322c8'\n          },\n          children: props.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return \"-\";\n    }\n  };\n\n  React.useEffect(() => {\n    if (isLoggedIn()) {\n      printIsMap();\n      getCamerasData();\n      changeVisto();\n\n      if (wasReloaded) {\n        startSSE();\n        setWasReloaded(false);\n        setWasReloaded(false);\n      }\n    } else {\n      history.push('/login');\n    }\n\n    testAndUnlockWarning(warningsViewed, setWarningsViewed); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    setIndex(0); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tabIndex]);\n\n  const FilterEvent = (data_row, field_to_filter) => {\n    if (data_row[field_to_filter].includes('_LPD')) {\n      if (typeCameraFilters.DNIT) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (data_row[field_to_filter].startsWith('BR')) {\n      if (typeCameraFilters.PRF) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (data_row[field_to_filter].startsWith('PB')) {\n      if (typeCameraFilters.Estadual) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (!typeCameraFilters.SEMOB) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const createMapModal = useMemo(() => /*#__PURE__*/_jsxDEV(LocationTrackingModal, {\n    show: isModalActive,\n    googleMapOnLoad: googleMapLoaded,\n    googleMapOnError: googleMapError,\n    toggle: toggleModalOff,\n    data: modalData,\n    fetchData: fetchDataFlag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 40\n  }, this), [modalData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: [googleMapError && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"N\\xE3o foi poss\\xEDvel carregar o GoogleMap.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 32\n          }, this), googleMapLoaded ? /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-plain\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"map\",\n                className: \"map\",\n                style: {\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(MapLegend, {\n                  categories: categories,\n                  colors: colors,\n                  activeCategories: activeMarkers,\n                  onClick: markerClick,\n                  display: displayLegend\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n                  mapContainerStyle: containerStyle,\n                  center: props.center,\n                  zoom: props.zoom,\n                  options: mapOptions,\n                  children: activeCameras.filter(point => {\n                    return !activeMarkers[categories.indexOf(point['category'])];\n                  }).map((point, index) =>\n                  /*#__PURE__*/\n                  //Marcação passando ícone\n                  _jsxDEV(Marker, {\n                    className: \"map-icon\",\n                    position: {\n                      lat: point['nrlatitude'],\n                      lng: point['nrlongitude']\n                    },\n                    onClick: pointClick(index),\n                    zIndex: pointsData[index].active ? categories.length + 1 : categories.length - categories.indexOf(point['category']),\n                    options: {\n                      icon: {\n                        url: \"https://ik.imagekit.io/exi1dv80wm/pin/\".concat(pointsData[index].active ? '00ff00' : colors[point['category']].slice(-6), \".png\"),\n                        scaledSize: {\n                          height: 26,\n                          width: 21\n                        }\n                      }\n                    }\n                  }, \"marker-\".concat(index), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 34\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            names: ['Tabela de alertas', 'Tabela de tráfego'],\n            index: [tabIndex, setTabIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              borderTopLeftRadius: '0px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n                  style: {\n                    backgroundColor: '#51cbce',\n                    fontWeight: 'bold',\n                    color: 'white',\n                    borderColor: '#51cbce',\n                    margin: ' 0 30px 0 0',\n                    padding: '0 6px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    addon: true,\n                    \"aria-label\": \"Checkbox for following text input\",\n                    type: \"checkbox\",\n                    checked: typeCameraFilters.Estadual,\n                    style: {\n                      margin: '0 15px 0 0',\n                      transform: 'scale(1.3)'\n                    },\n                    onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                      'Estadual': event.target.checked\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 21\n                  }, this), \"Estadual\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroupText, {\n                  style: {\n                    backgroundColor: '#51cbce',\n                    fontWeight: 'bold',\n                    color: 'white',\n                    borderColor: '#51cbce',\n                    margin: ' 0 30px 0 0',\n                    padding: '0 6px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    addon: true,\n                    \"aria-label\": \"Checkbox for following text input\",\n                    type: \"checkbox\",\n                    checked: typeCameraFilters.PRF,\n                    style: {\n                      margin: '0 15px 0 0',\n                      transform: 'scale(1.3)'\n                    },\n                    onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                      'PRF': event.target.checked\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 21\n                  }, this), \"PRF\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroupText, {\n                  style: {\n                    backgroundColor: '#51cbce',\n                    fontWeight: 'bold',\n                    color: 'white',\n                    borderColor: '#51cbce',\n                    margin: ' 0 30px 0 0',\n                    padding: '0 6px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    addon: true,\n                    \"aria-label\": \"Checkbox for following text input\",\n                    type: \"checkbox\",\n                    checked: typeCameraFilters.DNIT,\n                    style: {\n                      margin: '0 15px 0 0',\n                      transform: 'scale(1.3)'\n                    },\n                    onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                      'DNIT': event.target.checked\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 21\n                  }, this), \"DNIT\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroupText, {\n                  style: {\n                    backgroundColor: '#51cbce',\n                    fontWeight: 'bold',\n                    color: 'white',\n                    borderColor: '#51cbce',\n                    margin: ' 0 30px 0 0',\n                    padding: '0 6px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    addon: true,\n                    \"aria-label\": \"Checkbox for following text input\",\n                    type: \"checkbox\",\n                    checked: typeCameraFilters.SEMOB,\n                    style: {\n                      margin: '0 15px 0 0',\n                      transform: 'scale(1.3)'\n                    },\n                    onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                      'SEMOB': event.target.checked\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 21\n                  }, this), \"SEMOB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filters-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filter-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"filter-options\",\n                    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                      isOpen: dropdownOpen,\n                      toggle: toggleDropdown,\n                      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n                        caret: true,\n                        color: \"primary\",\n                        children: selectedFilter || 'Selecionar:'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                        children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(DropdownItem, {\n                          onClick: () => handleFilterChange(option.value),\n                          children: option.label\n                        }, option.value, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 536,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 534,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Pesquisar...\",\n                        value: searchTerm,\n                        onChange: handleSearchChange,\n                        disabled: !isSearchEnabled\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 541,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(Table, {\n                    state: [index, setIndex],\n                    data: warnings.filter(warning => FilterEvent(warning, 'evento_infevento_dsreflocal')),\n                    invalid: [\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"],\n                    pageSize: 10,\n                    columns: {\n                      \"Alerta\": {\n                        Func: props => /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: props.data\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 563,\n                          columnNumber: 31\n                        }, this),\n                        args: \"nome\"\n                      },\n                      \"Passagem\": {\n                        Func: props => {\n                          const dateObj = new Date(props.data).toLocaleString(\"pt-BR\").split(' ');\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              textAlign: 'center',\n                              maxWidth: 80\n                            },\n                            children: [dateObj[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 573,\n                              columnNumber: 101\n                            }, this), dateObj[1]]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 573,\n                            columnNumber: 38\n                          }, this);\n                        },\n                        args: \"evento_infevento_dhregpassagem\"\n                      },\n                      \"Local\": {\n                        Func: props => {\n                          return /*#__PURE__*/_jsxDEV(Local, {\n                            location: props.data,\n                            event_json: props.row_data\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 580,\n                            columnNumber: 33\n                          }, this);\n                        },\n                        args: \"evento_infevento_dsreflocal\"\n                      },\n                      \"UF\": \"evento_infevento_sguf\",\n                      \"Placa\": {\n                        Func: props => /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"links-table\",\n                          onClick: () => {\n                            setModalData(props.row_data);\n                            toggleModalPlaca();\n                          },\n                          children: props.data\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 588,\n                          columnNumber: 31\n                        }, this),\n                        args: \"evento_infevento_nrplaca\",\n                        headerStyle: {\n                          textAlign: \"center\"\n                        }\n                      },\n                      \"Veículo\": \"evento_infevento_dstipoveiculo\",\n                      \"Modelo\": \"evento_infevento_nomarcamodelo\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 23\n                  }, this), tabIndex === 1 && /*#__PURE__*/_jsxDEV(Table, {\n                    state: [index, setIndex],\n                    data: traffic.filter(event => FilterEvent(event, 'dsreflocal')),\n                    pageSize: 100,\n                    invalid: [\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"],\n                    style: {\n                      fontSize: '0.8rem'\n                    },\n                    columns: {\n                      \"Passagem\": {\n                        Func: props => {\n                          const dateObj = new Date(props.data);\n                          const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ');\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              textAlign: 'center',\n                              maxWidth: 80\n                            },\n                            children: [dateHour[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 615,\n                              columnNumber: 102\n                            }, this), dateHour[1]]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 615,\n                            columnNumber: 38\n                          }, this);\n                        },\n                        args: \"dhregpassagem\"\n                      },\n                      \"Local\": {\n                        Func: props => /*#__PURE__*/_jsxDEV(Local, {\n                          location: props.data,\n                          event_json: props.row_data\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 620,\n                          columnNumber: 46\n                        }, this),\n                        args: \"dsreflocal\"\n                      },\n                      \"UF\": \"sguf\",\n                      \"Placa\": {\n                        Func: _s(props => {\n                          _s();\n\n                          const [modal, setModal] = React.useState(false);\n                          const [dataVehicle, setdataVehicle] = React.useState([]);\n                          const [isErroInPost, setisErroInPost] = React.useState(false);\n\n                          const ToVehicleRoute = () => {\n                            setplaca(props.data);\n                          };\n\n                          const closeModalVehicle = () => {\n                            setModal(false);\n                          };\n\n                          function sleep(time) {\n                            return new Promise(resolve => setTimeout(resolve, time));\n                          }\n\n                          const toggleModal = () => {\n                            setisErroInPost(false);\n                            axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/cortex/license/\").concat(props.data), body).then(res => {\n                              let data_consulta = [];\n                              sleep(2000).then(() => {\n                                // Do something after the sleep!\n                                Object.entries(res.data).forEach(_ref => {\n                                  let [key, value] = _ref;\n\n                                  if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\" || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\" || key === \"municipioPlaca\") {\n                                    data_consulta.push({\n                                      \"chave\": key ? ChangeKey(key) : '',\n                                      \"valor\": value ? value : ''\n                                    });\n                                  }\n                                });\n                                setdataVehicle(data_consulta);\n                              });\n                            }).catch(err => {\n                              sleep(1000).then(() => {\n                                setisErroInPost(true);\n                              });\n                            }).finally(() => {\n                              sleep(1000).then(() => {\n                                setModal(true);\n                              });\n                            });\n                          };\n\n                          return /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"underlined_text\",\n                              onClick: toggleModal,\n                              style: {\n                                textAlign: 'center',\n                                cursor: \"pointer\"\n                              },\n                              children: props.data\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 677,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                              isOpen: modal,\n                              toggle: toggleModal,\n                              children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                                toggle: closeModalVehicle,\n                                children: \"Placa \".concat(props.data)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 686,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                                children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n                                  children: dataVehicle.length && Array.isArray(dataVehicle) ? dataVehicle.map((dados, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                                    className: \"justify-content-between\",\n                                    children: /*#__PURE__*/_jsxDEV(Row, {\n                                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                          children: dados.chave\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 695,\n                                          columnNumber: 53\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 694,\n                                        columnNumber: 51\n                                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                        children: dados.valor\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 697,\n                                        columnNumber: 51\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 693,\n                                      columnNumber: 49\n                                    }, this)\n                                  }, index, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 692,\n                                    columnNumber: 47\n                                  }, this)) : isErroInPost ? /*#__PURE__*/_jsxDEV(Row, {\n                                    className: \"text-center\",\n                                    children: /*#__PURE__*/_jsxDEV(Col, {\n                                      children: /*#__PURE__*/_jsxDEV(Alert, {\n                                        color: \"danger\",\n                                        children: \"Error !\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 707,\n                                        columnNumber: 51\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 706,\n                                      columnNumber: 49\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 705,\n                                    columnNumber: 47\n                                  }, this) : /*#__PURE__*/_jsxDEV(Row, {\n                                    Row: true,\n                                    className: \"text-center\",\n                                    children: /*#__PURE__*/_jsxDEV(Col, {\n                                      children: /*#__PURE__*/_jsxDEV(Spinner, {\n                                        color: \"info\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 715,\n                                        columnNumber: 51\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 714,\n                                      columnNumber: 49\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 713,\n                                    columnNumber: 47\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 688,\n                                  columnNumber: 39\n                                }, this), Array.isArray(dataVehicle) && dataVehicle.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n                                  children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 722,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                    color: \"primary\",\n                                    className: \"btn-md\",\n                                    onClick: ToVehicleRoute,\n                                    children: \"Mais Informa\\xE7\\xF5es\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 723,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 721,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 687,\n                                columnNumber: 37\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 685,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true);\n                        }, \"foEWPVkaXsf3rN+Sl7fi7kbSowo=\"),\n                        args: \"nrplaca\",\n                        headerStyle: {\n                          textAlign: \"center\"\n                        }\n                      },\n                      \"Veículo\": \"dstipoveiculo\",\n                      \"Modelo\": \"nomarcamodelo\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 23\n                  }, this), activeModal === 0 && /*#__PURE__*/_jsxDEV(WarningModal, {\n                    show: true,\n                    data: warningModalData,\n                    formData: formData,\n                    editionMode: false,\n                    setFormData: setFormData,\n                    toggle: () => toggleModal(-1),\n                    reloadMethod: toggleReload,\n                    spinner: spinner\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                    isOpen: modalPlaca,\n                    toggle: toggleModalPlaca,\n                    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                      toggle: toggleModalPlaca,\n                      children: \"Placa \".concat(modalData['nrplaca'], \"}\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                      style: {\n                        justifyContent: 'center',\n                        alignContent: 'center',\n                        display: 'flex'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 750,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), modalType === MODAL_TYPE_ENUM.MAP && createMapModal]\n  }, void 0, true);\n}\n\n_s2(Maps, \"rWpRa2lTycSB11OXNKkI15Q8h6w=\", false, function () {\n  return [useHistory, useToggle, useModalWithData, useJsApiLoader];\n});\n\n_c = Maps;\nMaps.defaultProps = {\n  center: {\n    lat: -7.254653852199306,\n    lng: -36.69661154766497\n  },\n  zoom: 4\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/views/Maps.js"],"names":["React","useMemo","useState","GoogleMap","Marker","useJsApiLoader","useHistory","Card","CardBody","Row","Col","Input","Button","Modal","ModalHeader","ModalBody","ListGroup","ListGroupItem","Spinner","Alert","InputGroupText","InputGroup","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","axios","axiosRetry","getTimeoutConfig","getRetryConfig","mapOptions","env","USER_ID_ENUM","Table","Tabs","MapLegend","MapsContext","WarningsContext","VehicleContext","AuditorsContext","WarningsUpdateContext","isLoggedIn","getCortexToken","getUserRole","WarningModal","DESIGNATION_FORM_DATA","getUserLogin","testAndUnlockWarning","isLocked","isTreated","NOTIFICATION_STATUS_ENUM","EM_MONITORAMENTO","EM_MONITORAMENTO_LABEL","SEM_COMANDO_FISCAL","SEM_COMANDO_FISCAL_LABEL","hasUserLoggedData","getUserRegistrationID","getUserID","getUserName","Notification","isEmpty","getNowDateTimeString","LocationTrackingModal","useToggle","useModalWithData","MODAL_TYPE_ENUM","Maps","props","body","history","setplaca","useContext","warnings","traffic","changeVisto","printIsMap","startSSE","wasReloaded","setWasReloaded","getAuditorRegistry","activeCameras","pointsData","setPointsData","getCamerasData","warningsViewed","setWarningsViewed","spinner","setSpinner","tabIndex","setTabIndex","index","setIndex","modalPlaca","setModalPlaca","toggleModalPlaca","warningModalData","setWarningModalData","formData","setFormData","activeModal","setActiveModal","toggleModal","i","reload","setReload","toggleReload","fetchDataFlag","toggleFetchData","modalData","setModalData","isModalActive","modalType","toggleModalOn","toggleModalOff","selectedFilter","setSelectedFilter","searchTerm","setSearchTerm","dropdownOpen","setDropdownOpen","toggleDropdown","isSearchEnabled","setIsSearchEnabled","axiosRetryProxy","create","isLoaded","googleMapLoaded","loadError","googleMapError","id","googleMapsApiKey","googleApiKey","typeCameraFilters","setTypeCameraFilters","filterOptions","value","label","displayLegend","colors","categories","Object","keys","activeMarkers","setActiveMarkers","Array","length","titleCase","text","toLowerCase","split","map","word","toUpperCase","slice","join","handleFilterChange","console","log","handleSearchChange","event","target","ChangeKey","nome","mudar","forEach","letra","push","replace","pointClick","points","active","markerClick","markers","containerStyle","width","height","setEditionDataOLD","warning","data","auditorData","USER_LOGIN","auditors","auditorID","USER_NAME","monitoringAuditor","USER_ID","user_registration_id","user_id","user_name","setEditionData","status","fiscal_notification_status","fiscal_action_auditors","homologationAuditor","EM_MONITORAMENTO_HOMOLOGADO","SEM_COMANDO","SEM_COMANDO_HOMOLOGADA","openWarningModal","notificationObj","openMapModal","plate","location","MAP","Local","event_json","placa","local","cursor","color","useEffect","FilterEvent","data_row","field_to_filter","includes","DNIT","startsWith","PRF","Estadual","SEMOB","createMapModal","position","overflow","display","center","zoom","filter","point","indexOf","lat","lng","icon","url","scaledSize","borderTopLeftRadius","backgroundColor","fontWeight","borderColor","margin","padding","transform","checked","option","undefined","Func","args","dateObj","Date","toLocaleString","textAlign","maxWidth","row_data","headerStyle","fontSize","dateHour","modal","setModal","dataVehicle","setdataVehicle","isErroInPost","setisErroInPost","ToVehicleRoute","closeModalVehicle","sleep","time","Promise","resolve","setTimeout","post","apiAddress","then","res","data_consulta","entries","key","catch","err","finally","isArray","dados","chave","valor","justifyContent","alignContent","defaultProps"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\r\nimport { GoogleMap, Marker } from '@react-google-maps/api'\r\nimport { useJsApiLoader } from '@react-google-maps/api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ListGroup, ListGroupItem,\r\n  Spinner, Alert,\r\n  InputGroupText, InputGroup,\r\n} from \"reactstrap\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\n\r\nimport mapOptions from 'common/mapOptions.js'\r\nimport env from 'common/enviroment.js'\r\nimport USER_ID_ENUM from 'common/enumerators/UserIdEnum'\r\n\r\nimport Table from 'components/tables/Table'\r\nimport Tabs from 'components/Tabs';\r\n\r\nimport MapLegend from 'components/MapLegend'\r\n\r\nimport { MapsContext } from 'context/MapsContext'\r\nimport { WarningsContext } from 'context/WarningsContext';\r\nimport { VehicleContext } from 'context/VehicleContext';\r\nimport { AuditorsContext } from 'context/AuditorsContext';\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\n\r\nimport { isLoggedIn } from 'common/SessionUtils';\r\nimport { getCortexToken } from 'common/SessionUtils';\r\nimport { getUserRole } from 'common/SessionUtils';\r\n\r\nimport WarningModal from 'components/modals/WarningModal/WarningModal';\r\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\r\nimport { getUserLogin } from 'common/SessionUtils';\r\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\r\nimport { isLocked } from 'common/enumerators/LockEnum';\r\nimport { isTreated } from 'common/enumerators/NotificationStatus';\r\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\r\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL  } from \"common/model/Notification\";\r\nimport { hasUserLoggedData } from 'common/SessionUtils';\r\nimport { getUserRegistrationID } from 'common/SessionUtils';\r\nimport { getUserID } from 'common/SessionUtils';\r\nimport { getUserName } from 'common/SessionUtils';\r\nimport { Notification } from \"common/model/Notification\";\r\nimport { isEmpty } from 'common/utils/collections';\r\nimport { getNowDateTimeString } from 'common/utils/validate';\r\nimport LocationTrackingModal from 'components/modals/LocationTrackingModal/LocationTrackingModal';\r\nimport useToggle from 'common/hooks/useToogle';\r\nimport { useModalWithData } from 'common/hooks/useModalWithData';\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\n\r\n\r\n\r\nexport default function Maps(props) {\r\n\r\n  const body = {\r\n    'cortex_token': getCortexToken(),\r\n    'role': getUserRole()\r\n  }\r\n\r\n  const history = useHistory()\r\n\r\n  const { setplaca } = React.useContext(VehicleContext)\r\n  const { warnings, traffic, changeVisto, printIsMap, startSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n  const { getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const { activeCameras, pointsData, setPointsData, getCamerasData } = React.useContext(MapsContext);\r\n  const { warningsViewed , setWarningsViewed} = React.useContext(WarningsUpdateContext)\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n\r\n  //const [modalMaps, setModalMaps] = React.useState(false)\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n  const [index, setIndex] = useState(0)\r\n  //const toggleMapsModal = () => setModalMaps(!modalMaps)\r\n\r\n  const [modalPlaca, setModalPlaca] = React.useState(false)\r\n  const toggleModalPlaca = () => setModalPlaca(!modalPlaca)\r\n\r\n\r\n  const [warningModalData, setWarningModalData] = React.useState({})\r\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA)\r\n  const [activeModal, setActiveModal] = React.useState(-1)\r\n  const toggleModal = (i = -1) => {\r\n    setActiveModal(i)\r\n  }\r\n  const [reload, setReload] = React.useState(false)\r\n  const toggleReload = () => setReload(!reload)\r\n\r\n  const [fetchDataFlag, toggleFetchData] = useToggle(false)\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n  const [selectedFilter, setSelectedFilter] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const [isSearchEnabled, setIsSearchEnabled] = useState(false);\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  const { isLoaded: googleMapLoaded, loadError : googleMapError } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: env.googleApiKey\r\n  })\r\n\r\n\r\n  const [typeCameraFilters, setTypeCameraFilters] = React.useState({\r\n    'DNIT': true,\r\n    'PRF': true,\r\n    'SEMOB': true,\r\n    'Estadual': true\r\n  })\r\n\r\n  const filterOptions = [\r\n    {value: 'passagem' , label:'Passagem'},\r\n    {value: 'local', label:'Local'},\r\n    {value: 'uf', label:'UF'},\r\n    {value: 'placa', label:'Placa'},\r\n    {value: 'veiculo', label:'Veículo'},\r\n    {value: 'modelo', label:'Modelo'},\r\n    {value: 'alerta', label:'Alerta'}\r\n  ];\r\n\r\n  const displayLegend = {\r\n    \"DNIT\": \"DNIT\",\r\n    \"EQUIPAMENTOS PRF\": \"PRF\",\r\n    \"Pontos Estado\": \"ESTADO\"\r\n    //\"SUGESTÕES\": \"SUGESTÕES\"\r\n  }\r\n\r\n  const colors = {\r\n    \"DNIT\": \"#0f9d58\",\r\n    \"EQUIPAMENTOS PRF\": \"#0288d1\",\r\n    \"Pontos Estado\": \"#ffd600\"\r\n    //\"SUGESTÕES\": \"#801e0f\"\r\n  }\r\n  const categories = Object.keys(colors)\r\n  const [activeMarkers, setActiveMarkers] = React.useState(new Array(categories.length))\r\n\r\n  const titleCase = (text) => {\r\n    return text.toLowerCase()\r\n      .split(' ')\r\n      .map((word) => {\r\n        return word[0].toUpperCase() + word.slice(1);\r\n      }).join(' ')\r\n  }\r\n  \r\n  const handleFilterChange = (value) => {\r\n    setSelectedFilter(value);\r\n    setIsSearchEnabled(true);\r\n    console.log(`Filtro selecionado: ${value}`);\r\n  };\r\n  \r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n  \r\n  \r\n  const ChangeKey = (nome) => {\r\n\r\n    let mudar = []\r\n\r\n    nome.split('').forEach((letra, index) => {\r\n      if (nome[index] === `${nome[index].toUpperCase()}`) {\r\n        mudar.push(nome[index])\r\n\r\n      }\r\n    })\r\n\r\n    mudar.forEach(function (letra) {\r\n      nome = nome.replace(`${letra}`, ` ${letra.toLowerCase()}`)\r\n    })\r\n\r\n    return titleCase(nome)\r\n\r\n  }\r\n\r\n  const pointClick = (index) => {\r\n    return () => {\r\n      let points = [...pointsData]\r\n\r\n      points[index] = {\r\n        ...points[index],\r\n        active: !points[index].active\r\n      }\r\n\r\n      setPointsData(points)\r\n    }\r\n  }\r\n\r\n  const markerClick = (index) => () => {\r\n    let markers = [...activeMarkers]\r\n\r\n    markers[index] = !markers[index]\r\n\r\n    setActiveMarkers(markers)\r\n  }\r\n\r\n  //verificar props do container\r\n  //Aparentemente tem um valor 'auto' para ajustar automaticamente o tamanho da altura para caber\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: 'auto'\r\n  };\r\n\r\n  const setEditionDataOLD = (warning, data) => {\r\n\r\n    const auditorData = getAuditorRegistry(getUserLogin(), USER_ID_ENUM.USER_LOGIN);\r\n\r\n    if (warning) {\r\n\r\n      if (warning['fiscal_action_auditors']) {\r\n        let auditors = {}\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_NAME)\r\n        }\r\n        data[\"fiscal_action_auditors\"] = auditors\r\n      }\r\n\r\n\r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_report_auditor\"], USER_ID_ENUM.USER_ID)\r\n      if (monitoringAuditor && Object.keys(monitoringAuditor).length > 0) {\r\n        data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n        data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n        data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n\r\n      } else {\r\n        data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n        if (auditorData) {\r\n          data[\"monitoring_user_registration_id\"] = auditorData.user_registration_id\r\n          data[\"monitoring_user_id\"] = auditorData.user_id\r\n          data[\"monitoring_user_name\"] = auditorData.user_name\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return data\r\n\r\n  }\r\n\r\n  const setEditionData = (warning, data) => {\r\n    \r\n\r\n    if (!warning)\r\n      return data\r\n\r\n    \r\n    let status = warning.fiscal_notification_status\r\n    data['fiscal_action_designation_report'] = isEmpty(warning['fiscal_action_designation_report']) ? \"\" :  warning['fiscal_action_designation_report']\r\n    //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS. \r\n    if (isTreated(warning) || isLocked(warning) ) {\r\n      \r\n      if (!isEmpty(warning.fiscal_action_auditors)) {\r\n        let homologationAuditor = getAuditorRegistry(warning[\"fiscal_action_homologation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n        data[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id']\r\n      }\r\n      \r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_designation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n      data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n      data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n      data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n      data[\"monitoring_user_login\"] = monitoringAuditor['user_login']\r\n\r\n      data[\"fiscal_action_designation_date\"] = getNowDateTimeString()\r\n      data[\"fiscal_action_designation_auditor\"] = monitoringAuditor['user_name']\r\n      \r\n      let auditors = {}\r\n      \r\n      //Tratamento para os casos de designação sem comando fiscal. \r\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO ) {\r\n        auditors[EM_MONITORAMENTO] = { 'user_name': EM_MONITORAMENTO_LABEL, 'user_login': EM_MONITORAMENTO_LABEL }\r\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA ) {\r\n        auditors[SEM_COMANDO_FISCAL] = { 'user_name': SEM_COMANDO_FISCAL_LABEL, 'user_login': SEM_COMANDO_FISCAL_LABEL }\r\n      } else if (warning['fiscal_action_auditors']) {\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN)\r\n        }\r\n      }\r\n      data[\"fiscal_action_auditors\"] = auditors\r\n\r\n    } else {\r\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA E O LOCK ESTÁ DESATIVADO, TODOS OS CAMPOS ESTÃO VAZIOS E O USUÁRIO LOGADO PASSARÁ A SER RESPONSÁVEL PELO MONITORAMENTO\r\n      data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n      if (hasUserLoggedData()) {\r\n        data[\"monitoring_user_registration_id\"] = getUserRegistrationID()\r\n        data[\"monitoring_user_id\"] = getUserID()\r\n        data[\"monitoring_user_name\"] = getUserName()\r\n        data[\"monitoring_user_login\"] = getUserLogin()\r\n      }\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  const openWarningModal = (warning) => {\r\n\r\n\r\n    let data = { ...DESIGNATION_FORM_DATA, fiscal_action_auditors: {} }\r\n    let notificationObj = new Notification(warning)\r\n    setFormData(setEditionData(warning, data))\r\n\r\n    setWarningModalData(notificationObj);\r\n\r\n    toggleModal(0);\r\n\r\n  }\r\n\r\n  const openMapModal = (plate, location) => {\r\n    let modalData = {\r\n      plate: plate,\r\n      location : location\r\n\r\n    }\r\n      setModalData(modalData)\r\n      toggleModalOn(MODAL_TYPE_ENUM.MAP, modalData)\r\n      toggleFetchData()\r\n  }\r\n\r\n  const Local = (props) => {\r\n\r\n    if (props && props.event_json) {\r\n\r\n      let placa = props.event_json['evento_infevento_nrplaca']\r\n      let local = props.event_json['evento_infevento_dsreflocal']\r\n\r\n      return (\r\n        <>\r\n          <div\r\n            className={props.location !== \"null\" && \"underlined_text\"}\r\n            onClick={() => { openMapModal(placa, local) }}\r\n            style={{ cursor: props.location !== \"null\" && \"pointer\", color: '#2322c8' }}\r\n          >\r\n            {props.location}\r\n          </div>\r\n        </>\r\n      )\r\n    } else {\r\n      return \"-\"\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n      printIsMap();\r\n      getCamerasData();\r\n      changeVisto();\r\n      if (wasReloaded) {\r\n        startSSE()\r\n\r\n        setWasReloaded(false)\r\n        setWasReloaded(false)\r\n      }\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n    testAndUnlockWarning(warningsViewed, setWarningsViewed)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    setIndex(0)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabIndex])\r\n\r\n  const FilterEvent = (data_row, field_to_filter) => {\r\n\r\n    if (data_row[field_to_filter].includes('_LPD')) {\r\n\r\n      if (typeCameraFilters.DNIT) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('BR')) {\r\n\r\n      if (typeCameraFilters.PRF) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('PB')) {\r\n      if (typeCameraFilters.Estadual) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (!typeCameraFilters.SEMOB) {\r\n\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n  const createMapModal = useMemo(() => <LocationTrackingModal show={isModalActive}  googleMapOnLoad={googleMapLoaded} googleMapOnError={googleMapError} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag} />, [modalData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            {googleMapError && <div>Não foi possível carregar o GoogleMap.</div>}\r\n            {(googleMapLoaded) ? <Card className=\"card-plain\">\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: \"relative\", overflow: \"hidden\", display: \"flex\" }}\r\n                  >\r\n                    <MapLegend categories={categories} colors={colors} activeCategories={activeMarkers} onClick={markerClick} display={displayLegend} />\r\n                    <GoogleMap\r\n                      mapContainerStyle={containerStyle}\r\n                      center={props.center}\r\n                      zoom={props.zoom}\r\n                      options={mapOptions}\r\n                    >\r\n                      {activeCameras.filter(point => {\r\n                        return !activeMarkers[categories.indexOf(point['category'])]\r\n                      }).map((point, index) => (\r\n                        //Marcação passando ícone\r\n                        <Marker\r\n                          className=\"map-icon\"\r\n                          key={`marker-${index}`}\r\n                          position={{ lat: point['nrlatitude'], lng: point['nrlongitude'] }}\r\n                          onClick={pointClick(index)}\r\n                          zIndex={pointsData[index].active ? categories.length + 1 : categories.length - categories.indexOf(point['category'])}\r\n                          options={{\r\n                            icon: {\r\n                              url: `https://ik.imagekit.io/exi1dv80wm/pin/${pointsData[index].active ? '00ff00' : colors[point['category']].slice(-6)}.png`,\r\n                              scaledSize: {\r\n                                height: 26,\r\n                                width: 21\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </GoogleMap>\r\n\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            : \"\"}\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n                        \r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Tabs names={['Tabela de alertas', 'Tabela de tráfego']} index={[tabIndex, setTabIndex]} />\r\n            <Card style={{ borderTopLeftRadius: '0px' }}>\r\n              <CardBody>\r\n                <InputGroup>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.Estadual}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'Estadual': event.target.checked })}\r\n                    />\r\n                    Estadual\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.PRF}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'PRF': event.target.checked })}\r\n                    />\r\n                    PRF\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.DNIT}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'DNIT': event.target.checked })}\r\n                    />\r\n                    DNIT\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.SEMOB}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'SEMOB': event.target.checked })}\r\n                    />\r\n                    SEMOB\r\n                  </InputGroupText>\r\n                  \r\n                </InputGroup>\r\n                <div className=\"filters-container\">\r\n                  <div className=\"filter-bar\">\r\n                    <div className=\"filter-options\">\r\n                      <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n                        <DropdownToggle caret color=\"primary\">\r\n                          {selectedFilter || 'Selecionar:'}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                          {filterOptions.map((option) => (\r\n                            <DropdownItem key={option.value} onClick={() => handleFilterChange(option.value)}>\r\n                              {option.label}\r\n                            </DropdownItem>\r\n                          ))}\r\n                        </DropdownMenu>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Pesquisar...\"\r\n                          value={searchTerm}\r\n                          onChange={handleSearchChange}\r\n                          disabled={!isSearchEnabled} \r\n                        />\r\n                      </Dropdown>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <Card>\r\n                  <CardBody>\r\n                    {tabIndex === 0 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={warnings.filter(warning => FilterEvent(warning, 'evento_infevento_dsreflocal'))}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        pageSize={10}\r\n                        columns={{\r\n                          \"Alerta\": {\r\n                            Func: (props) =>\r\n                              <p                                \r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"nome\"\r\n                          },\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data).toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateObj[0]}<br />{dateObj[1]}</div>\r\n                            },\r\n                            args: \"evento_infevento_dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => {\r\n                              return (\r\n                                <Local location={props.data} event_json={props.row_data} />\r\n                              )\r\n                            },\r\n                            args: \"evento_infevento_dsreflocal\"\r\n                          },\r\n                          \"UF\": \"evento_infevento_sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) =>\r\n                              <p\r\n                                className='links-table'\r\n                                onClick={() => { setModalData(props.row_data); toggleModalPlaca() }}\r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"evento_infevento_nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"evento_infevento_dstipoveiculo\",\r\n                          \"Modelo\": \"evento_infevento_nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {tabIndex === 1 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={traffic.filter(event => FilterEvent(event, 'dsreflocal'))}\r\n                        pageSize={100}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        style={{ fontSize: '0.8rem' }}\r\n                        columns={{\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data)\r\n                              const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateHour[0]}<br />{dateHour[1]}</div>\r\n                            },\r\n                            args: \"dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => <Local location={props.data} event_json={props.row_data} />,\r\n                            args: \"dsreflocal\"\r\n                          },\r\n                          \"UF\": \"sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) => {\r\n                              const [modal, setModal] = React.useState(false);\r\n                              const [dataVehicle, setdataVehicle] = React.useState([])\r\n                              const [isErroInPost, setisErroInPost] = React.useState(false)\r\n\r\n                              const ToVehicleRoute = () => {\r\n                                setplaca(props.data)\r\n                              }\r\n\r\n                              const closeModalVehicle = () => {\r\n                                setModal(false)\r\n                              }\r\n\r\n                              function sleep(time) {\r\n                                return new Promise((resolve) => setTimeout(resolve, time));\r\n                              }\r\n\r\n                              const toggleModal = () => {\r\n                                setisErroInPost(false)\r\n                                axiosRetryProxy.post(`${env.apiAddress}/cortex/license/${props.data}`, body).then(res => {\r\n                                  let data_consulta = []\r\n                                  sleep(2000).then(() => {\r\n                                    // Do something after the sleep!\r\n                                    Object.entries(res.data).forEach(([key, value]) => {\r\n\r\n                                      if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\"\r\n                                        || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\"\r\n                                        || key === \"municipioPlaca\") {\r\n                                        data_consulta.push({\r\n                                          \"chave\": key ? ChangeKey(key) : '',\r\n                                          \"valor\": value ? value : ''\r\n                                        })\r\n                                      }\r\n                                    })\r\n                                    setdataVehicle(data_consulta)\r\n                                  });\r\n\r\n                                }).catch((err) => {\r\n                                  sleep(1000).then(() => {\r\n                                    setisErroInPost(true)\r\n                                  });\r\n\r\n                                }).finally(() => {\r\n                                  sleep(1000).then(() => {\r\n                                    setModal(true);\r\n                                  });\r\n\r\n                                })\r\n                              }\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    className=\"underlined_text\"\r\n                                    onClick={toggleModal}\r\n                                    style={{ textAlign: 'center', cursor: \"pointer\" }}\r\n                                  >\r\n                                    {props.data}\r\n                                  </div>\r\n\r\n                                  <Modal isOpen={modal} toggle={toggleModal}>\r\n                                    <ModalHeader toggle={closeModalVehicle}>{`Placa ${props.data}`}</ModalHeader>\r\n                                    <ModalBody>\r\n                                      <ListGroup>\r\n                                        {\r\n                                          (dataVehicle.length && Array.isArray(dataVehicle)) ?\r\n                                            dataVehicle.map((dados, index) => (\r\n                                              <ListGroupItem key={index} className=\"justify-content-between\">\r\n                                                <Row>\r\n                                                  <Col>\r\n                                                    <b>{dados.chave}</b>\r\n                                                  </Col>\r\n                                                  <Col>\r\n                                                    {dados.valor}\r\n                                                  </Col>\r\n                                                </Row>\r\n                                              </ListGroupItem>\r\n                                            ))\r\n                                            :\r\n                                            isErroInPost ?\r\n                                              <Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Alert color=\"danger\">\r\n                                                    Error !\r\n                                                  </Alert>\r\n                                                </Col>\r\n                                              </Row>\r\n                                              :\r\n                                              <Row Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Spinner color=\"info\" />\r\n                                                </Col>\r\n                                              </Row>\r\n                                        }\r\n                                      </ListGroup>\r\n                                      {Array.isArray(dataVehicle) && dataVehicle.length > 0 &&\r\n                                        <Row>\r\n                                          <hr></hr>\r\n                                          <Button color=\"primary\" className=\"btn-md\" onClick={ToVehicleRoute}>\r\n                                            Mais Informações\r\n                                          </Button>\r\n                                        </Row>\r\n                                      }\r\n                                    </ModalBody>\r\n                                  </Modal>\r\n                                </>\r\n                              )\r\n                            },\r\n                            args: \"nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"dstipoveiculo\",\r\n                          \"Modelo\": \"nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {activeModal === 0 &&\r\n                      <WarningModal\r\n                        show={true} data={warningModalData} formData={formData} editionMode={false}\r\n                        setFormData={setFormData} toggle={() => toggleModal(-1)} reloadMethod={toggleReload} spinner={spinner}\r\n                      />\r\n                    }\r\n                    {\r\n                      <Modal isOpen={modalPlaca} toggle={toggleModalPlaca}>\r\n                        <ModalHeader toggle={toggleModalPlaca}>{`Placa ${modalData['nrplaca']}}`}</ModalHeader>\r\n                        <ModalBody style={{ justifyContent: 'center', alignContent: 'center', display: 'flex' }}>\r\n                          {/*<img alt=\"Foto da placa\" src=\"https://i.ytimg.com/vi/lmVlZbmNgGw/hqdefault.jpg\" />*/}\r\n                        </ModalBody>\r\n                      </Modal>\r\n                    }\r\n                  </CardBody>\r\n                </Card>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      {modalType === MODAL_TYPE_ENUM.MAP && createMapModal}\r\n    </>\r\n  );\r\n}\r\n\r\nMaps.defaultProps = {\r\n  center: {\r\n    lat: -7.254653852199306,\r\n    lng: -36.69661154766497\r\n  },\r\n  zoom: 4\r\n}\r\n"]},"metadata":{},"sourceType":"module"}