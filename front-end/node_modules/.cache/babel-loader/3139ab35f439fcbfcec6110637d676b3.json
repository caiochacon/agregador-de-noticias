{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\auditor\\\\AuditorSelector.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FcPlus, FcDisapprove, FcSearch, FcCustomerSupport } from \"react-icons/fc\";\nimport { Button, Col, FormGroup, Input, Tooltip } from \"reactstrap\";\nimport AuditorFindModal from 'components/modals/AuditorFindModal';\nimport { BLANK_AUDITOR_MODAL_DATA } from 'components/modals/AuditorFindModal';\nimport { LetterFilter } from \"common/utils/filters\";\nimport { AuditorsContext } from \"context/AuditorsContext\";\nimport USER_ID_ENUM from \"common/enumerators/UserIdEnum\";\nimport AuditorSelectorItem from \"./AuditorSelectorItem\";\nimport { GroupsContext } from \"context/GroupsContext\";\nimport { checkSemComandoFiscal } from \"common/rules/NotificationRules\";\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL } from \"common/model/Notification\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const semComandoFiscalButtonConfig = {\n  defaultMode: true,\n  label: /*#__PURE__*/_jsxDEV(FcDisapprove, {\n    size: '1.5rem'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }, this),\n  tooltip: \"Marcar como SEM COMANDO FISCAL DISPONÍVEL\",\n  actionMode: SEM_COMANDO_FISCAL,\n  style: {\n    marginLeft: '15px'\n  }\n};\nexport const emMonitoramentoButtonConfig = {\n  defaultMode: true,\n  label: /*#__PURE__*/_jsxDEV(FcCustomerSupport, {\n    size: '1.5rem'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this),\n  tooltip: \"Marcar como EM MONITORAMENTO\",\n  actionMode: EM_MONITORAMENTO,\n  style: {\n    marginLeft: '15px'\n  }\n};\nexport const BASE_CONFIG = {\n  defaultMode: false,\n  label: \"\",\n  tooltip: \"\",\n  buttonAction: null,\n  style: {\n    padding: '9px',\n    marginLeft: '15px'\n  }\n};\nexport default function AuditorSelector(_ref) {\n  _s();\n\n  let {\n    label,\n    singleSelectionMode,\n    data,\n    setData,\n    setHomologationUser,\n    fieldName,\n    invalidFlag,\n    modalReadonlyMode,\n    isUserId,\n    toggleDummyFlag,\n    firstOptionalButtonConfig,\n    secondOptionalButtonConfig\n  } = _ref;\n  const {\n    auditorsData,\n    getAuditorRegistry\n  } = React.useContext(AuditorsContext);\n  const {\n    getGroupOwnerData,\n    getGroupSupervisorData,\n    getMonitoringGroupOwner\n  } = React.useContext(GroupsContext);\n  const [auditorProblemMessage, setAuditorProblemMessage] = React.useState(false);\n  const [auditorData, setAuditorData] = React.useState(BLANK_AUDITOR_MODAL_DATA);\n  const [isAuditorFindModalActive, setFindAuditorModal] = React.useState(false);\n  const [disableOtherButtons, setDisableOtherButtons] = React.useState(false);\n  const [firstTooltipOpen, setFirstTooltipOpen] = React.useState(false);\n\n  const toggleFirstTooltip = () => setFirstTooltipOpen(!firstTooltipOpen);\n\n  const [secondTooltipOpen, setSecondTooltipOpen] = React.useState(false);\n\n  const toggleSecondTooltip = () => setSecondTooltipOpen(!secondTooltipOpen);\n\n  const toggleFindAuditorModal = () => setFindAuditorModal(!isAuditorFindModalActive);\n\n  const handleRemoveAuditorButtonClick = codeAuditorResponsible => {\n    if (disableOtherButtons) {\n      setDisableOtherButtons(false);\n    }\n\n    delete data[fieldName][codeAuditorResponsible];\n\n    if (setHomologationUser) {\n      setResponsibleAuditors(data, data[fieldName]);\n    }\n\n    setData({ ...data\n    }); //testando se o toggleDummy está setado. Esta variável serve para comandar um refresh\n\n    if (toggleDummyFlag) toggleDummyFlag();\n  };\n\n  const isDisabled = () => {\n    if (modalReadonlyMode) {\n      return true;\n    } else if (singleSelectionMode) {\n      return Object.keys(data[fieldName]).length >= 1;\n    } else {\n      return disableOtherButtons;\n    }\n  };\n\n  const isOptionalButtonDisabled = config => {\n    // se não houver método definido, quer dizer que este botão deverá assumir o comportamento default\n    if (config.defaultMode) {\n      return isDisabled();\n    }\n\n    if (modalReadonlyMode) {\n      return true;\n    } else {\n      //O botão só deve ficar habilitado, se houver algum elemento adicionado. \n      return Object.keys(data[fieldName]).length === 0;\n    }\n  };\n\n  const handleOptionalButtonClick = config => {\n    if (!config.defaultMode) {\n      config.buttonAction();\n    } else {\n      const ALTERATIVE_DESIGNATION_MAP = {};\n      ALTERATIVE_DESIGNATION_MAP[SEM_COMANDO_FISCAL] = SEM_COMANDO_FISCAL_LABEL;\n      ALTERATIVE_DESIGNATION_MAP[EM_MONITORAMENTO] = EM_MONITORAMENTO_LABEL;\n      defaultOptionalButtonClick(config.actionMode, ALTERATIVE_DESIGNATION_MAP[config.actionMode]);\n    }\n  };\n\n  const defaultOptionalButtonClick = (key, label) => {\n    let noCommandAuditor = {};\n    noCommandAuditor[key] = {\n      user_name: label,\n      user_login: label\n    };\n    let newData = { ...data\n    };\n    newData[fieldName] = noCommandAuditor;\n    setData(newData);\n    setAuditorData({ ...BLANK_AUDITOR_MODAL_DATA\n    });\n    setDisableOtherButtons(true); //testando se o toggleDummy está setado. Esta variável serve para comandar um refresh\n\n    if (toggleDummyFlag) {\n      toggleDummyFlag();\n    }\n  };\n\n  const setResponsibleAuditors = (newData, fiscalActionAuditors) => {\n    if (isEmpty(fiscalActionAuditors)) {\n      newData['fiscal_notification_awareness_auditor'] = \"\";\n      newData['fiscal_action_homologation_auditor'] = \"\";\n      newData[\"fiscal_action_homologation_auditor_id\"] = \"\";\n      newData[\"fiscal_action_homologation_auditor_name\"] = \"\";\n    } else {\n      let monitoringChief = getMonitoringGroupOwner();\n      newData['fiscal_notification_awareness_auditor'] = monitoringChief['user_login'];\n\n      if (checkSemComandoFiscal(fiscalActionAuditors)) {\n        newData['fiscal_action_homologation_auditor'] = monitoringChief['user_login'];\n        newData[\"fiscal_action_homologation_auditor_id\"] = monitoringChief['user_registration_id'];\n        newData[\"fiscal_action_homologation_auditor_name\"] = monitoringChief['user_name'];\n      } else {\n        let homologationAuditor = getGroupOwnerData(fiscalActionAuditors);\n        newData['fiscal_action_homologation_auditor'] = homologationAuditor['user_login'];\n        newData[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id'];\n        newData[\"fiscal_action_homologation_auditor_name\"] = homologationAuditor['user_name'];\n        let supervisorAuditor = getGroupSupervisorData(fiscalActionAuditors);\n\n        if (!isEmpty(supervisorAuditor)) {\n          newData['fiscal_action_supervision_auditor'] = supervisorAuditor['user_login'];\n          newData[\"fiscal_action_supervision_auditor_id\"] = supervisorAuditor['user_registration_id'];\n          newData[\"fiscal_action_supervision_auditor_name\"] = supervisorAuditor['user_name'];\n        }\n      }\n    }\n  };\n\n  const handleAddAuditorButtonClick = () => {\n    let key = isUserId ? 'user_id' : 'user_name';\n\n    if (!data[fieldName].hasOwnProperty(auditorData[key])) {\n      let newMembers = { ...data[fieldName]\n      };\n      var auditorRegistry = getAuditorRegistry(auditorData.code, USER_ID_ENUM.USER_REGISTRATION_ID);\n      newMembers[auditorRegistry[key]] = auditorRegistry;\n      let newData = { ...data\n      };\n      newData[fieldName] = newMembers;\n\n      if (setHomologationUser) {\n        setResponsibleAuditors(newData, newMembers);\n      }\n\n      setData(newData);\n      setAuditorData({ ...BLANK_AUDITOR_MODAL_DATA\n      }); //testando se o toggleDummy está setado. Esta variável serve para comandar um refresh\n\n      if (toggleDummyFlag) {\n        toggleDummyFlag();\n      }\n    }\n  };\n\n  const handleAuditorInputKeyEnter = () => {\n    for (let i = 0; i < auditorsData.length; i++) {\n      if (auditorsData[i]['user_registration_id'] === auditorData.code) {\n        setAuditorProblemMessage(false);\n        setAuditorData({ ...auditorData,\n          name: auditorsData[i]['user_name'].toUpperCase()\n        });\n        return;\n      }\n    }\n\n    setAuditorProblemMessage(true);\n  };\n\n  const mountAuditorSelectorItemLabel = auditorDataTuple => {\n    if (auditorDataTuple && auditorDataTuple[1]) {\n      let auditorName = auditorDataTuple[1]['user_name'];\n      let auditorRegistrationId = auditorDataTuple[1]['user_registration_id'];\n\n      if (auditorName === SEM_COMANDO_FISCAL_LABEL || auditorName === EM_MONITORAMENTO_LABEL) {\n        return auditorName;\n      } else {\n        return \"\".concat(auditorName, \" (\").concat(auditorRegistrationId, \") \");\n      }\n    }\n\n    return 'NULL';\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: '5px',\n          paddingLeft: '15px',\n          paddingRight: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Matr\\xEDcula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"inputMat\",\n            value: auditorData.code,\n            maxLength: \"7\",\n            readOnly: modalReadonlyMode,\n            disabled: modalReadonlyMode,\n            invalid: invalidFlag && Object.values(data[fieldName]).length === 0,\n            onChange: event => {\n              setAuditorProblemMessage(false);\n              setAuditorData({\n                code: event.target.value,\n                name: ''\n              });\n            },\n            onKeyUp: event => event.key === \"Enter\" && handleAuditorInputKeyEnter(),\n            onKeyPress: event => {\n              LetterFilter(event);\n            },\n            style: {\n              width: \"80px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Nome \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            readOnly: true,\n            disabled: true,\n            invalid: invalidFlag && Object.values(FormGroup).length === 0,\n            className: \"form-control\",\n            id: \"inputNome\",\n            value: auditorData.name,\n            style: {\n              width: \"350px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group  add_del_btn_outer\",\n          style: {\n            marginTop: '29px',\n            marginLeft: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            color: \"primary\",\n            outline: true,\n            id: \"btnFindAuditor\",\n            readOnly: modalReadonlyMode,\n            disabled: isDisabled(),\n            onClick: () => {\n              setAuditorProblemMessage(false);\n              toggleFindAuditorModal();\n            },\n            children: /*#__PURE__*/_jsxDEV(FcSearch, {\n              size: '1.5rem'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"white\"\n            },\n            children: \" N \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            color: \"primary\",\n            outline: true,\n            id: \"btnFindAuditor2\",\n            readOnly: modalReadonlyMode,\n            disabled: isDisabled() || auditorData.name === '' || auditorData.name === null,\n            onClick: () => {\n              setAuditorProblemMessage(false);\n              handleAddAuditorButtonClick();\n            },\n            children: /*#__PURE__*/_jsxDEV(FcPlus, {\n              size: '1.5rem'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), !isEmpty(firstOptionalButtonConfig) && /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            color: \"primary\",\n            outline: true,\n            id: \"firstOptionalButton\",\n            style: firstOptionalButtonConfig.style,\n            disabled: isOptionalButtonDisabled(firstOptionalButtonConfig),\n            onClick: () => {\n              handleOptionalButtonClick(firstOptionalButtonConfig);\n            },\n            onMouseOver: () => {\n              setFirstTooltipOpen(true);\n            },\n            onMouseOut: () => {\n              setFirstTooltipOpen(false);\n            },\n            children: firstOptionalButtonConfig.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), !isEmpty(secondOptionalButtonConfig) && /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            color: \"primary\",\n            outline: true,\n            id: \"secondOptionalButton\",\n            style: secondOptionalButtonConfig.style,\n            disabled: isOptionalButtonDisabled(secondOptionalButtonConfig),\n            onClick: () => {\n              handleOptionalButtonClick(secondOptionalButtonConfig);\n            },\n            onMouseOver: () => {\n              setSecondTooltipOpen(true);\n            },\n            onMouseOut: () => {\n              setSecondTooltipOpen(false);\n            },\n            children: secondOptionalButtonConfig.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), auditorProblemMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          style: {\n            marginLeft: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Auditor n\\xE3o encontrado!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              id: \"tags\",\n              children: Object.entries(data[fieldName]).map(key_value => {\n                if (key_value) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    style: {\n                      display: \"inline-block\",\n                      paddingRight: \"20px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AuditorSelectorItem, {\n                      readOnly: modalReadonlyMode,\n                      disabled: modalReadonlyMode,\n                      text: mountAuditorSelectorItemLabel(key_value),\n                      close: () => handleRemoveAuditorButtonClick(key_value[0])\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this)\n                  }, key_value[0], false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  return \"\";\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), !isEmpty(firstOptionalButtonConfig) && !isEmpty(firstOptionalButtonConfig.tooltip) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"top\",\n        isOpen: firstTooltipOpen,\n        target: \"firstOptionalButton\",\n        toggle: toggleFirstTooltip,\n        children: firstOptionalButtonConfig.tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 98\n      }, this), !isEmpty(secondOptionalButtonConfig) && !isEmpty(secondOptionalButtonConfig.tooltip) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"top\",\n        isOpen: secondTooltipOpen,\n        target: \"secondOptionalButton\",\n        toggle: toggleSecondTooltip,\n        children: secondOptionalButtonConfig.tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 99\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), isAuditorFindModalActive && /*#__PURE__*/_jsxDEV(AuditorFindModal, {\n      show: isAuditorFindModalActive,\n      toggle: toggleFindAuditorModal,\n      auditorData: auditorData,\n      setAuditorData: setAuditorData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuditorSelector, \"kEg7Rlcb61C5jzrsVauPzwZInWM=\");\n\n_c = AuditorSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuditorSelector\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/components/auditor/AuditorSelector.js"],"names":["React","FcPlus","FcDisapprove","FcSearch","FcCustomerSupport","Button","Col","FormGroup","Input","Tooltip","AuditorFindModal","BLANK_AUDITOR_MODAL_DATA","LetterFilter","AuditorsContext","USER_ID_ENUM","AuditorSelectorItem","GroupsContext","checkSemComandoFiscal","EM_MONITORAMENTO","EM_MONITORAMENTO_LABEL","SEM_COMANDO_FISCAL","SEM_COMANDO_FISCAL_LABEL","isEmpty","semComandoFiscalButtonConfig","defaultMode","label","tooltip","actionMode","style","marginLeft","emMonitoramentoButtonConfig","BASE_CONFIG","buttonAction","padding","AuditorSelector","singleSelectionMode","data","setData","setHomologationUser","fieldName","invalidFlag","modalReadonlyMode","isUserId","toggleDummyFlag","firstOptionalButtonConfig","secondOptionalButtonConfig","auditorsData","getAuditorRegistry","useContext","getGroupOwnerData","getGroupSupervisorData","getMonitoringGroupOwner","auditorProblemMessage","setAuditorProblemMessage","useState","auditorData","setAuditorData","isAuditorFindModalActive","setFindAuditorModal","disableOtherButtons","setDisableOtherButtons","firstTooltipOpen","setFirstTooltipOpen","toggleFirstTooltip","secondTooltipOpen","setSecondTooltipOpen","toggleSecondTooltip","toggleFindAuditorModal","handleRemoveAuditorButtonClick","codeAuditorResponsible","setResponsibleAuditors","isDisabled","Object","keys","length","isOptionalButtonDisabled","config","handleOptionalButtonClick","ALTERATIVE_DESIGNATION_MAP","defaultOptionalButtonClick","key","noCommandAuditor","user_name","user_login","newData","fiscalActionAuditors","monitoringChief","homologationAuditor","supervisorAuditor","handleAddAuditorButtonClick","hasOwnProperty","newMembers","auditorRegistry","code","USER_REGISTRATION_ID","handleAuditorInputKeyEnter","i","name","toUpperCase","mountAuditorSelectorItemLabel","auditorDataTuple","auditorName","auditorRegistrationId","marginTop","paddingLeft","paddingRight","values","event","target","value","width","color","entries","map","key_value","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FcPlus, FcDisapprove, FcSearch, FcCustomerSupport } from \"react-icons/fc\";\r\nimport { Button, Col, FormGroup, Input, Tooltip } from \"reactstrap\";\r\nimport AuditorFindModal from 'components/modals/AuditorFindModal';\r\nimport { BLANK_AUDITOR_MODAL_DATA } from 'components/modals/AuditorFindModal';\r\nimport { LetterFilter } from \"common/utils/filters\";\r\nimport { AuditorsContext } from \"context/AuditorsContext\";\r\nimport USER_ID_ENUM from \"common/enumerators/UserIdEnum\";\r\nimport AuditorSelectorItem from \"./AuditorSelectorItem\";\r\nimport { GroupsContext } from \"context/GroupsContext\";\r\nimport { checkSemComandoFiscal } from \"common/rules/NotificationRules\";\r\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL  } from \"common/model/Notification\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\n\r\n\r\nexport const semComandoFiscalButtonConfig = {\r\n  defaultMode: true,\r\n  label : <FcDisapprove size={'1.5rem'} />,\r\n  tooltip : \"Marcar como SEM COMANDO FISCAL DISPONÍVEL\",  \r\n  actionMode : SEM_COMANDO_FISCAL,\r\n  style: { marginLeft: '15px' }\r\n}\r\n\r\nexport const emMonitoramentoButtonConfig = {\r\n  defaultMode: true,\r\n  label : <FcCustomerSupport size={'1.5rem'} />,\r\n  tooltip : \"Marcar como EM MONITORAMENTO\",  \r\n  actionMode : EM_MONITORAMENTO,\r\n  style: { marginLeft: '15px' }\r\n}\r\n\r\nexport const BASE_CONFIG = {\r\n  defaultMode: false,\r\n  label : \"\",\r\n  tooltip : \"\",  \r\n  buttonAction : null,\r\n  style: { padding: '9px', marginLeft: '15px' }\r\n}\r\n\r\n\r\n\r\n\r\nexport default function AuditorSelector({ label, singleSelectionMode, data, setData, setHomologationUser, fieldName, invalidFlag, modalReadonlyMode, isUserId, toggleDummyFlag, firstOptionalButtonConfig, secondOptionalButtonConfig}) {\r\n\r\n  const { auditorsData, getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const { getGroupOwnerData, getGroupSupervisorData, getMonitoringGroupOwner } = React.useContext(GroupsContext);\r\n\r\n  const [auditorProblemMessage, setAuditorProblemMessage] = React.useState(false);\r\n  const [auditorData, setAuditorData] = React.useState(BLANK_AUDITOR_MODAL_DATA); \r\n  const [isAuditorFindModalActive, setFindAuditorModal] = React.useState(false);\r\n  const [disableOtherButtons, setDisableOtherButtons] = React.useState(false);\r\n  const [firstTooltipOpen, setFirstTooltipOpen] =  React.useState(false);\r\n  const toggleFirstTooltip = () => setFirstTooltipOpen(!firstTooltipOpen);\r\n\r\n  const [secondTooltipOpen, setSecondTooltipOpen] =  React.useState(false);\r\n  const toggleSecondTooltip = () => setSecondTooltipOpen(!secondTooltipOpen);\r\n\r\n  const toggleFindAuditorModal = () => setFindAuditorModal(!isAuditorFindModalActive);\r\n\r\n  const handleRemoveAuditorButtonClick = (codeAuditorResponsible) => {\r\n    if (disableOtherButtons){\r\n      setDisableOtherButtons(false)\r\n    } \r\n    delete data[fieldName][codeAuditorResponsible];\r\n\r\n\r\n    if (setHomologationUser){\r\n      setResponsibleAuditors(data, data[fieldName])\r\n    }\r\n\r\n    setData({ ...data });\r\n    \r\n    //testando se o toggleDummy está setado. Esta variável serve para comandar um refresh\r\n    if (toggleDummyFlag)\r\n      toggleDummyFlag()\r\n    \r\n    \r\n  };\r\n\r\n  const isDisabled = () => {\r\n    if (modalReadonlyMode) {\r\n      return true;\r\n    } else if (singleSelectionMode) {\r\n      return Object.keys(data[fieldName]).length >= 1;\r\n    } else {\r\n      return disableOtherButtons\r\n    }\r\n  };\r\n\r\n\r\n  const isOptionalButtonDisabled = (config) => {\r\n    \r\n    // se não houver método definido, quer dizer que este botão deverá assumir o comportamento default\r\n    if (config.defaultMode) {\r\n      return isDisabled()\r\n    } \r\n\r\n    if (modalReadonlyMode) {\r\n      return true;\r\n    } else {\r\n      //O botão só deve ficar habilitado, se houver algum elemento adicionado. \r\n      return Object.keys(data[fieldName]).length === 0;\r\n    } \r\n  };\r\n\r\n  const handleOptionalButtonClick = (config) => {\r\n    if (!config.defaultMode) {\r\n      config.buttonAction()      \r\n    } else {\r\n\r\n      const ALTERATIVE_DESIGNATION_MAP = { }\r\n      ALTERATIVE_DESIGNATION_MAP[SEM_COMANDO_FISCAL] = SEM_COMANDO_FISCAL_LABEL\r\n      ALTERATIVE_DESIGNATION_MAP[EM_MONITORAMENTO] = EM_MONITORAMENTO_LABEL\r\n\r\n      defaultOptionalButtonClick(config.actionMode , ALTERATIVE_DESIGNATION_MAP[config.actionMode])\r\n    }\r\n  };\r\n\r\n  const defaultOptionalButtonClick = (key, label) => {\r\n    let noCommandAuditor = {}\r\n    noCommandAuditor[key] = {user_name :label, user_login :label}\r\n\r\n    let newData = { ...data };\r\n    newData[fieldName] = noCommandAuditor;\r\n    setData(newData);\r\n    setAuditorData({ ...BLANK_AUDITOR_MODAL_DATA });\r\n    setDisableOtherButtons(true)\r\n\r\n\r\n    //testando se o toggleDummy está setado. Esta variável serve para comandar um refresh\r\n    if (toggleDummyFlag){\r\n      toggleDummyFlag()\r\n    }\r\n\r\n  };\r\n\r\n  const setResponsibleAuditors = (newData, fiscalActionAuditors) => {\r\n\r\n    if (isEmpty(fiscalActionAuditors) ){\r\n      newData['fiscal_notification_awareness_auditor'] = \"\"\r\n      newData['fiscal_action_homologation_auditor'] = \"\"\r\n      newData[\"fiscal_action_homologation_auditor_id\"] = \"\"\r\n      newData[\"fiscal_action_homologation_auditor_name\"] = \"\"\r\n    } else {\r\n      let monitoringChief  =  getMonitoringGroupOwner()\r\n      newData['fiscal_notification_awareness_auditor'] = monitoringChief['user_login']\r\n      \r\n      if (checkSemComandoFiscal(fiscalActionAuditors)) {\r\n        newData['fiscal_action_homologation_auditor'] = monitoringChief['user_login']\r\n        newData[\"fiscal_action_homologation_auditor_id\"] = monitoringChief['user_registration_id']\r\n        newData[\"fiscal_action_homologation_auditor_name\"] = monitoringChief['user_name']\r\n      } else {\r\n        let homologationAuditor = getGroupOwnerData(fiscalActionAuditors)\r\n        newData['fiscal_action_homologation_auditor'] =  homologationAuditor['user_login']\r\n        newData[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id']\r\n        newData[\"fiscal_action_homologation_auditor_name\"] = homologationAuditor['user_name']\r\n\r\n        let supervisorAuditor = getGroupSupervisorData(fiscalActionAuditors)\r\n        if (!isEmpty(supervisorAuditor)) {\r\n          newData['fiscal_action_supervision_auditor'] =  supervisorAuditor['user_login']\r\n          newData[\"fiscal_action_supervision_auditor_id\"] = supervisorAuditor['user_registration_id']\r\n          newData[\"fiscal_action_supervision_auditor_name\"] = supervisorAuditor['user_name']\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddAuditorButtonClick = () => {\r\n    let key = isUserId ? 'user_id' : 'user_name';\r\n    if (!data[fieldName].hasOwnProperty(auditorData[key])) {\r\n      let newMembers = { ...data[fieldName] };\r\n      var auditorRegistry = getAuditorRegistry(auditorData.code, USER_ID_ENUM.USER_REGISTRATION_ID);\r\n      newMembers[auditorRegistry[key]] = auditorRegistry;\r\n      let newData = { ...data };\r\n      newData[fieldName] = newMembers;\r\n\r\n      if (setHomologationUser){\r\n        setResponsibleAuditors(newData, newMembers)\r\n      }\r\n\r\n      setData(newData);\r\n      setAuditorData({ ...BLANK_AUDITOR_MODAL_DATA });\r\n      \r\n      //testando se o toggleDummy está setado. Esta variável serve para comandar um refresh\r\n      if (toggleDummyFlag){\r\n        toggleDummyFlag()\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAuditorInputKeyEnter = () => {\r\n    for (let i = 0; i < auditorsData.length; i++) {\r\n      if (auditorsData[i]['user_registration_id'] === auditorData.code) {\r\n        setAuditorProblemMessage(false);\r\n        setAuditorData({ ...auditorData, name: auditorsData[i]['user_name'].toUpperCase() });\r\n        return;\r\n      }\r\n    }\r\n    setAuditorProblemMessage(true);\r\n  };\r\n\r\n\r\n  const mountAuditorSelectorItemLabel = (auditorDataTuple) => {\r\n    if (auditorDataTuple && auditorDataTuple[1]) {\r\n      let auditorName = auditorDataTuple[1]['user_name']\r\n      let auditorRegistrationId = auditorDataTuple[1]['user_registration_id']\r\n\r\n      if (auditorName === SEM_COMANDO_FISCAL_LABEL || auditorName === EM_MONITORAMENTO_LABEL) {\r\n        return auditorName\r\n      } else {\r\n        return `${auditorName} (${auditorRegistrationId}) `\r\n      }\r\n    }\r\n    return 'NULL'\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <FormGroup>\r\n      <Col>\r\n        <div><b>{label}</b></div>\r\n        <div className=\"row\" style={{ marginTop: '5px', paddingLeft: '15px',  paddingRight: '15px' }}>\r\n          <div>\r\n            <label>Matrícula</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"inputMat\"\r\n              value={auditorData.code}\r\n              maxLength=\"7\"\r\n              readOnly={modalReadonlyMode}\r\n              disabled={modalReadonlyMode}\r\n              invalid={invalidFlag && (Object.values(data[fieldName]).length === 0)}\r\n              onChange={event => { setAuditorProblemMessage(false); setAuditorData({ code: event.target.value, name: '' }) }}\r\n              onKeyUp={event => event.key === \"Enter\" && handleAuditorInputKeyEnter()}\r\n              onKeyPress={event => { LetterFilter(event) }}\r\n              style={{ width: \"80px\" }}\r\n            />\r\n          </div>\r\n          <div style={{ marginLeft: '15px' }}>\r\n            <label> Nome </label>\r\n            <Input\r\n              type=\"text\"\r\n              readOnly\r\n              disabled\r\n              invalid={invalidFlag && (Object.values(FormGroup).length === 0)}\r\n              className=\"form-control\"\r\n              id=\"inputNome\"\r\n              value={auditorData.name}\r\n              style={{ width: \"350px\" }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group  add_del_btn_outer\" style={{ marginTop: '29px', marginLeft: '15px' }}>\r\n            <Button size=\"sm\" color=\"primary\" outline id=\"btnFindAuditor\"\r\n              readOnly={modalReadonlyMode} disabled={isDisabled()}\r\n              onClick={() => { setAuditorProblemMessage(false); toggleFindAuditorModal(); }} >\r\n              <FcSearch size={'1.5rem'} />\r\n            </Button>\r\n            <label style={{ color: \"white\" }}> N </label>\r\n            <Button size=\"sm\" color=\"primary\" outline id=\"btnFindAuditor2\"\r\n              readOnly={modalReadonlyMode} disabled={(isDisabled()) || (auditorData.name === '' || auditorData.name === null)}\r\n              onClick={() => { setAuditorProblemMessage(false); handleAddAuditorButtonClick() }} >\r\n              <FcPlus size={'1.5rem'} />\r\n            </Button>\r\n            \r\n            {!isEmpty(firstOptionalButtonConfig) && (\r\n              <Button size=\"sm\" color=\"primary\" outline id=\"firstOptionalButton\"\r\n                style={firstOptionalButtonConfig.style}\r\n                disabled={isOptionalButtonDisabled(firstOptionalButtonConfig)} \r\n                onClick={() => { handleOptionalButtonClick(firstOptionalButtonConfig); }} \r\n                onMouseOver={() => { setFirstTooltipOpen(true) }} \r\n                onMouseOut={() => { setFirstTooltipOpen(false) }} >\r\n                {firstOptionalButtonConfig.label}\r\n              </Button>\r\n              )\r\n            }\r\n            {!isEmpty(secondOptionalButtonConfig) && (\r\n                <Button size=\"sm\" color=\"primary\" outline id=\"secondOptionalButton\" \r\n                  style={secondOptionalButtonConfig.style}\r\n                  disabled={isOptionalButtonDisabled(secondOptionalButtonConfig)} \r\n                  onClick={() => { handleOptionalButtonClick(secondOptionalButtonConfig); }} \r\n                  onMouseOver={() => { setSecondTooltipOpen(true) }} \r\n                  onMouseOut={() => { setSecondTooltipOpen(false) }} >\r\n                {secondOptionalButtonConfig.label}\r\n              </Button>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n        {\r\n          auditorProblemMessage ?\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\" style={{ marginLeft: '5px' }}>\r\n                <label style={{ color: \"red\" }}>\r\n                  Auditor não encontrado!\r\n                </label>\r\n              </div>\r\n            </div>\r\n            :\r\n            <div />\r\n        }\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div>\r\n              <ul id=\"tags\">\r\n                {\r\n                  Object.entries(data[fieldName]).map((key_value) => {\r\n                    if (key_value) {\r\n                      return (\r\n                        <li key={key_value[0]} style={{ display: \"inline-block\", paddingRight: \"20px\" }}>\r\n                          <AuditorSelectorItem\r\n                            readOnly={modalReadonlyMode}\r\n                            disabled={modalReadonlyMode}\r\n                            text={mountAuditorSelectorItemLabel(key_value)}\r\n                            close={() => handleRemoveAuditorButtonClick(key_value[0])}\r\n                          />\r\n                        </li>)\r\n                    } else {\r\n                      return \"\"\r\n                    }\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        { !isEmpty(firstOptionalButtonConfig) && !isEmpty(firstOptionalButtonConfig.tooltip) && (<Tooltip\r\n          placement=\"top\"\r\n          isOpen={firstTooltipOpen}\r\n          target=\"firstOptionalButton\"\r\n          toggle={toggleFirstTooltip}\r\n        >\r\n          {firstOptionalButtonConfig.tooltip}\r\n        </Tooltip>)\r\n        }\r\n\r\n       { !isEmpty(secondOptionalButtonConfig) && !isEmpty(secondOptionalButtonConfig.tooltip) && (<Tooltip\r\n          placement=\"top\"\r\n          isOpen={secondTooltipOpen}\r\n          target=\"secondOptionalButton\"\r\n          toggle={toggleSecondTooltip}\r\n        >\r\n          {secondOptionalButtonConfig.tooltip}\r\n        </Tooltip>)\r\n        }\r\n  </Col>\r\n  {isAuditorFindModalActive && <AuditorFindModal show={isAuditorFindModalActive} toggle={toggleFindAuditorModal} auditorData={auditorData} setAuditorData={setAuditorData} />}\r\n</FormGroup>\r\n);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}