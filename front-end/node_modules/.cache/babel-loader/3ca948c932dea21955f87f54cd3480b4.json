{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nexport default function useAsync(callback) {\n  _s();\n\n  let dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  const [value, setValue] = useState();\n  const callbackMemoized = useCallback(() => {\n    setLoading(true);\n    setError(undefined);\n    setValue(undefined);\n    callback().then(setValue).catch(setError).finally(() => setLoading(false)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n  useEffect(() => {\n    callbackMemoized();\n  }, [callbackMemoized]);\n  return {\n    loading,\n    error,\n    value\n  };\n}\n\n_s(useAsync, \"tllnvOFDsFTMvYuLPRYwnZrGrUQ=\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/hooks/useAsync.js"],"names":["useCallback","useEffect","useState","useAsync","callback","dependencies","loading","setLoading","error","setError","value","setValue","callbackMemoized","undefined","then","catch","finally"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,eAAe,SAASC,QAAT,CAAkBC,QAAlB,EAA+C;AAAA;;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAC5D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AAEA,QAAMU,gBAAgB,GAAGZ,WAAW,CAAC,MAAM;AACzCO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAACI,SAAD,CAAR;AACAF,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACAT,IAAAA,QAAQ,GACLU,IADH,CACQH,QADR,EAEGI,KAFH,CAESN,QAFT,EAGGO,OAHH,CAGW,MAAMT,UAAU,CAAC,KAAD,CAH3B,EAJyC,CAQ3C;AACC,GATmC,EASjCF,YATiC,CAApC;AAWAJ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA,SAAO;AAAEN,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBE,IAAAA;AAAlB,GAAP;AACD;;GArBuBP,Q","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport default function useAsync(callback, dependencies = []) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n  const [value, setValue] = useState()\r\n\r\n  const callbackMemoized = useCallback(() => {\r\n    setLoading(true)\r\n    setError(undefined)\r\n    setValue(undefined)\r\n    callback()\r\n      .then(setValue)\r\n      .catch(setError)\r\n      .finally(() => setLoading(false))\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, dependencies)\r\n\r\n  useEffect(() => {\r\n    callbackMemoized()\r\n  }, [callbackMemoized])\r\n\r\n  return { loading, error, value }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}