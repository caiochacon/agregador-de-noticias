{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Maps.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport { useJsApiLoader } from '@react-google-maps/api';\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardBody, Row, Col, Input, Button, Modal, ModalHeader, ModalBody, ListGroup, ListGroupItem, Spinner, Alert, InputGroupText, InputGroup } from \"reactstrap\";\nimport axios from \"axios\";\nimport axiosRetry from 'axios-retry';\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\nimport { getRetryConfig } from \"axios/AxiosUtils\";\nimport mapOptions from 'common/mapOptions.js';\nimport env from 'common/enviroment.js';\nimport USER_ID_ENUM from 'common/enumerators/UserIdEnum';\nimport Table from 'components/tables/Table';\nimport Tabs from 'components/Tabs';\nimport MapLegend from 'components/MapLegend';\nimport { MapsContext } from 'context/MapsContext';\nimport { WarningsContext } from 'context/WarningsContext';\nimport { VehicleContext } from 'context/VehicleContext';\nimport { AuditorsContext } from 'context/AuditorsContext';\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\nimport { isLoggedIn } from 'common/SessionUtils';\nimport { getCortexToken } from 'common/SessionUtils';\nimport { getUserRole } from 'common/SessionUtils';\nimport WarningModal from 'components/modals/WarningModal/WarningModal';\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\nimport { getUserLogin } from 'common/SessionUtils';\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\nimport { isLocked } from 'common/enumerators/LockEnum';\nimport { isTreated } from 'common/enumerators/NotificationStatus';\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL } from \"common/model/Notification\";\nimport { hasUserLoggedData } from 'common/SessionUtils';\nimport { getUserRegistrationID } from 'common/SessionUtils';\nimport { getUserID } from 'common/SessionUtils';\nimport { getUserName } from 'common/SessionUtils';\nimport { Notification } from \"common/model/Notification\";\nimport { isEmpty } from 'common/utils/collections';\nimport { getNowDateTimeString } from 'common/utils/validate';\nimport LocationTrackingModal from 'components/modals/LocationTrackingModal/LocationTrackingModal';\nimport useToggle from 'common/hooks/useToogle';\nimport { useModalWithData } from 'common/hooks/useModalWithData';\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Maps(props) {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const body = {\n    'cortex_token': getCortexToken(),\n    'role': getUserRole()\n  };\n  const history = useHistory();\n  const {\n    setplaca\n  } = React.useContext(VehicleContext);\n  const {\n    warnings,\n    traffic,\n    changeVisto,\n    printIsMap,\n    startSSE,\n    wasReloaded,\n    setWasReloaded\n  } = React.useContext(WarningsContext);\n  const {\n    getAuditorRegistry\n  } = React.useContext(AuditorsContext);\n  const {\n    activeCameras,\n    pointsData,\n    setPointsData,\n    getCamerasData\n  } = React.useContext(MapsContext);\n  const {\n    warningsViewed,\n    setWarningsViewed\n  } = React.useContext(WarningsUpdateContext);\n  const [spinner, setSpinner] = React.useState(false); //const [modalMaps, setModalMaps] = React.useState(false)\n\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const [index, setIndex] = useState(0); //const toggleMapsModal = () => setModalMaps(!modalMaps)\n\n  const [modalPlaca, setModalPlaca] = React.useState(false);\n\n  const toggleModalPlaca = () => setModalPlaca(!modalPlaca);\n\n  const [warningModalData, setWarningModalData] = React.useState({});\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA);\n  const [activeModal, setActiveModal] = React.useState(-1);\n\n  const toggleModal = function () {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    setActiveModal(i);\n  };\n\n  const [reload, setReload] = React.useState(false);\n\n  const toggleReload = () => setReload(!reload);\n\n  const [fetchDataFlag, toggleFetchData] = useToggle(false);\n  const {\n    modalData,\n    setModalData,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff\n  } = useModalWithData();\n  const axiosRetryProxy = axios.create(getTimeoutConfig());\n  axiosRetry(axiosRetryProxy, getRetryConfig());\n  const {\n    isLoaded: googleMapLoaded,\n    loadError: googleMapError\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: env.googleApiKey\n  });\n  const [typeCameraFilters, setTypeCameraFilters] = React.useState({\n    'DNIT': true,\n    'PRF': true,\n    'SEMOB': true,\n    'Estadual': true\n  });\n  const displayLegend = {\n    \"DNIT\": \"DNIT\",\n    \"EQUIPAMENTOS PRF\": \"PRF\",\n    \"Pontos Estado\": \"ESTADO\" //\"SUGESTÕES\": \"SUGESTÕES\"\n\n  };\n  const colors = {\n    \"DNIT\": \"#0f9d58\",\n    \"EQUIPAMENTOS PRF\": \"#0288d1\",\n    \"Pontos Estado\": \"#ffd600\" //\"SUGESTÕES\": \"#801e0f\"\n\n  };\n  const categories = Object.keys(colors);\n  const [activeMarkers, setActiveMarkers] = React.useState(new Array(categories.length));\n\n  const titleCase = text => {\n    return text.toLowerCase().split(' ').map(word => {\n      return word[0].toUpperCase() + word.slice(1);\n    }).join(' ');\n  };\n\n  const ChangeKey = nome => {\n    let mudar = [];\n    nome.split('').forEach((letra, index) => {\n      if (nome[index] === \"\".concat(nome[index].toUpperCase())) {\n        mudar.push(nome[index]);\n      }\n    });\n    mudar.forEach(function (letra) {\n      nome = nome.replace(\"\".concat(letra), \" \".concat(letra.toLowerCase()));\n    });\n    return titleCase(nome);\n  };\n\n  const pointClick = index => {\n    return () => {\n      let points = [...pointsData];\n      points[index] = { ...points[index],\n        active: !points[index].active\n      };\n      setPointsData(points);\n    };\n  };\n\n  const markerClick = index => () => {\n    let markers = [...activeMarkers];\n    markers[index] = !markers[index];\n    setActiveMarkers(markers);\n  }; //verificar props do container\n  //Aparentemente tem um valor 'auto' para ajustar automaticamente o tamanho da altura para caber\n\n\n  const containerStyle = {\n    width: '100%',\n    height: 'auto'\n  };\n\n  const setEditionDataOLD = (warning, data) => {\n    const auditorData = getAuditorRegistry(getUserLogin(), USER_ID_ENUM.USER_LOGIN);\n\n    if (warning) {\n      if (warning['fiscal_action_auditors']) {\n        let auditors = {};\n\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_NAME);\n        }\n\n        data[\"fiscal_action_auditors\"] = auditors;\n      }\n\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_report_auditor\"], USER_ID_ENUM.USER_ID);\n\n      if (monitoringAuditor && Object.keys(monitoringAuditor).length > 0) {\n        data[\"monitoring_user_id\"] = monitoringAuditor['user_id'];\n        data[\"monitoring_user_name\"] = monitoringAuditor['user_name'];\n        data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id'];\n      } else {\n        data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\";\n\n        if (auditorData) {\n          data[\"monitoring_user_registration_id\"] = auditorData.user_registration_id;\n          data[\"monitoring_user_id\"] = auditorData.user_id;\n          data[\"monitoring_user_name\"] = auditorData.user_name;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  const setEditionData = (warning, data) => {\n    if (!warning) return data;\n    let status = warning.fiscal_notification_status;\n    data['fiscal_action_designation_report'] = isEmpty(warning['fiscal_action_designation_report']) ? \"\" : warning['fiscal_action_designation_report']; //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS. \n\n    if (isTreated(warning) || isLocked(warning)) {\n      if (!isEmpty(warning.fiscal_action_auditors)) {\n        let homologationAuditor = getAuditorRegistry(warning[\"fiscal_action_homologation_auditor\"], USER_ID_ENUM.USER_LOGIN);\n        data[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id'];\n      }\n\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_designation_auditor\"], USER_ID_ENUM.USER_LOGIN);\n      data[\"monitoring_user_id\"] = monitoringAuditor['user_id'];\n      data[\"monitoring_user_name\"] = monitoringAuditor['user_name'];\n      data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id'];\n      data[\"monitoring_user_login\"] = monitoringAuditor['user_login'];\n      data[\"fiscal_action_designation_date\"] = getNowDateTimeString();\n      data[\"fiscal_action_designation_auditor\"] = monitoringAuditor['user_name'];\n      let auditors = {}; //Tratamento para os casos de designação sem comando fiscal. \n\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO) {\n        auditors[EM_MONITORAMENTO] = {\n          'user_name': EM_MONITORAMENTO_LABEL,\n          'user_login': EM_MONITORAMENTO_LABEL\n        };\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA) {\n        auditors[SEM_COMANDO_FISCAL] = {\n          'user_name': SEM_COMANDO_FISCAL_LABEL,\n          'user_login': SEM_COMANDO_FISCAL_LABEL\n        };\n      } else if (warning['fiscal_action_auditors']) {\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN);\n        }\n      }\n\n      data[\"fiscal_action_auditors\"] = auditors;\n    } else {\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA E O LOCK ESTÁ DESATIVADO, TODOS OS CAMPOS ESTÃO VAZIOS E O USUÁRIO LOGADO PASSARÁ A SER RESPONSÁVEL PELO MONITORAMENTO\n      data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\";\n\n      if (hasUserLoggedData()) {\n        data[\"monitoring_user_registration_id\"] = getUserRegistrationID();\n        data[\"monitoring_user_id\"] = getUserID();\n        data[\"monitoring_user_name\"] = getUserName();\n        data[\"monitoring_user_login\"] = getUserLogin();\n      }\n    }\n\n    return data;\n  };\n\n  const openWarningModal = warning => {\n    let data = { ...DESIGNATION_FORM_DATA,\n      fiscal_action_auditors: {}\n    };\n    let notificationObj = new Notification(warning);\n    setFormData(setEditionData(warning, data));\n    setWarningModalData(notificationObj);\n    toggleModal(0);\n  };\n\n  const openMapModal = (plate, location) => {\n    let modalData = {\n      plate: plate,\n      location: location\n    };\n    setModalData(modalData);\n    toggleModalOn(MODAL_TYPE_ENUM.MAP, modalData);\n    toggleFetchData();\n  };\n\n  const Local = props => {\n    if (props && props.event_json) {\n      let placa = props.event_json['evento_infevento_nrplaca'];\n      let local = props.event_json['evento_infevento_dsreflocal'];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: props.location !== \"null\" && \"underlined_text\",\n          onClick: () => {\n            openMapModal(placa, local);\n          },\n          style: {\n            cursor: props.location !== \"null\" && \"pointer\",\n            color: '#2322c8'\n          },\n          children: props.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return \"-\";\n    }\n  };\n\n  React.useEffect(() => {\n    if (isLoggedIn()) {\n      printIsMap();\n      getCamerasData();\n      changeVisto();\n\n      if (wasReloaded) {\n        startSSE();\n        setWasReloaded(false);\n        setWasReloaded(false);\n      }\n    } else {\n      history.push('/login');\n    }\n\n    testAndUnlockWarning(warningsViewed, setWarningsViewed); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    setIndex(0); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tabIndex]);\n\n  const FilterEvent = (data_row, field_to_filter) => {\n    if (data_row[field_to_filter].includes('_LPD')) {\n      if (typeCameraFilters.DNIT) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (data_row[field_to_filter].startsWith('BR')) {\n      if (typeCameraFilters.PRF) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (data_row[field_to_filter].startsWith('PB')) {\n      if (typeCameraFilters.Estadual) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (!typeCameraFilters.SEMOB) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const FilterBar = () => {\n    _s2();\n\n    var _s = $RefreshSig$();\n\n    const [filterOptions, setFilterOptions] = useState([{\n      label: 'Passagem',\n      value: 'passagem'\n    }, {\n      label: 'Local',\n      value: 'local'\n    }, {\n      label: 'UF',\n      value: 'uf'\n    }, {\n      label: 'Placa',\n      value: 'placa'\n    }, {\n      label: 'Veículo',\n      value: 'veiculo'\n    }, {\n      label: 'Modelo',\n      value: 'modelo'\n    }, {\n      label: 'Alerta',\n      value: 'alerta'\n    }]);\n    const [selectedFilter, setSelectedFilter] = useState('');\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const handleFilterChange = event => {\n      setSelectedFilter(event.target.value);\n    };\n\n    const handleSearchChange = event => {\n      setSearchTerm(event.target.value);\n    };\n\n    const filteredData = data => {\n      if (!selectedFilter || !searchTerm) {\n        return data;\n      }\n\n      const filteredByField = data.filter(item => {\n        const searchValue = searchTerm.toLowerCase();\n        const itemValue = item[selectedFilter].toLowerCase();\n        return itemValue.includes(searchValue);\n      });\n      return filteredByField;\n    };\n\n    const createMapModal = useMemo(() => /*#__PURE__*/_jsxDEV(LocationTrackingModal, {\n      show: isModalActive,\n      googleMapOnLoad: googleMapLoaded,\n      googleMapOnError: googleMapError,\n      toggle: toggleModalOff,\n      data: modalData,\n      fetchData: fetchDataFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 40\n    }, this), [modalData]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: [googleMapError && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"N\\xE3o foi poss\\xEDvel carregar o GoogleMap.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 32\n            }, this), googleMapLoaded ? /*#__PURE__*/_jsxDEV(Card, {\n              className: \"card-plain\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"map\",\n                  className: \"map\",\n                  style: {\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    display: \"flex\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MapLegend, {\n                    categories: categories,\n                    colors: colors,\n                    activeCategories: activeMarkers,\n                    onClick: markerClick,\n                    display: displayLegend\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n                    mapContainerStyle: containerStyle,\n                    center: props.center,\n                    zoom: props.zoom,\n                    options: mapOptions,\n                    children: activeCameras.filter(point => {\n                      return !activeMarkers[categories.indexOf(point['category'])];\n                    }).map((point, index) =>\n                    /*#__PURE__*/\n                    //Marcação passando ícone\n                    _jsxDEV(Marker, {\n                      className: \"map-icon\",\n                      position: {\n                        lat: point['nrlatitude'],\n                        lng: point['nrlongitude']\n                      },\n                      onClick: pointClick(index),\n                      zIndex: pointsData[index].active ? categories.length + 1 : categories.length - categories.indexOf(point['category']),\n                      options: {\n                        icon: {\n                          url: \"https://ik.imagekit.io/exi1dv80wm/pin/\".concat(pointsData[index].active ? '00ff00' : colors[point['category']].slice(-6), \".png\"),\n                          scaledSize: {\n                            height: 26,\n                            width: 21\n                          }\n                        }\n                      }\n                    }, \"marker-\".concat(index), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 34\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              names: ['Tabela de alertas', 'Tabela de tráfego'],\n              index: [tabIndex, setTabIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                borderTopLeftRadius: '0px'\n              },\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n                    style: {\n                      backgroundColor: '#51cbce',\n                      fontWeight: 'bold',\n                      color: 'white',\n                      borderColor: '#51cbce',\n                      margin: ' 0 30px 0 0',\n                      padding: '0 6px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      addon: true,\n                      \"aria-label\": \"Checkbox for following text input\",\n                      type: \"checkbox\",\n                      checked: typeCameraFilters.Estadual,\n                      style: {\n                        margin: '0 15px 0 0',\n                        transform: 'scale(1.3)'\n                      },\n                      onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                        'Estadual': event.target.checked\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 21\n                    }, this), \"Estadual\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroupText, {\n                    style: {\n                      backgroundColor: '#51cbce',\n                      fontWeight: 'bold',\n                      color: 'white',\n                      borderColor: '#51cbce',\n                      margin: ' 0 30px 0 0',\n                      padding: '0 6px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      addon: true,\n                      \"aria-label\": \"Checkbox for following text input\",\n                      type: \"checkbox\",\n                      checked: typeCameraFilters.PRF,\n                      style: {\n                        margin: '0 15px 0 0',\n                        transform: 'scale(1.3)'\n                      },\n                      onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                        'PRF': event.target.checked\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 21\n                    }, this), \"PRF\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroupText, {\n                    style: {\n                      backgroundColor: '#51cbce',\n                      fontWeight: 'bold',\n                      color: 'white',\n                      borderColor: '#51cbce',\n                      margin: ' 0 30px 0 0',\n                      padding: '0 6px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      addon: true,\n                      \"aria-label\": \"Checkbox for following text input\",\n                      type: \"checkbox\",\n                      checked: typeCameraFilters.DNIT,\n                      style: {\n                        margin: '0 15px 0 0',\n                        transform: 'scale(1.3)'\n                      },\n                      onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                        'DNIT': event.target.checked\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 21\n                    }, this), \"DNIT\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroupText, {\n                    style: {\n                      backgroundColor: '#51cbce',\n                      fontWeight: 'bold',\n                      color: 'white',\n                      borderColor: '#51cbce',\n                      margin: ' 0 30px 0 0',\n                      padding: '0 6px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      addon: true,\n                      \"aria-label\": \"Checkbox for following text input\",\n                      type: \"checkbox\",\n                      checked: typeCameraFilters.SEMOB,\n                      style: {\n                        margin: '0 15px 0 0',\n                        transform: 'scale(1.3)'\n                      },\n                      onChange: event => setTypeCameraFilters({ ...typeCameraFilters,\n                        'SEMOB': event.target.checked\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 21\n                    }, this), \"SEMOB\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"filter-bar\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"filter-options\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        style: {\n                          color: 'blue',\n                          fontWeight: 'bold'\n                        },\n                        children: \"Selecionar:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 534,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        value: selectedFilter,\n                        onChange: handleFilterChange,\n                        children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: option.value,\n                          children: option.label\n                        }, option.value, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 25\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 21\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"search-box\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Pesquisar...\",\n                        value: searchTerm,\n                        onChange: handleSearchChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(Table, {\n                      state: [index, setIndex],\n                      data: warnings.filter(warning => FilterEvent(warning, 'evento_infevento_dsreflocal')),\n                      invalid: [\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"],\n                      pageSize: 10,\n                      columns: {\n                        \"Alerta\": {\n                          Func: props => /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: props.data\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 564,\n                            columnNumber: 31\n                          }, this),\n                          args: \"nome\"\n                        },\n                        \"Passagem\": {\n                          Func: props => {\n                            const dateObj = new Date(props.data).toLocaleString(\"pt-BR\").split(' ');\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                textAlign: 'center',\n                                maxWidth: 80\n                              },\n                              children: [dateObj[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 574,\n                                columnNumber: 101\n                              }, this), dateObj[1]]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 574,\n                              columnNumber: 38\n                            }, this);\n                          },\n                          args: \"evento_infevento_dhregpassagem\"\n                        },\n                        \"Local\": {\n                          Func: props => {\n                            return /*#__PURE__*/_jsxDEV(Local, {\n                              location: props.data,\n                              event_json: props.row_data\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 581,\n                              columnNumber: 33\n                            }, this);\n                          },\n                          args: \"evento_infevento_dsreflocal\"\n                        },\n                        \"UF\": \"evento_infevento_sguf\",\n                        \"Placa\": {\n                          Func: props => /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"links-table\",\n                            onClick: () => {\n                              setModalData(props.row_data);\n                              toggleModalPlaca();\n                            },\n                            children: props.data\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 589,\n                            columnNumber: 31\n                          }, this),\n                          args: \"evento_infevento_nrplaca\",\n                          headerStyle: {\n                            textAlign: \"center\"\n                          }\n                        },\n                        \"Veículo\": \"evento_infevento_dstipoveiculo\",\n                        \"Modelo\": \"evento_infevento_nomarcamodelo\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 556,\n                      columnNumber: 23\n                    }, this), tabIndex === 1 && /*#__PURE__*/_jsxDEV(Table, {\n                      state: [index, setIndex],\n                      data: traffic.filter(event => FilterEvent(event, 'dsreflocal')),\n                      pageSize: 100,\n                      invalid: [\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"],\n                      style: {\n                        fontSize: '0.8rem'\n                      },\n                      columns: {\n                        \"Passagem\": {\n                          Func: props => {\n                            const dateObj = new Date(props.data);\n                            const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ');\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                textAlign: 'center',\n                                maxWidth: 80\n                              },\n                              children: [dateHour[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 616,\n                                columnNumber: 102\n                              }, this), dateHour[1]]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 616,\n                              columnNumber: 38\n                            }, this);\n                          },\n                          args: \"dhregpassagem\"\n                        },\n                        \"Local\": {\n                          Func: props => /*#__PURE__*/_jsxDEV(Local, {\n                            location: props.data,\n                            event_json: props.row_data\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 621,\n                            columnNumber: 46\n                          }, this),\n                          args: \"dsreflocal\"\n                        },\n                        \"UF\": \"sguf\",\n                        \"Placa\": {\n                          Func: _s(props => {\n                            _s();\n\n                            const [modal, setModal] = React.useState(false);\n                            const [dataVehicle, setdataVehicle] = React.useState([]);\n                            const [isErroInPost, setisErroInPost] = React.useState(false);\n\n                            const ToVehicleRoute = () => {\n                              setplaca(props.data);\n                            };\n\n                            const closeModalVehicle = () => {\n                              setModal(false);\n                            };\n\n                            function sleep(time) {\n                              return new Promise(resolve => setTimeout(resolve, time));\n                            }\n\n                            const toggleModal = () => {\n                              setisErroInPost(false);\n                              axiosRetryProxy.post(\"\".concat(env.apiAddress, \"/cortex/license/\").concat(props.data), body).then(res => {\n                                let data_consulta = [];\n                                sleep(2000).then(() => {\n                                  // Do something after the sleep!\n                                  Object.entries(res.data).forEach(_ref => {\n                                    let [key, value] = _ref;\n\n                                    if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\" || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\" || key === \"municipioPlaca\") {\n                                      data_consulta.push({\n                                        \"chave\": key ? ChangeKey(key) : '',\n                                        \"valor\": value ? value : ''\n                                      });\n                                    }\n                                  });\n                                  setdataVehicle(data_consulta);\n                                });\n                              }).catch(err => {\n                                sleep(1000).then(() => {\n                                  setisErroInPost(true);\n                                });\n                              }).finally(() => {\n                                sleep(1000).then(() => {\n                                  setModal(true);\n                                });\n                              });\n                            };\n\n                            return /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"underlined_text\",\n                                onClick: toggleModal,\n                                style: {\n                                  textAlign: 'center',\n                                  cursor: \"pointer\"\n                                },\n                                children: props.data\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 678,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                                isOpen: modal,\n                                toggle: toggleModal,\n                                children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                                  toggle: closeModalVehicle,\n                                  children: \"Placa \".concat(props.data)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 687,\n                                  columnNumber: 37\n                                }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                                  children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n                                    children: dataVehicle.length && Array.isArray(dataVehicle) ? dataVehicle.map((dados, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                                      className: \"justify-content-between\",\n                                      children: /*#__PURE__*/_jsxDEV(Row, {\n                                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                                          children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                            children: dados.chave\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 696,\n                                            columnNumber: 53\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 695,\n                                          columnNumber: 51\n                                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                                          children: dados.valor\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 698,\n                                          columnNumber: 51\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 694,\n                                        columnNumber: 49\n                                      }, this)\n                                    }, index, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 693,\n                                      columnNumber: 47\n                                    }, this)) : isErroInPost ? /*#__PURE__*/_jsxDEV(Row, {\n                                      className: \"text-center\",\n                                      children: /*#__PURE__*/_jsxDEV(Col, {\n                                        children: /*#__PURE__*/_jsxDEV(Alert, {\n                                          color: \"danger\",\n                                          children: \"Error !\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 708,\n                                          columnNumber: 51\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 707,\n                                        columnNumber: 49\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 706,\n                                      columnNumber: 47\n                                    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n                                      Row: true,\n                                      className: \"text-center\",\n                                      children: /*#__PURE__*/_jsxDEV(Col, {\n                                        children: /*#__PURE__*/_jsxDEV(Spinner, {\n                                          color: \"info\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 716,\n                                          columnNumber: 51\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 715,\n                                        columnNumber: 49\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 714,\n                                      columnNumber: 47\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 689,\n                                    columnNumber: 39\n                                  }, this), Array.isArray(dataVehicle) && dataVehicle.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n                                    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 723,\n                                      columnNumber: 43\n                                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                      color: \"primary\",\n                                      className: \"btn-md\",\n                                      onClick: ToVehicleRoute,\n                                      children: \"Mais Informa\\xE7\\xF5es\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 724,\n                                      columnNumber: 43\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 722,\n                                    columnNumber: 41\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 688,\n                                  columnNumber: 37\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 686,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true);\n                          }, \"foEWPVkaXsf3rN+Sl7fi7kbSowo=\"),\n                          args: \"nrplaca\",\n                          headerStyle: {\n                            textAlign: \"center\"\n                          }\n                        },\n                        \"Veículo\": \"dstipoveiculo\",\n                        \"Modelo\": \"nomarcamodelo\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 23\n                    }, this), activeModal === 0 && /*#__PURE__*/_jsxDEV(WarningModal, {\n                      show: true,\n                      data: warningModalData,\n                      formData: formData,\n                      editionMode: false,\n                      setFormData: setFormData,\n                      toggle: () => toggleModal(-1),\n                      reloadMethod: toggleReload,\n                      spinner: spinner\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                      isOpen: modalPlaca,\n                      toggle: toggleModalPlaca,\n                      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                        toggle: toggleModalPlaca,\n                        children: \"Placa \".concat(modalData['nrplaca'], \"}\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 750,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                        style: {\n                          justifyContent: 'center',\n                          alignContent: 'center',\n                          display: 'flex'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }, this), modalType === MODAL_TYPE_ENUM.MAP && createMapModal]\n    }, void 0, true);\n  };\n\n  _s2(FilterBar, \"Bf9vQ8nRaPFeckKhm4LBBOqU6OA=\");\n\n  Maps.defaultProps = {\n    center: {\n      lat: -7.254653852199306,\n      lng: -36.69661154766497\n    },\n    zoom: 4\n  };\n}\n\n_s3(Maps, \"C50rLe/Y2LmgxszTzIol/j6Pl28=\", false, function () {\n  return [useHistory, useToggle, useModalWithData, useJsApiLoader];\n});\n\n_c = Maps;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/views/Maps.js"],"names":["React","useMemo","useState","GoogleMap","Marker","useJsApiLoader","useHistory","Card","CardBody","Row","Col","Input","Button","Modal","ModalHeader","ModalBody","ListGroup","ListGroupItem","Spinner","Alert","InputGroupText","InputGroup","axios","axiosRetry","getTimeoutConfig","getRetryConfig","mapOptions","env","USER_ID_ENUM","Table","Tabs","MapLegend","MapsContext","WarningsContext","VehicleContext","AuditorsContext","WarningsUpdateContext","isLoggedIn","getCortexToken","getUserRole","WarningModal","DESIGNATION_FORM_DATA","getUserLogin","testAndUnlockWarning","isLocked","isTreated","NOTIFICATION_STATUS_ENUM","EM_MONITORAMENTO","EM_MONITORAMENTO_LABEL","SEM_COMANDO_FISCAL","SEM_COMANDO_FISCAL_LABEL","hasUserLoggedData","getUserRegistrationID","getUserID","getUserName","Notification","isEmpty","getNowDateTimeString","LocationTrackingModal","useToggle","useModalWithData","MODAL_TYPE_ENUM","Maps","props","body","history","setplaca","useContext","warnings","traffic","changeVisto","printIsMap","startSSE","wasReloaded","setWasReloaded","getAuditorRegistry","activeCameras","pointsData","setPointsData","getCamerasData","warningsViewed","setWarningsViewed","spinner","setSpinner","tabIndex","setTabIndex","index","setIndex","modalPlaca","setModalPlaca","toggleModalPlaca","warningModalData","setWarningModalData","formData","setFormData","activeModal","setActiveModal","toggleModal","i","reload","setReload","toggleReload","fetchDataFlag","toggleFetchData","modalData","setModalData","isModalActive","modalType","toggleModalOn","toggleModalOff","axiosRetryProxy","create","isLoaded","googleMapLoaded","loadError","googleMapError","id","googleMapsApiKey","googleApiKey","typeCameraFilters","setTypeCameraFilters","displayLegend","colors","categories","Object","keys","activeMarkers","setActiveMarkers","Array","length","titleCase","text","toLowerCase","split","map","word","toUpperCase","slice","join","ChangeKey","nome","mudar","forEach","letra","push","replace","pointClick","points","active","markerClick","markers","containerStyle","width","height","setEditionDataOLD","warning","data","auditorData","USER_LOGIN","auditors","auditorID","USER_NAME","monitoringAuditor","USER_ID","user_registration_id","user_id","user_name","setEditionData","status","fiscal_notification_status","fiscal_action_auditors","homologationAuditor","EM_MONITORAMENTO_HOMOLOGADO","SEM_COMANDO","SEM_COMANDO_HOMOLOGADA","openWarningModal","notificationObj","openMapModal","plate","location","MAP","Local","event_json","placa","local","cursor","color","useEffect","FilterEvent","data_row","field_to_filter","includes","DNIT","startsWith","PRF","Estadual","SEMOB","FilterBar","filterOptions","setFilterOptions","label","value","selectedFilter","setSelectedFilter","searchTerm","setSearchTerm","handleFilterChange","event","target","handleSearchChange","filteredData","filteredByField","filter","item","searchValue","itemValue","createMapModal","position","overflow","display","center","zoom","point","indexOf","lat","lng","icon","url","scaledSize","borderTopLeftRadius","backgroundColor","fontWeight","borderColor","margin","padding","transform","checked","option","undefined","Func","args","dateObj","Date","toLocaleString","textAlign","maxWidth","row_data","headerStyle","fontSize","dateHour","modal","setModal","dataVehicle","setdataVehicle","isErroInPost","setisErroInPost","ToVehicleRoute","closeModalVehicle","sleep","time","Promise","resolve","setTimeout","post","apiAddress","then","res","data_consulta","entries","key","catch","err","finally","isArray","dados","chave","valor","justifyContent","alignContent","defaultProps"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\r\nimport { GoogleMap, Marker } from '@react-google-maps/api'\r\nimport { useJsApiLoader } from '@react-google-maps/api';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ListGroup, ListGroupItem,\r\n  Spinner, Alert,\r\n  InputGroupText, InputGroup\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport axiosRetry from 'axios-retry';\r\nimport { getTimeoutConfig } from \"axios/AxiosUtils\";\r\nimport { getRetryConfig } from \"axios/AxiosUtils\";\r\n\r\nimport mapOptions from 'common/mapOptions.js'\r\nimport env from 'common/enviroment.js'\r\nimport USER_ID_ENUM from 'common/enumerators/UserIdEnum'\r\n\r\nimport Table from 'components/tables/Table'\r\nimport Tabs from 'components/Tabs';\r\n\r\nimport MapLegend from 'components/MapLegend'\r\n\r\nimport { MapsContext } from 'context/MapsContext'\r\nimport { WarningsContext } from 'context/WarningsContext';\r\nimport { VehicleContext } from 'context/VehicleContext';\r\nimport { AuditorsContext } from 'context/AuditorsContext';\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\n\r\nimport { isLoggedIn } from 'common/SessionUtils';\r\nimport { getCortexToken } from 'common/SessionUtils';\r\nimport { getUserRole } from 'common/SessionUtils';\r\n\r\nimport WarningModal from 'components/modals/WarningModal/WarningModal';\r\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\r\nimport { getUserLogin } from 'common/SessionUtils';\r\nimport { testAndUnlockWarning } from \"common/rules/NotificationRules\";\r\nimport { isLocked } from 'common/enumerators/LockEnum';\r\nimport { isTreated } from 'common/enumerators/NotificationStatus';\r\nimport NOTIFICATION_STATUS_ENUM from 'common/enumerators/NotificationStatus';\r\nimport { EM_MONITORAMENTO, EM_MONITORAMENTO_LABEL, SEM_COMANDO_FISCAL, SEM_COMANDO_FISCAL_LABEL  } from \"common/model/Notification\";\r\nimport { hasUserLoggedData } from 'common/SessionUtils';\r\nimport { getUserRegistrationID } from 'common/SessionUtils';\r\nimport { getUserID } from 'common/SessionUtils';\r\nimport { getUserName } from 'common/SessionUtils';\r\nimport { Notification } from \"common/model/Notification\";\r\nimport { isEmpty } from 'common/utils/collections';\r\nimport { getNowDateTimeString } from 'common/utils/validate';\r\nimport LocationTrackingModal from 'components/modals/LocationTrackingModal/LocationTrackingModal';\r\nimport useToggle from 'common/hooks/useToogle';\r\nimport { useModalWithData } from 'common/hooks/useModalWithData';\r\nimport MODAL_TYPE_ENUM from 'common/enumerators/ModalTypeEnum';\r\n\r\n\r\n\r\nexport default function Maps(props) {\r\n\r\n  const body = {\r\n    'cortex_token': getCortexToken(),\r\n    'role': getUserRole()\r\n  }\r\n\r\n  const history = useHistory()\r\n\r\n  const { setplaca } = React.useContext(VehicleContext)\r\n  const { warnings, traffic, changeVisto, printIsMap, startSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n  const { getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const { activeCameras, pointsData, setPointsData, getCamerasData } = React.useContext(MapsContext);\r\n  const { warningsViewed , setWarningsViewed} = React.useContext(WarningsUpdateContext)\r\n\r\n  const [spinner, setSpinner] = React.useState(false)\r\n\r\n  //const [modalMaps, setModalMaps] = React.useState(false)\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n  const [index, setIndex] = useState(0)\r\n  //const toggleMapsModal = () => setModalMaps(!modalMaps)\r\n\r\n  const [modalPlaca, setModalPlaca] = React.useState(false)\r\n  const toggleModalPlaca = () => setModalPlaca(!modalPlaca)\r\n\r\n\r\n  const [warningModalData, setWarningModalData] = React.useState({})\r\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA)\r\n  const [activeModal, setActiveModal] = React.useState(-1)\r\n  const toggleModal = (i = -1) => {\r\n    setActiveModal(i)\r\n  }\r\n  const [reload, setReload] = React.useState(false)\r\n  const toggleReload = () => setReload(!reload)\r\n\r\n  const [fetchDataFlag, toggleFetchData] = useToggle(false)\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n\r\n  const axiosRetryProxy = axios.create(getTimeoutConfig())\r\n  axiosRetry(axiosRetryProxy, getRetryConfig())\r\n\r\n  const { isLoaded: googleMapLoaded, loadError : googleMapError } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: env.googleApiKey\r\n  })\r\n\r\n\r\n  const [typeCameraFilters, setTypeCameraFilters] = React.useState({\r\n    'DNIT': true,\r\n    'PRF': true,\r\n    'SEMOB': true,\r\n    'Estadual': true\r\n  })\r\n\r\n\r\n  const displayLegend = {\r\n    \"DNIT\": \"DNIT\",\r\n    \"EQUIPAMENTOS PRF\": \"PRF\",\r\n    \"Pontos Estado\": \"ESTADO\"\r\n    //\"SUGESTÕES\": \"SUGESTÕES\"\r\n  }\r\n\r\n  const colors = {\r\n    \"DNIT\": \"#0f9d58\",\r\n    \"EQUIPAMENTOS PRF\": \"#0288d1\",\r\n    \"Pontos Estado\": \"#ffd600\"\r\n    //\"SUGESTÕES\": \"#801e0f\"\r\n  }\r\n  const categories = Object.keys(colors)\r\n  const [activeMarkers, setActiveMarkers] = React.useState(new Array(categories.length))\r\n\r\n  const titleCase = (text) => {\r\n    return text.toLowerCase()\r\n      .split(' ')\r\n      .map((word) => {\r\n        return word[0].toUpperCase() + word.slice(1);\r\n      }).join(' ')\r\n  }\r\n  \r\n\r\n  const ChangeKey = (nome) => {\r\n\r\n    let mudar = []\r\n\r\n    nome.split('').forEach((letra, index) => {\r\n      if (nome[index] === `${nome[index].toUpperCase()}`) {\r\n        mudar.push(nome[index])\r\n\r\n      }\r\n    })\r\n\r\n    mudar.forEach(function (letra) {\r\n      nome = nome.replace(`${letra}`, ` ${letra.toLowerCase()}`)\r\n    })\r\n\r\n    return titleCase(nome)\r\n\r\n  }\r\n\r\n  const pointClick = (index) => {\r\n    return () => {\r\n      let points = [...pointsData]\r\n\r\n      points[index] = {\r\n        ...points[index],\r\n        active: !points[index].active\r\n      }\r\n\r\n      setPointsData(points)\r\n    }\r\n  }\r\n\r\n\r\n  const markerClick = (index) => () => {\r\n    let markers = [...activeMarkers]\r\n\r\n    markers[index] = !markers[index]\r\n\r\n    setActiveMarkers(markers)\r\n  }\r\n\r\n  //verificar props do container\r\n  //Aparentemente tem um valor 'auto' para ajustar automaticamente o tamanho da altura para caber\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: 'auto'\r\n  };\r\n\r\n  const setEditionDataOLD = (warning, data) => {\r\n\r\n    const auditorData = getAuditorRegistry(getUserLogin(), USER_ID_ENUM.USER_LOGIN);\r\n\r\n    if (warning) {\r\n\r\n      if (warning['fiscal_action_auditors']) {\r\n        let auditors = {}\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_NAME)\r\n        }\r\n        data[\"fiscal_action_auditors\"] = auditors\r\n      }\r\n\r\n\r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_report_auditor\"], USER_ID_ENUM.USER_ID)\r\n      if (monitoringAuditor && Object.keys(monitoringAuditor).length > 0) {\r\n        data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n        data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n        data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n\r\n      } else {\r\n        data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n        if (auditorData) {\r\n          data[\"monitoring_user_registration_id\"] = auditorData.user_registration_id\r\n          data[\"monitoring_user_id\"] = auditorData.user_id\r\n          data[\"monitoring_user_name\"] = auditorData.user_name\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    return data\r\n\r\n  }\r\n\r\n  const setEditionData = (warning, data) => {\r\n    \r\n\r\n    if (!warning)\r\n      return data\r\n\r\n    \r\n    let status = warning.fiscal_notification_status\r\n    data['fiscal_action_designation_report'] = isEmpty(warning['fiscal_action_designation_report']) ? \"\" :  warning['fiscal_action_designation_report']\r\n    //SE A NOTIFICAÇÃO POSSUI STATUS MAIOR QUE DESIGNADA, TODOS OS CAMPOS OBRIGATORIAMENTE DEVEM ESTAR PREENCHIDOS. \r\n    if (isTreated(warning) || isLocked(warning) ) {\r\n      \r\n      if (!isEmpty(warning.fiscal_action_auditors)) {\r\n        let homologationAuditor = getAuditorRegistry(warning[\"fiscal_action_homologation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n        data[\"fiscal_action_homologation_auditor_id\"] = homologationAuditor['user_registration_id']\r\n      }\r\n      \r\n      let monitoringAuditor = getAuditorRegistry(warning[\"fiscal_action_designation_auditor\"], USER_ID_ENUM.USER_LOGIN)\r\n      data[\"monitoring_user_id\"] = monitoringAuditor['user_id']\r\n      data[\"monitoring_user_name\"] = monitoringAuditor['user_name']\r\n      data[\"monitoring_user_registration_id\"] = monitoringAuditor['user_registration_id']\r\n      data[\"monitoring_user_login\"] = monitoringAuditor['user_login']\r\n\r\n      data[\"fiscal_action_designation_date\"] = getNowDateTimeString()\r\n      data[\"fiscal_action_designation_auditor\"] = monitoringAuditor['user_name']\r\n      \r\n      let auditors = {}\r\n      \r\n      //Tratamento para os casos de designação sem comando fiscal. \r\n      if (status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO || status === NOTIFICATION_STATUS_ENUM.EM_MONITORAMENTO_HOMOLOGADO ) {\r\n        auditors[EM_MONITORAMENTO] = { 'user_name': EM_MONITORAMENTO_LABEL, 'user_login': EM_MONITORAMENTO_LABEL }\r\n      } else if (status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO || status === NOTIFICATION_STATUS_ENUM.SEM_COMANDO_HOMOLOGADA ) {\r\n        auditors[SEM_COMANDO_FISCAL] = { 'user_name': SEM_COMANDO_FISCAL_LABEL, 'user_login': SEM_COMANDO_FISCAL_LABEL }\r\n      } else if (warning['fiscal_action_auditors']) {\r\n        for (var auditorID of warning['fiscal_action_auditors'].split(\",\")) {\r\n          auditors[auditorID] = getAuditorRegistry(auditorID, USER_ID_ENUM.USER_LOGIN)\r\n        }\r\n      }\r\n      data[\"fiscal_action_auditors\"] = auditors\r\n\r\n    } else {\r\n      //SE A NOTIFICAÇÃO POSSUI STATUS MENOR QUE DESIGNADA E O LOCK ESTÁ DESATIVADO, TODOS OS CAMPOS ESTÃO VAZIOS E O USUÁRIO LOGADO PASSARÁ A SER RESPONSÁVEL PELO MONITORAMENTO\r\n      data[\"monitoring_user_name\"] = getUserLogin() + \": USUÁRIO NÃO CADASTRADO\"\r\n\r\n      if (hasUserLoggedData()) {\r\n        data[\"monitoring_user_registration_id\"] = getUserRegistrationID()\r\n        data[\"monitoring_user_id\"] = getUserID()\r\n        data[\"monitoring_user_name\"] = getUserName()\r\n        data[\"monitoring_user_login\"] = getUserLogin()\r\n      }\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  const openWarningModal = (warning) => {\r\n\r\n\r\n    let data = { ...DESIGNATION_FORM_DATA, fiscal_action_auditors: {} }\r\n    let notificationObj = new Notification(warning)\r\n    setFormData(setEditionData(warning, data))\r\n\r\n    setWarningModalData(notificationObj);\r\n\r\n    toggleModal(0);\r\n\r\n  }\r\n\r\n  const openMapModal = (plate, location) => {\r\n    let modalData = {\r\n      plate: plate,\r\n      location : location\r\n\r\n    }\r\n      setModalData(modalData)\r\n      toggleModalOn(MODAL_TYPE_ENUM.MAP, modalData)\r\n      toggleFetchData()\r\n  }\r\n\r\n  const Local = (props) => {\r\n\r\n    if (props && props.event_json) {\r\n\r\n      let placa = props.event_json['evento_infevento_nrplaca']\r\n      let local = props.event_json['evento_infevento_dsreflocal']\r\n\r\n      return (\r\n        <>\r\n          <div\r\n            className={props.location !== \"null\" && \"underlined_text\"}\r\n            onClick={() => { openMapModal(placa, local) }}\r\n            style={{ cursor: props.location !== \"null\" && \"pointer\", color: '#2322c8' }}\r\n          >\r\n            {props.location}\r\n          </div>\r\n        </>\r\n      )\r\n    } else {\r\n      return \"-\"\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n      printIsMap();\r\n      getCamerasData();\r\n      changeVisto();\r\n      if (wasReloaded) {\r\n        startSSE()\r\n\r\n        setWasReloaded(false)\r\n        setWasReloaded(false)\r\n      }\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n    testAndUnlockWarning(warningsViewed, setWarningsViewed)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    setIndex(0)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabIndex])\r\n\r\n  const FilterEvent = (data_row, field_to_filter) => {\r\n\r\n    if (data_row[field_to_filter].includes('_LPD')) {\r\n\r\n      if (typeCameraFilters.DNIT) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('BR')) {\r\n\r\n      if (typeCameraFilters.PRF) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (data_row[field_to_filter].startsWith('PB')) {\r\n      if (typeCameraFilters.Estadual) {\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    if (!typeCameraFilters.SEMOB) {\r\n\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n  const FilterBar = () => {\r\n    const [filterOptions, setFilterOptions] = useState([\r\n      { label: 'Passagem', value: 'passagem' },\r\n      { label: 'Local', value: 'local' },\r\n      { label: 'UF', value: 'uf' },\r\n      { label: 'Placa', value: 'placa' },\r\n      { label: 'Veículo', value: 'veiculo' },\r\n      { label: 'Modelo', value: 'modelo' },\r\n      { label: 'Alerta', value: 'alerta' },\r\n    ]);\r\n    const [selectedFilter, setSelectedFilter] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n    const handleFilterChange = (event) => {\r\n      setSelectedFilter(event.target.value);\r\n    };\r\n  \r\n    const handleSearchChange = (event) => {\r\n      setSearchTerm(event.target.value);\r\n    };\r\n  \r\n    const filteredData = (data) => {\r\n      if (!selectedFilter || !searchTerm) {\r\n        return data;\r\n      }\r\n  \r\n      const filteredByField = data.filter((item) => {\r\n        const searchValue = searchTerm.toLowerCase();\r\n        const itemValue = item[selectedFilter].toLowerCase();\r\n        return itemValue.includes(searchValue);\r\n      });\r\n  \r\n      return filteredByField;\r\n    };\r\n  const createMapModal = useMemo(() => <LocationTrackingModal show={isModalActive}  googleMapOnLoad={googleMapLoaded} googleMapOnError={googleMapError} toggle={toggleModalOff} data={modalData} fetchData={fetchDataFlag} />, [modalData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            {googleMapError && <div>Não foi possível carregar o GoogleMap.</div>}\r\n            {(googleMapLoaded) ? <Card className=\"card-plain\">\r\n                <CardBody>\r\n                  <div\r\n                    id=\"map\"\r\n                    className=\"map\"\r\n                    style={{ position: \"relative\", overflow: \"hidden\", display: \"flex\" }}\r\n                  >\r\n                    <MapLegend categories={categories} colors={colors} activeCategories={activeMarkers} onClick={markerClick} display={displayLegend} />\r\n                    <GoogleMap\r\n                      mapContainerStyle={containerStyle}\r\n                      center={props.center}\r\n                      zoom={props.zoom}\r\n                      options={mapOptions}\r\n                    >\r\n                      {activeCameras.filter(point => {\r\n                        return !activeMarkers[categories.indexOf(point['category'])]\r\n                      }).map((point, index) => (\r\n                        //Marcação passando ícone\r\n                        <Marker\r\n                          className=\"map-icon\"\r\n                          key={`marker-${index}`}\r\n                          position={{ lat: point['nrlatitude'], lng: point['nrlongitude'] }}\r\n                          onClick={pointClick(index)}\r\n                          zIndex={pointsData[index].active ? categories.length + 1 : categories.length - categories.indexOf(point['category'])}\r\n                          options={{\r\n                            icon: {\r\n                              url: `https://ik.imagekit.io/exi1dv80wm/pin/${pointsData[index].active ? '00ff00' : colors[point['category']].slice(-6)}.png`,\r\n                              scaledSize: {\r\n                                height: 26,\r\n                                width: 21\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </GoogleMap>\r\n\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            : \"\"}\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n                        \r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Tabs names={['Tabela de alertas', 'Tabela de tráfego']} index={[tabIndex, setTabIndex]} />\r\n            <Card style={{ borderTopLeftRadius: '0px' }}>\r\n              <CardBody>\r\n                <InputGroup>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.Estadual}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'Estadual': event.target.checked })}\r\n                    />\r\n                    Estadual\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.PRF}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'PRF': event.target.checked })}\r\n                    />\r\n                    PRF\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.DNIT}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'DNIT': event.target.checked })}\r\n                    />\r\n                    DNIT\r\n                  </InputGroupText>\r\n                  <InputGroupText style={{ backgroundColor: '#51cbce', fontWeight: 'bold', color: 'white', borderColor: '#51cbce', margin: ' 0 30px 0 0', padding: '0 6px' }}>\r\n                    <Input\r\n                      addon\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      type=\"checkbox\"\r\n                      checked={typeCameraFilters.SEMOB}\r\n                      style={{ margin: '0 15px 0 0', transform: 'scale(1.3)' }}\r\n                      onChange={event => setTypeCameraFilters({ ...typeCameraFilters, 'SEMOB': event.target.checked })}\r\n                    />\r\n                    SEMOB\r\n                  </InputGroupText>\r\n                  <div className=\"filter-bar\">\r\n                  <div className=\"filter-options\">\r\n                    <label style={{ color: 'blue', fontWeight: 'bold' }}>Selecionar:</label>\r\n                    <select value={selectedFilter} onChange={handleFilterChange}>\r\n                      {filterOptions.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"search-box\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Pesquisar...\"\r\n                      value={searchTerm}\r\n                      onChange={handleSearchChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                </InputGroup>\r\n                <Card>\r\n                  <CardBody>\r\n                    {tabIndex === 0 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={warnings.filter(warning => FilterEvent(warning, 'evento_infevento_dsreflocal'))}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        pageSize={10}\r\n                        columns={{\r\n                          \"Alerta\": {\r\n                            Func: (props) =>\r\n                              <p                                \r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"nome\"\r\n                          },\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data).toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateObj[0]}<br />{dateObj[1]}</div>\r\n                            },\r\n                            args: \"evento_infevento_dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => {\r\n                              return (\r\n                                <Local location={props.data} event_json={props.row_data} />\r\n                              )\r\n                            },\r\n                            args: \"evento_infevento_dsreflocal\"\r\n                          },\r\n                          \"UF\": \"evento_infevento_sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) =>\r\n                              <p\r\n                                className='links-table'\r\n                                onClick={() => { setModalData(props.row_data); toggleModalPlaca() }}\r\n                              >\r\n                                {props.data}\r\n                              </p>,\r\n                            args: \"evento_infevento_nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"evento_infevento_dstipoveiculo\",\r\n                          \"Modelo\": \"evento_infevento_nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {tabIndex === 1 &&\r\n                      <Table\r\n                        state={[index, setIndex]}\r\n                        data={traffic.filter(event => FilterEvent(event, 'dsreflocal'))}\r\n                        pageSize={100}\r\n                        invalid={[\"NULL\", \"null\", undefined, null, \"\", \"-\", \"0\"]}\r\n                        style={{ fontSize: '0.8rem' }}\r\n                        columns={{\r\n                          \"Passagem\": {\r\n                            Func: (props) => {\r\n                              const dateObj = new Date(props.data)\r\n                              const dateHour = dateObj.toLocaleString(\"pt-BR\").split(' ')\r\n\r\n                              return <div style={{ textAlign: 'center', maxWidth: 80 }}>{dateHour[0]}<br />{dateHour[1]}</div>\r\n                            },\r\n                            args: \"dhregpassagem\"\r\n                          },\r\n                          \"Local\": {\r\n                            Func: (props) => <Local location={props.data} event_json={props.row_data} />,\r\n                            args: \"dsreflocal\"\r\n                          },\r\n                          \"UF\": \"sguf\",\r\n                          \"Placa\": {\r\n                            Func: (props) => {\r\n                              const [modal, setModal] = React.useState(false);\r\n                              const [dataVehicle, setdataVehicle] = React.useState([])\r\n                              const [isErroInPost, setisErroInPost] = React.useState(false)\r\n\r\n                              const ToVehicleRoute = () => {\r\n                                setplaca(props.data)\r\n                              }\r\n\r\n                              const closeModalVehicle = () => {\r\n                                setModal(false)\r\n                              }\r\n\r\n                              function sleep(time) {\r\n                                return new Promise((resolve) => setTimeout(resolve, time));\r\n                              }\r\n\r\n                              const toggleModal = () => {\r\n                                setisErroInPost(false)\r\n                                axiosRetryProxy.post(`${env.apiAddress}/cortex/license/${props.data}`, body).then(res => {\r\n                                  let data_consulta = []\r\n                                  sleep(2000).then(() => {\r\n                                    // Do something after the sleep!\r\n                                    Object.entries(res.data).forEach(([key, value]) => {\r\n\r\n                                      if (key === \"placa\" || key === \"marcaModelo\" || key === \"anoFabricacao\" || key === \"anoModelo\"\r\n                                        || key === \"cor\" || key === \"categoria\" || key === \"especie\" || key === \"tipoVeiculo\" || key === \"ufEmplacamento\"\r\n                                        || key === \"municipioPlaca\") {\r\n                                        data_consulta.push({\r\n                                          \"chave\": key ? ChangeKey(key) : '',\r\n                                          \"valor\": value ? value : ''\r\n                                        })\r\n                                      }\r\n                                    })\r\n                                    setdataVehicle(data_consulta)\r\n                                  });\r\n\r\n                                }).catch((err) => {\r\n                                  sleep(1000).then(() => {\r\n                                    setisErroInPost(true)\r\n                                  });\r\n\r\n                                }).finally(() => {\r\n                                  sleep(1000).then(() => {\r\n                                    setModal(true);\r\n                                  });\r\n\r\n                                })\r\n                              }\r\n\r\n                              return (\r\n                                <>\r\n                                  <div\r\n                                    className=\"underlined_text\"\r\n                                    onClick={toggleModal}\r\n                                    style={{ textAlign: 'center', cursor: \"pointer\" }}\r\n                                  >\r\n                                    {props.data}\r\n                                  </div>\r\n\r\n                                  <Modal isOpen={modal} toggle={toggleModal}>\r\n                                    <ModalHeader toggle={closeModalVehicle}>{`Placa ${props.data}`}</ModalHeader>\r\n                                    <ModalBody>\r\n                                      <ListGroup>\r\n                                        {\r\n                                          (dataVehicle.length && Array.isArray(dataVehicle)) ?\r\n                                            dataVehicle.map((dados, index) => (\r\n                                              <ListGroupItem key={index} className=\"justify-content-between\">\r\n                                                <Row>\r\n                                                  <Col>\r\n                                                    <b>{dados.chave}</b>\r\n                                                  </Col>\r\n                                                  <Col>\r\n                                                    {dados.valor}\r\n                                                  </Col>\r\n                                                </Row>\r\n                                              </ListGroupItem>\r\n                                            ))\r\n                                            :\r\n                                            isErroInPost ?\r\n                                              <Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Alert color=\"danger\">\r\n                                                    Error !\r\n                                                  </Alert>\r\n                                                </Col>\r\n                                              </Row>\r\n                                              :\r\n                                              <Row Row className=\"text-center\">\r\n                                                <Col>\r\n                                                  <Spinner color=\"info\" />\r\n                                                </Col>\r\n                                              </Row>\r\n                                        }\r\n                                      </ListGroup>\r\n                                      {Array.isArray(dataVehicle) && dataVehicle.length > 0 &&\r\n                                        <Row>\r\n                                          <hr></hr>\r\n                                          <Button color=\"primary\" className=\"btn-md\" onClick={ToVehicleRoute}>\r\n                                            Mais Informações\r\n                                          </Button>\r\n                                        </Row>\r\n                                      }\r\n                                    </ModalBody>\r\n                                  </Modal>\r\n                                </>\r\n                              )\r\n                            },\r\n                            args: \"nrplaca\",\r\n                            headerStyle: { textAlign: \"center\" }\r\n                          },\r\n                          \"Veículo\": \"dstipoveiculo\",\r\n                          \"Modelo\": \"nomarcamodelo\"\r\n                        }}\r\n                      />\r\n                    }\r\n                    {activeModal === 0 &&\r\n                      <WarningModal\r\n                        show={true} data={warningModalData} formData={formData} editionMode={false}\r\n                        setFormData={setFormData} toggle={() => toggleModal(-1)} reloadMethod={toggleReload} spinner={spinner}\r\n                      />\r\n                    }\r\n                    {\r\n                      <Modal isOpen={modalPlaca} toggle={toggleModalPlaca}>\r\n                        <ModalHeader toggle={toggleModalPlaca}>{`Placa ${modalData['nrplaca']}}`}</ModalHeader>\r\n                        <ModalBody style={{ justifyContent: 'center', alignContent: 'center', display: 'flex' }}>\r\n                          {/*<img alt=\"Foto da placa\" src=\"https://i.ytimg.com/vi/lmVlZbmNgGw/hqdefault.jpg\" />*/}\r\n                        </ModalBody>\r\n                      </Modal>\r\n                    }\r\n                  </CardBody>\r\n                </Card>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      {modalType === MODAL_TYPE_ENUM.MAP && createMapModal}\r\n    </>\r\n  );\r\n}\r\n\r\nMaps.defaultProps = {\r\n  center: {\r\n    lat: -7.254653852199306,\r\n    lng: -36.69661154766497\r\n  },\r\n  zoom: 4\r\n}}\r\n"]},"metadata":{},"sourceType":"module"}