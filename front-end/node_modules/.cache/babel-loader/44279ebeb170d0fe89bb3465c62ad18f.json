{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\table-elements\\\\TrafficTimestamp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAXIMUM_DELAY = 1000 * 60; //10 Minutos\n\nexport const TrafficTimestamp = props => {\n  const alertShot = new Date(props.data[1]);\n  const dateObj = new Date(props.data[0]);\n  const diffMilliseconds = Math.abs(dateObj - alertShot);\n  const diffMinutes = Math.round(diffMilliseconds / MAXIMUM_DELAY);\n  const fontColor = diffMinutes > 10 ? \"#ff0000\" : \"#000000\";\n  let dateHour = alertShot.toLocaleString(\"pt-BR\").split(', ');\n\n  if (props.isTrafficTimestamp) {\n    dateHour = dateObj.toLocaleString(\"pt-BR\").split(', ');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      color: \"\".concat(fontColor)\n    },\n    children: [dateHour[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 85\n    }, this), dateHour[1]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n_c = TrafficTimestamp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficTimestamp\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/components/table-elements/TrafficTimestamp.js"],"names":["MAXIMUM_DELAY","TrafficTimestamp","props","alertShot","Date","data","dateObj","diffMilliseconds","Math","abs","diffMinutes","round","fontColor","dateHour","toLocaleString","split","isTrafficTimestamp","textAlign","color"],"mappings":";;AAAA,MAAMA,aAAa,GAAG,OAAO,EAA7B,C,CAAgC;;AAEhC,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,QAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,IAAN,CAAW,CAAX,CAAT,CAAlB;AACA,QAAMC,OAAO,GAAG,IAAIF,IAAJ,CAASF,KAAK,CAACG,IAAN,CAAW,CAAX,CAAT,CAAhB;AAEA,QAAME,gBAAgB,GAAGC,IAAI,CAACC,GAAL,CAASH,OAAO,GAAGH,SAAnB,CAAzB;AACA,QAAMO,WAAW,GAAGF,IAAI,CAACG,KAAL,CAAWJ,gBAAgB,GAAIP,aAA/B,CAApB;AACA,QAAMY,SAAS,GAAGF,WAAW,GAAG,EAAd,GAAmB,SAAnB,GAA+B,SAAjD;AAEA,MAAIG,QAAQ,GAAGV,SAAS,CAACW,cAAV,CAAyB,OAAzB,EAAkCC,KAAlC,CAAwC,IAAxC,CAAf;;AACA,MAAIb,KAAK,CAACc,kBAAV,EAA8B;AAC5BH,IAAAA,QAAQ,GAAGP,OAAO,CAACQ,cAAR,CAAuB,OAAvB,EAAgCC,KAAhC,CAAsC,IAAtC,CAAX;AACD;;AAED,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,KAAK,YAAKN,SAAL;AAA5B,KAAZ;AAAA,eAA6DC,QAAQ,CAAC,CAAD,CAArE,eAAyE;AAAA;AAAA;AAAA;AAAA,YAAzE,EAAgFA,QAAQ,CAAC,CAAD,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAdI;KAAMZ,gB","sourcesContent":["const MAXIMUM_DELAY = 1000 * 60 //10 Minutos\r\n\r\nexport const TrafficTimestamp = (props) => {\r\n    const alertShot = new Date(props.data[1]);\r\n    const dateObj = new Date(props.data[0]);\r\n\r\n    const diffMilliseconds = Math.abs(dateObj - alertShot);\r\n    const diffMinutes = Math.round(diffMilliseconds / (MAXIMUM_DELAY));\r\n    const fontColor = diffMinutes > 10 ? \"#ff0000\" : \"#000000\";\r\n\r\n    let dateHour = alertShot.toLocaleString(\"pt-BR\").split(', ')\r\n    if (props.isTrafficTimestamp) {\r\n      dateHour = dateObj.toLocaleString(\"pt-BR\").split(', ')\r\n    }\r\n\r\n    return <div style={{ textAlign: 'center', color: `${fontColor}` }}>{dateHour[0]}<br />{dateHour[1]}</div>\r\n  }"]},"metadata":{},"sourceType":"module"}