{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\common\\\\ErrorBoundary.js\";\nimport React from 'react';\nimport ErrorPage from 'layouts/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      info: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    this.setState({\n      error,\n      info\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(ErrorPage, {\n        error: this.state.error,\n        info: this.state.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/common/ErrorBoundary.js"],"names":["React","ErrorPage","ErrorBoundary","Component","constructor","props","state","hasError","error","info","getDerivedStateFromError","componentDidCatch","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,KAAK,EAAE,IAA1B;AAAgCC,MAAAA,IAAI,EAAE;AAAtC,KAAb;AACD;;AAE8B,SAAxBC,wBAAwB,CAACF,KAAD,EAAQ;AACrC;AACA,WAAO;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDI,EAAAA,iBAAiB,CAACH,KAAD,EAAQC,IAAR,EAAc;AAC7B;AACA,SAAKG,QAAL,CAAc;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,0BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAA7B;AAAoC,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG;AAArD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KANM,CAQP;;;AACA,WAAO,KAAKJ,KAAL,CAAWS,QAAlB;AACD;;AA1ByC;;AA6B5C,eAAeZ,aAAf","sourcesContent":["import React from 'react';\r\nimport ErrorPage from 'layouts/Error';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null, info: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    // You can also log the error to an error reporting service\r\n    this.setState({ error, info });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return (\r\n        <ErrorPage error={this.state.error} info={this.state.info}/>\r\n      );\r\n    }\r\n\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n"]},"metadata":{},"sourceType":"module"}