{"ast":null,"code":"var _jsxFileName = \"C:\\\\aria\\\\cicc-app\\\\front-end\\\\src\\\\views\\\\Issuance\\\\DfeIssuance.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport WarningModal from \"components/modals/WarningModal/WarningModal\";\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\nimport { GroupsContext } from \"context/GroupsContext\";\nimport { AuditorsContext } from \"context/AuditorsContext\";\nimport { NavigationContext } from \"context/NavigationContext\";\nimport { WarningsContext } from \"context/WarningsContext\";\nimport { isLoggedIn, reloadVisibilityGroups } from \"common/SessionUtils\";\nimport { ViewsContext } from \"context/ViewsContext\";\nimport { Notification } from \"common/model/Notification\";\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\nimport useNotification from \"common/hooks/useNotification\";\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\nimport Tabs from \"components/Tabs\";\nimport MdfeWarningTable from \"./tables/MdfeWarningTable\";\nimport NfeWarningTable from \"./tables/NfeWarningTable\";\nimport useAsync from \"common/hooks/useAsync\";\nimport LoadingPage from \"layouts/Loading\";\nimport { delay } from \"common/utils/forms\";\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DfeIssuance() {\n  _s();\n\n  const history = useHistory();\n  const {\n    refresh\n  } = React.useContext(ViewsContext);\n  const {\n    fetchGroupsData,\n    groupsDataMap,\n    getMonitoringGroupOwner,\n    getGroupOwnerData,\n    getGroupSupervisorData\n  } = React.useContext(GroupsContext);\n  const {\n    groupsSimpleMap,\n    fetchGroupsName\n  } = React.useContext(GroupsContext);\n  const {\n    startWarningsViewedSSE\n  } = React.useContext(WarningsUpdateContext);\n  const {\n    auditorsData,\n    getAuditorsData\n  } = React.useContext(AuditorsContext);\n  const {\n    setIsMap\n  } = React.useContext(NavigationContext);\n  const {\n    startSSE,\n    wasReloaded,\n    setWasReloaded\n  } = React.useContext(WarningsContext);\n  const {\n    getAuditorRegistry\n  } = React.useContext(AuditorsContext);\n  const {\n    modalData,\n    setModalData,\n    isModalActive,\n    modalType,\n    toggleModalOn,\n    toggleModalOff\n  } = useModalWithData();\n  const {\n    mountEditionData\n  } = useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData);\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA);\n  const [intervalId, setIntervalId] = React.useState(false);\n  const tabs = ['Alertas de Emissão de MDFE', 'Alertas de Emissão de NFE'];\n  const {\n    loading\n  } = useAsync(async () => {\n    if (wasReloaded && isLoggedIn()) {\n      setIsMap(false);\n      reloadVisibilityGroups();\n\n      if (isEmpty(groupsDataMap)) {\n        await fetchGroupsData();\n      }\n\n      if (isEmpty(groupsSimpleMap)) {\n        await fetchGroupsName();\n      }\n\n      if (isEmpty(auditorsData)) {\n        await getAuditorsData();\n      }\n\n      startWarningsViewedSSE();\n      startSSE();\n      await delay(2000);\n      setWasReloaded(false);\n    }\n  }, [wasReloaded]);\n  React.useEffect(() => {\n    if (isLoggedIn()) {\n      if (intervalId) clearInterval(intervalId);\n      setIntervalId(setInterval(() => {\n        refresh();\n      }, 5 * 60000, 0, true));\n    } else {\n      history.push('/login');\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  const openWarningModal = warning => {\n    let notificationObj = new Notification(warning);\n    setFormData(mountEditionData(notificationObj, \"\"));\n    setModalData(() => notificationObj);\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING);\n  };\n\n  if (loading && wasReloaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              names: tabs,\n              index: [tabIndex, setTabIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(MdfeWarningTable, {\n                  openWarningModal: openWarningModal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), tabIndex === 1 && /*#__PURE__*/_jsxDEV(NfeWarningTable, {\n                  openWarningModal: openWarningModal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), modalType === MODAL_TYPE_ENUM.WARNING && /*#__PURE__*/_jsxDEV(WarningModal, {\n        show: isModalActive,\n        toggle: toggleModalOff,\n        data: modalData,\n        formData: formData,\n        setFormData: setFormData,\n        reloadMethod: refresh,\n        tableView: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(DfeIssuance, \"JYhf2OW6IDWW7sHGTj+ykqIO7LA=\", false, function () {\n  return [useHistory, useModalWithData, useNotification, useAsync];\n});\n\n_c = DfeIssuance;\n\nvar _c;\n\n$RefreshReg$(_c, \"DfeIssuance\");","map":{"version":3,"sources":["C:/aria/cicc-app/front-end/src/views/Issuance/DfeIssuance.js"],"names":["React","Card","CardBody","Row","Col","useHistory","WarningModal","MODAL_TYPE_ENUM","GroupsContext","AuditorsContext","NavigationContext","WarningsContext","isLoggedIn","reloadVisibilityGroups","ViewsContext","Notification","DESIGNATION_FORM_DATA","useNotification","useModalWithData","Tabs","MdfeWarningTable","NfeWarningTable","useAsync","LoadingPage","delay","WarningsUpdateContext","isEmpty","DfeIssuance","history","refresh","useContext","fetchGroupsData","groupsDataMap","getMonitoringGroupOwner","getGroupOwnerData","getGroupSupervisorData","groupsSimpleMap","fetchGroupsName","startWarningsViewedSSE","auditorsData","getAuditorsData","setIsMap","startSSE","wasReloaded","setWasReloaded","getAuditorRegistry","modalData","setModalData","isModalActive","modalType","toggleModalOn","toggleModalOff","mountEditionData","tabIndex","setTabIndex","useState","formData","setFormData","intervalId","setIntervalId","tabs","loading","useEffect","clearInterval","setInterval","push","openWarningModal","warning","notificationObj","WARNING"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport WarningModal from \"components/modals/WarningModal/WarningModal\";\r\nimport MODAL_TYPE_ENUM from \"common/enumerators/ModalTypeEnum\";\r\n\r\nimport { GroupsContext } from \"context/GroupsContext\";\r\nimport { AuditorsContext } from \"context/AuditorsContext\";\r\nimport { NavigationContext } from \"context/NavigationContext\";\r\nimport { WarningsContext } from \"context/WarningsContext\";\r\nimport { isLoggedIn, reloadVisibilityGroups } from \"common/SessionUtils\";\r\nimport { ViewsContext } from \"context/ViewsContext\";\r\nimport { Notification } from \"common/model/Notification\";\r\nimport { DESIGNATION_FORM_DATA } from \"components/modals/WarningModal/utils/constants\";\r\n\r\nimport useNotification from \"common/hooks/useNotification\";\r\nimport { useModalWithData } from \"common/hooks/useModalWithData\";\r\nimport Tabs from \"components/Tabs\";\r\nimport MdfeWarningTable from \"./tables/MdfeWarningTable\";\r\nimport NfeWarningTable from \"./tables/NfeWarningTable\";\r\nimport useAsync from \"common/hooks/useAsync\";\r\nimport LoadingPage from \"layouts/Loading\";\r\nimport { delay } from \"common/utils/forms\";\r\nimport { WarningsUpdateContext } from \"context/WarningsUpdateContext\";\r\nimport { isEmpty } from \"common/utils/collections\";\r\n\r\n\r\n\r\n\r\nexport default function DfeIssuance() {\r\n  const history = useHistory()\r\n  const { refresh} = React.useContext(ViewsContext)\r\n  const { fetchGroupsData, groupsDataMap, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData } = React.useContext(GroupsContext);\r\n  const { groupsSimpleMap, fetchGroupsName } = React.useContext(GroupsContext);\r\n  const { startWarningsViewedSSE } = React.useContext(WarningsUpdateContext)\r\n  const { auditorsData, getAuditorsData } = React.useContext(AuditorsContext);\r\n  const { setIsMap } = React.useContext(NavigationContext);\r\n  const { startSSE, wasReloaded, setWasReloaded } = React.useContext(WarningsContext);\r\n  const { getAuditorRegistry } = React.useContext(AuditorsContext);\r\n  const { modalData, setModalData, isModalActive, modalType, toggleModalOn, toggleModalOff } = useModalWithData()\r\n  const { mountEditionData } = useNotification(getAuditorRegistry, getMonitoringGroupOwner, getGroupOwnerData, getGroupSupervisorData)\r\n\r\n  const [tabIndex, setTabIndex] = React.useState(0)\r\n  const [formData, setFormData] = React.useState(DESIGNATION_FORM_DATA)\r\n  const [intervalId, setIntervalId] = React.useState(false)\r\n\r\n  const tabs = ['Alertas de Emissão de MDFE', 'Alertas de Emissão de NFE']\r\n\r\n  const { loading } = useAsync(async () => {\r\n    if (wasReloaded && isLoggedIn()) {\r\n      setIsMap(false);\r\n      reloadVisibilityGroups()\r\n\r\n      if (isEmpty(groupsDataMap)) {\r\n        await fetchGroupsData()\r\n      }\r\n\r\n      if (isEmpty(groupsSimpleMap)) {\r\n        await fetchGroupsName()\r\n      }\r\n\r\n      if (isEmpty(auditorsData)) {\r\n        await getAuditorsData();\r\n      }\r\n\r\n      startWarningsViewedSSE()\r\n      startSSE()\r\n\r\n      await delay(2000);\r\n      setWasReloaded(false)\r\n    }\r\n  }, [wasReloaded]);\r\n\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn()) {\r\n\r\n      if (intervalId)\r\n        clearInterval(intervalId)\r\n\r\n      setIntervalId(setInterval(() => { refresh() }, (5 * 60000), 0, true))\r\n\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n\r\n  const openWarningModal = (warning) => {\r\n    let notificationObj = new Notification(warning)\r\n    setFormData(mountEditionData(notificationObj, \"\"))\r\n    setModalData(() => notificationObj);\r\n    toggleModalOn(MODAL_TYPE_ENUM.WARNING)\r\n\r\n  }\r\n\r\n  if (loading && wasReloaded) {\r\n    return <LoadingPage />\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Tabs names={tabs} index={[tabIndex, setTabIndex]} />\r\n              <Card>\r\n                <CardBody>\r\n                  {tabIndex === 0 &&\r\n                    <MdfeWarningTable openWarningModal={openWarningModal} />\r\n                  }\r\n\r\n                  {tabIndex === 1 &&\r\n                    <NfeWarningTable openWarningModal={openWarningModal} />\r\n                  }\r\n\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {modalType === MODAL_TYPE_ENUM.WARNING && <WarningModal show={isModalActive} toggle={toggleModalOff} data={modalData} formData={formData} setFormData={setFormData} reloadMethod={refresh} tableView={false} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}