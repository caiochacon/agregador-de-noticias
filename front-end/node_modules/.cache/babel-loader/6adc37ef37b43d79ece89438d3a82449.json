{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\buttons\\\\ModalEditionButtons.js\";\nimport React from \"react\";\nimport { Button, Col, Row } from 'reactstrap';\nimport EditionButtons from \"./EditionButtons\";\nimport PauseButton from \"./PauseButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalEditionButtons(_ref) {\n  let {\n    data,\n    id,\n    creator,\n    modalReadonlyMode,\n    setModalReadonlyMode,\n    isDisabled,\n    editionAction,\n    deleteAction,\n    saveAction,\n    cancelAction,\n    includePauseButton,\n    pauseAction,\n    resumeAction\n  } = _ref;\n\n  if (modalReadonlyMode) {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        'textAlign': 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(EditionButtons, {\n        large: true,\n        isDisabled: isDisabled,\n        isModal: true,\n        id: id,\n        data: data,\n        creator: creator,\n        modalReadonlyMode: modalReadonlyMode,\n        setModalReadonlyMode: setModalReadonlyMode,\n        editionAction: editionAction,\n        deleteAction: deleteAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), includePauseButton && /*#__PURE__*/_jsxDEV(PauseButton, {\n        data: data,\n        creator: creator,\n        isDisabled: isDisabled,\n        pauseAction: pauseAction,\n        resumeAction: resumeAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          'textAlign': 'end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: saveAction,\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: () => {\n            cancelAction();\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n}\n_c = ModalEditionButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEditionButtons\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/components/buttons/ModalEditionButtons.js"],"names":["React","Button","Col","Row","EditionButtons","PauseButton","ModalEditionButtons","data","id","creator","modalReadonlyMode","setModalReadonlyMode","isDisabled","editionAction","deleteAction","saveAction","cancelAction","includePauseButton","pauseAction","resumeAction"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EACYC,GADZ,EACiBC,GADjB,QAEO,YAFP;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAMA,eAAe,SAASC,mBAAT,OAAgN;AAAA,MAAnL;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,iBAArB;AAAwCC,IAAAA,oBAAxC;AAA8DC,IAAAA,UAA9D;AAA0EC,IAAAA,aAA1E;AAAyFC,IAAAA,YAAzF;AAAuGC,IAAAA,UAAvG;AAAmHC,IAAAA,YAAnH;AAAiIC,IAAAA,kBAAjI;AAAqJC,IAAAA,WAArJ;AAAkKC,IAAAA;AAAlK,GAAmL;;AAE3N,MAAIT,iBAAJ,EAAuB;AACrB,wBACE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAE,qBAAa;AAAf,OAAZ;AAAA,8BAEE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,IAAvB;AACI,QAAA,UAAU,EAAEE,UADhB;AAC4B,QAAA,OAAO,EAAE,IADrC;AAC2C,QAAA,EAAE,EAAEJ,EAD/C;AACmD,QAAA,IAAI,EAAED,IADzD;AAC+D,QAAA,OAAO,EAAEE,OADxE;AAEI,QAAA,iBAAiB,EAAEC,iBAFvB;AAE0C,QAAA,oBAAoB,EAAEC,oBAFhE;AAGI,QAAA,aAAa,EAAEE,aAHnB;AAGkC,QAAA,YAAY,EAAEC;AAHhD;AAAA;AAAA;AAAA;AAAA,cAFF,EAOGG,kBAAkB,iBAAI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEV,IAAnB;AAAyB,QAAA,OAAO,EAAEE,OAAlC;AAA2C,QAAA,UAAU,EAAEG,UAAvD;AAAmE,QAAA,WAAW,EAAEM,WAAhF;AAA6F,QAAA,YAAY,EAAEC;AAA3G;AAAA;AAAA;AAAA;AAAA,cAPzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD,MAaO;AACL,wBACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAE,uBAAa;AAAf,SAAZ;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAEJ,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,GAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,OAAO,EAAE,MAAM;AAAEC,YAAAA,YAAY;AAAI,WAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;AAGJ;KAvCuBV,mB","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n    Button, Col, Row,\r\n} from 'reactstrap';\r\nimport EditionButtons from \"./EditionButtons\";\r\nimport PauseButton from \"./PauseButton\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function ModalEditionButtons({ data, id, creator, modalReadonlyMode, setModalReadonlyMode, isDisabled, editionAction, deleteAction, saveAction, cancelAction, includePauseButton, pauseAction, resumeAction  }) {\r\n\r\n    if (modalReadonlyMode) {\r\n      return (\r\n        <Row style={{ 'textAlign': 'center' }}>\r\n          \r\n          <EditionButtons large={true} \r\n              isDisabled={isDisabled} isModal={true} id={id} data={data} creator={creator}\r\n              modalReadonlyMode={modalReadonlyMode} setModalReadonlyMode={setModalReadonlyMode} \r\n              editionAction={editionAction} deleteAction={deleteAction}\r\n          />\r\n          {includePauseButton && <PauseButton data={data} creator={creator} isDisabled={isDisabled} pauseAction={pauseAction} resumeAction={resumeAction}  />}      \r\n          \r\n        </Row>\r\n      )\r\n    } else {\r\n      return (\r\n        <Row>\r\n          <Col style={{ 'textAlign': 'end' }}>\r\n            <Button\r\n              color='primary'\r\n              onClick={saveAction}\r\n            >\r\n              Salvar\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              color='danger'\r\n              onClick={() => { cancelAction() }}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}