{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\OneDrive\\\\Documentos\\\\cicc-app\\\\front-end\\\\src\\\\components\\\\table-elements\\\\Warning.js\";\nimport { isEmpty } from \"common/utils/collections\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Warning(_ref) {\n  let {\n    data,\n    toggleModal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !isEmpty(data) && \"underlined_text\",\n      style: {\n        maxWidth: 110,\n        color: '#2322c8',\n        cursor: \"pointer\"\n      },\n      onClick: () => {\n        toggleModal(data);\n      },\n      children: !isEmpty(data) ? data['nome'] : \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Warning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Warning\");","map":{"version":3,"sources":["C:/Users/rodri/OneDrive/Documentos/cicc-app/front-end/src/components/table-elements/Warning.js"],"names":["isEmpty","Warning","data","toggleModal","maxWidth","color","cursor"],"mappings":";AAAA,SAASA,OAAT,QAAwB,0BAAxB;;;AAEA,eAAe,SAASC,OAAT,OAAuC;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;AAClD,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAE,CAACH,OAAO,CAACE,IAAD,CAAR,IAAkB,iBAD/B;AAEE,MAAA,KAAK,EAAE;AAAEE,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE,SAAxB;AAAmCC,QAAAA,MAAM,EAAE;AAA3C,OAFT;AAGE,MAAA,OAAO,EAAE,MAAM;AAAEH,QAAAA,WAAW,CAACD,IAAD,CAAX;AAAmB,OAHtC;AAAA,gBAIG,CAACF,OAAO,CAACE,IAAD,CAAR,GAAiBA,IAAI,CAAC,MAAD,CAArB,GAAgC;AAJnC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD;KAXqBD,O","sourcesContent":["import { isEmpty } from \"common/utils/collections\"\r\n\r\nexport default function Warning({ data, toggleModal}) {\r\n    return (\r\n      <>\r\n        <div\r\n          className={!isEmpty(data) && \"underlined_text\"}\r\n          style={{ maxWidth: 110, color: '#2322c8', cursor: \"pointer\" }}\r\n          onClick={() => { toggleModal(data) }}>\r\n          {!isEmpty(data) ? data['nome'] : \"-\"}\r\n        </div>\r\n      </>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}